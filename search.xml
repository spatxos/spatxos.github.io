<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>简单交叉编译学习</title>
      <link href="/2022/08/02/cnblogs/16544176/"/>
      <url>/2022/08/02/cnblogs/16544176/</url>
      
        <content type="html"><![CDATA[<h2 id="交叉编译"><a href="#交叉编译" class="headerlink" title="交叉编译"></a>交叉编译</h2><p>交叉编译是在一个平台上生成另一个平台上的可执行代码。 同一个体系结构可以运行不同的操作系统；同样，同一个操作系统也可以在不同的体系结构上运行。<br>通常是自己的电脑写好代码编译之后发到嵌入式设备或者盒子之类的去执行，或者另一个版本系统没有的东西，例如opencv，从有的系统版本编译到没有的系统版本中</p><h2 id="本文目标"><a href="#本文目标" class="headerlink" title="本文目标"></a>本文目标</h2><p>在x86_64服务器上编译一个arm或者aarch64的文件，并且在对应的机器上可以执行</p><h2 id="简单概念了解（来源）"><a href="#简单概念了解（来源）" class="headerlink" title="简单概念了解（来源）"></a>简单概念了解（<a href="https://cloud.tencent.com/developer/article/1571937">来源</a>）</h2><ul><li>GCC 的命名规则为：arch [-vendor] [-os] [-(gnu)eabi]-gcc<br> 比如 arm-linux-gnueabi-gcc ， arm-none-eabi-gcc， aarch64-linux-gnu-gcc<ol><li>arch：芯片架构，比如 32 位的 Arm 架构对应的 arch 为 arm，64 位的 Arm 架构对应的 arch 为 aarch64</li><li>vendor ：工具链提供商，大部分工具链名字里面都没有包含这部分</li><li>os ：编译出来的可执行文件(目标文件)针对的操作系统，比如 Linux</li></ol></li><li> arm-none-eabi-gcc 一般适用用于 Arm Cortex-M/Cortex-R 平台，它使用的是 newlib 库</li><li> arm-linux-gnueabi-gcc 和 aarch64-linux-gnu-gcc 适用于 Arm Cortex-A 系列芯片，前者针对 32 位芯片，后者针对 64 位芯片，它使用的是 glibc 库。可以用来编译 u-boot、linux kernel 以及应用程序</li><li> 32 位的 Arm 和 64 位的 Arm，它们的指令集是不同的，所以需要使用不同的工具链。当然，Arm64 为了保证前向兼容，提供了一个 32 位的兼容模式，所以我们用 arm-linux-gnueabi-gcc 编译的应用程序也是可以直接在Arm64 的系统上运行的，但是 Linux Kernel 和 U-Boot 就不行，除非你提前把 CPU 切换到 32 位模式。曾经有个项目使用了一颗四核的 Arm64 芯片，但是内存只有64M，为了节省空间，在 CPU 运行到 U-Boot 之前，我们就把它切到了 32 位模式，后面的 U-Boot、Linux Kernel，应用全部都用 32 位编译，加上 Thumb 指令集，节省了不少空间</li><li> make：类似批处理的程序，来批处理编译源文件</li><li> makefile：make批处理编译规则文件</li><li> cmake：读入所有源文件之后，自动生成makefile</li><li> cmakelist：cmake所依据的规则<br><img src="/cnblogs/16544176/789895-20220802155714545-1504781850.png" class="lazyload placeholder" data-srcset="/cnblogs/16544176/789895-20220802155714545-1504781850.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"><br><a href="https://blog.csdn.net/weixin_42491857/article/details/80741060">图片来源</a></li></ul><h2 id="工具链的下载安装"><a href="#工具链的下载安装" class="headerlink" title="工具链的下载安装"></a>工具链的下载安装</h2><ul><li>下载<br>推荐直接使用国内的镜像下载<pre class="line-numbers language-none"><code class="language-none">## 来源https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;armbian-releases&#x2F;_toolchain&#x2F;   &#x2F;&#x2F;对比原文的少了一个s，清华把文件库路径进行了整理wget https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;armbian-releases&#x2F;_toolchain&#x2F;gcc-linaro-6.3.1-2017.02-x86_64_arm-linux-gnueabihf.tar.xzwget https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;armbian-releases&#x2F;_toolchain&#x2F;gcc-linaro-6.4.1-2017.11-x86_64_aarch64-linux-gnu.tar.xz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><a href="https://www.cnblogs.com/xiaotlili/p/3306100.html">名词解释来源</a><ul><li> abi：二进制应用程序接口，允许编译好的目标代码在使用兼容ABI的系统中无需改动就能运行</li><li> eabi：嵌入式的abi，可以看作是一种简化的abi，体积小，运行快，适合嵌入式设备的</li><li> gnueabi：The GNU C compiler for armel architecture,适用于armel架构 针对旧的 32 位 ARM 处理器，而不支持硬件浮点单元（FPU）</li><li> gnueabihf: The GNU C compiler for armhf architecture,适用于armhf架构，仅适用于较新的 32 位 ARM 处理器，其至少实现了 ARMv7 架构，且支持 ARM 矢量浮点规范（VFPv3）<br>第 3 版，开启需要硬件的支持，在Debian的wiki上要求ARMv7 CPU、Thumb-2指令集以及VFP3D16浮点处理器。</li><li> arm64： 适用于 64 位 ARM 处理器，其至少实现了 ARMv8 架构</li></ul></li></ul><p>gnueabi和gnueabihf其实是gcc的选项-mfloat-abi的默认值不同，gcc的选项-mfloat-abi有三种值soft,softfp,hard(其中后两者都要求arm里有fpu浮点运算单元,soft与后两者是兼容的，但softfp和hard两种模式互不兼容)：</p><ol><li>soft   : 不用fpu进行浮点计算，即使有fpu浮点运算单元也不用,而是使用软件模式。</li><li>softfp : armel架构(对应的编译器为gcc-arm-linux-gnueabi)采用的默认值，用fpu计算，但是传参数用普通寄存器传，这样中断的时候，只需要保存普通寄存器，中断负荷小，但是参数需要转换成浮点的再计算。</li><li>hard   : armhf架构(对应的编译器gcc-arm-linux-gnueabihf)采用的默认值，用fpu计算，传参数也用fpu中的浮点寄存器传，省去了转换, 性能最好，但是中断负荷高。</li></ol><ul><li>解压<pre class="line-numbers language-none"><code class="language-none">xz -d gcc-linaro-6.3.1-2017.02-x86_64_arm-linux-gnueabihf.tar.xzxz -d gcc-linaro-6.4.1-2017.11-x86_64_aarch64-linux-gnu.tar.xz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li>安装<pre class="line-numbers language-none"><code class="language-none">sudo mkdir -p &#x2F;usr&#x2F;local&#x2F;toolchain  &#x2F;&#x2F;目录可以更改，但是更改之后后续的目录也需要一起更改tar -xvf gcc-linaro-6.3.1-2017.02-x86_64_arm-linux-gnueabihf.tar -C &#x2F;usr&#x2F;local&#x2F;toolchain&#x2F;sudo tar -xvf gcc-linaro-6.4.1-2017.11-x86_64_aarch64-linux-gnu.tar -C &#x2F;usr&#x2F;local&#x2F;toolchain&#x2F;ls &#x2F;usr&#x2F;local&#x2F;toolchain&#x2F;&#x2F;&#x2F;输出gcc-linaro-6.3.1-2017.02-x86_64_arm-linux-gnueabihf  gcc-linaro-6.4.1-2017.11-x86_64_aarch64-linux-gnu<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>添加环境变量<pre class="line-numbers language-none"><code class="language-none">vim ~&#x2F;.bashrcPATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;toolchain&#x2F;gcc-linaro-6.3.1-2017.02-x86_64_arm-linux-gnueabihf&#x2F;bin:&#x2F;usr&#x2F;local&#x2F;toolchain&#x2F;gcc-linaro-6.4.1-2017.11-x86_64_aarch64-linux-gnu&#x2F;bin &#x2F;&#x2F;将这句话加到文件的末尾source ~&#x2F;.bashrc &#x2F;&#x2F;使配置生效arm-linux-gnueabihf-gcc -v &#x2F;&#x2F;输出gcc的版本号aarch64-linux-gnu-gcc -v &#x2F;&#x2F;输出gcc的版本号<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2></li><li>我们在<code>/root</code>下添加一个c文件并写入内容<pre class="line-numbers language-none"><code class="language-none">sudo cd &#x2F;root &amp;&amp; cat &lt;&lt; EOF &gt; hello.c#include &lt;stdio.h&gt;int main()&#123;  printf(&quot;hello world \n&quot;);  return 0;&#125;EOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>执行编译<br>make编译和arm-linux-gnueabihf- 编译是一个效果，make命令执行的时候会去找makefile，在makefile中找到需要编译的版本，然后去执行对应的编译命令，而arm-linux-gnueabihf-这种是直接指定了编译版本<pre class="line-numbers language-none"><code class="language-none">arm-linux-gnueabihf-gcc hello.c -o armHello &#x2F;&#x2F;编译arm版本的armHello文件，在arm服务器上可以使用.&#x2F;armHello执行aarch64-linux-gnu-gcc hello.c -o aarch64Hello &#x2F;&#x2F;编译aarch64版本的aarch64Hello文件，在aarch64服务器上可以使用.&#x2F;aarch64Hello执行<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><h2 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h2><ul><li>上传文件到指定的服务器<pre class="line-numbers language-none"><code class="language-none">scp -P 22 &#x2F;root&#x2F;armHello root@192.168.1.66:&#x2F;root&#x2F;armHello  &#x2F;&#x2F;-P 22 可以省略，指定端口号，假设192.168.1.66是arm的服务器,需要输入登陆密码ssh root@192.168.1.66 &#x2F;&#x2F;输入密码登陆cd &#x2F;root &amp;&amp; .&#x2F;armHello## aarch64Hello测试执行也是上面的顺序，最后的输出应该是hello world<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="小白学习，错误之处欢迎指正"><a href="#小白学习，错误之处欢迎指正" class="headerlink" title="小白学习，错误之处欢迎指正"></a>小白学习，错误之处欢迎指正</h4><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://cloud.tencent.com/developer/article/1571937">https://cloud.tencent.com/developer/article/1571937</a><br><a href="https://www.runoob.com/linux/linux-comm-scp.html">https://www.runoob.com/linux/linux-comm-scp.html</a><br><a href="https://blog.csdn.net/forgetjoker/article/details/116295386">https://blog.csdn.net/forgetjoker/article/details/116295386</a><br><a href="https://zhuanlan.zhihu.com/p/340444117">https://zhuanlan.zhihu.com/p/340444117</a> //推荐阅读<br><a href="https://openskill.cn/article/1780">https://openskill.cn/article/1780</a> //推荐阅读<br><a href="https://www.cnblogs.com/xiaotlili/p/3306100.html">https://www.cnblogs.com/xiaotlili/p/3306100.html</a> //推荐阅读<br><a href="https://www.cnblogs.com/zhangjiankun/p/4852899.html">https://www.cnblogs.com/zhangjiankun/p/4852899.html</a> //推荐阅读</p>]]></content>
      
      
      
        <tags>
            
            <tag> 交叉编译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go-zero单体服务使用泛型简化注册Handler路由</title>
      <link href="/2022/07/27/cnblogs/16524742/"/>
      <url>/2022/07/27/cnblogs/16524742/</url>
      
        <content type="html"><![CDATA[<h2 id="一、Golang环境安装及配置Go-Module"><a href="#一、Golang环境安装及配置Go-Module" class="headerlink" title="一、Golang环境安装及配置Go Module"></a>一、Golang环境安装及配置Go Module</h2><p><a href="https://go-zero.dev/cn/docs/prepare/golang-install">https://go-zero.dev/cn/docs/prepare/golang-install</a></p><h3 id="mac-OS安装Go"><a href="#mac-OS安装Go" class="headerlink" title="mac OS安装Go#"></a>mac OS安装Go#</h3><ul><li>下载并安装Go for Mac</li><li>验证安装结果<pre class="line-numbers language-none"><code class="language-none">$ go versiongo version go1.15.1 darwin&#x2F;amd64<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="linux-安装Go"><a href="#linux-安装Go" class="headerlink" title="linux 安装Go#"></a>linux 安装Go#</h3></li><li>下载Go for Linux</li><li>解压压缩包至/usr/local<pre class="line-numbers language-none"><code class="language-none">$ tar -C &#x2F;usr&#x2F;local -xzf go1.15.8.linux-amd64.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>添加/usr/local/go/bin到环境变量<pre class="line-numbers language-none"><code class="language-none">$ $HOME&#x2F;.profile$ export PATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;go&#x2F;bin$ source $HOME&#x2F;.profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>验证安装结果<pre class="line-numbers language-none"><code class="language-none">$ go versiongo version go1.15.1 linux&#x2F;amd64<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="Windows安装Go"><a href="#Windows安装Go" class="headerlink" title="Windows安装Go#"></a>Windows安装Go#</h3></li><li>下载并安装Go for Windows</li><li>验证安装结果<pre class="line-numbers language-none"><code class="language-none">$ go versiongo version go1.15.1 windows&#x2F;amd64<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="MODULE配置"><a href="#MODULE配置" class="headerlink" title="MODULE配置"></a>MODULE配置</h3>Go Module是Golang管理依赖性的方式，像Java中的Maven，Android中的Gradle类似。</li><li>查看GO111MODULE开启情况<pre class="line-numbers language-none"><code class="language-none">$ go env GO111MODULEon<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li>开启GO111MODULE，如果已开启（即执行go env GO111MODULE结果为on）请跳过。<pre class="line-numbers language-none"><code class="language-none">$ go env -w GO111MODULE&#x3D;&quot;on&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>设置GOPROXY<pre class="line-numbers language-none"><code class="language-none">$ go env -w GOPROXY&#x3D;https:&#x2F;&#x2F;goproxy.cn<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>设置GOMODCACHE<pre class="line-numbers language-none"><code class="language-none">查看GOMODCACHE<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>$ go env GOMODCACHE</li><li>如果目录不为空或者/dev/null，请跳过。<pre class="line-numbers language-none"><code class="language-none">go env -w GOMODCACHE&#x3D;$GOPATH&#x2F;pkg&#x2F;mod<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="二、Goctl-安装"><a href="#二、Goctl-安装" class="headerlink" title="二、Goctl 安装"></a>二、Goctl 安装</h2>Goctl在go-zero项目开发着有着很大的作用，其可以有效的帮助开发者大大提高开发效率，减少代码的出错率，缩短业务开发的工作量，更多的Goctl的介绍请阅读<a href="https://go-zero.dev/cn/docs/goctl/goctl">Goctl介绍</a></li><li>安装(mac&amp;linux)<pre class="line-numbers language-none"><code class="language-none">### Go 1.15 及之前版本GO111MODULE&#x3D;on GOPROXY&#x3D;https:&#x2F;&#x2F;goproxy.cn&#x2F;,direct go get -u github.com&#x2F;zeromicro&#x2F;go-zero&#x2F;tools&#x2F;goctl@latest### Go 1.16 及以后版本GOPROXY&#x3D;https:&#x2F;&#x2F;goproxy.cn&#x2F;,direct go install github.com&#x2F;zeromicro&#x2F;go-zero&#x2F;tools&#x2F;goctl@latest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>安装(windows)<pre class="line-numbers language-none"><code class="language-none">go install github.com&#x2F;zeromicro&#x2F;go-zero&#x2F;tools&#x2F;goctl@latest<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>环境变量检测(mac&amp;linux)<br>go get 下载编译后的二进制文件位于 \$GOPATH/bin 目录下，要确保 $GOPATH/bin已经添加到环境变量。<pre class="line-numbers language-none"><code class="language-none">sudo vim &#x2F;etc&#x2F;paths &#x2F;&#x2F;添加环境变量<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>在最后一行添加如下内容 //$GOPATH 为你本机上的文件地址<pre class="line-numbers language-none"><code class="language-none">$GOPATH&#x2F;bin <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>安装结果验证<pre class="line-numbers language-none"><code class="language-none">$ goctl -vgoctl version 1.1.4 darwin&#x2F;amd64<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="二、初始化go-zero"><a href="#二、初始化go-zero" class="headerlink" title="二、初始化go-zero"></a>二、初始化go-zero</h2></li><li><a href="https://go-zero.dev/cn/docs/introduction/">快速生成 api 服务</a><pre class="line-numbers language-none"><code class="language-none">goctl api new greetcd greetgo mod initgo mod tidygo run greet.go -f etc&#x2F;greet-api.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>默认侦听在 8888 端口<br>侦听端口可以在<code>greet-api.yaml</code>配置文件里修改，此时，可以通过 curl 请求，或者直接在浏览器中打开<code>http://localhost:8888/from/you</code><pre class="line-numbers language-none"><code class="language-none">$ curl -i http:&#x2F;&#x2F;localhost:8888&#x2F;from&#x2F;youHTTP&#x2F;1.1 200 OKContent-Type: application&#x2F;json; charset&#x3D;utf-8Traceparent: 00-45fa9e7a7c505bad3a53a024e425ace9-eb5787234cf3e308-00Date: Thu, 22 Oct 2020 14:03:18 GMTContent-Length: 14null<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>greet服务的目录结构<pre class="line-numbers language-none"><code class="language-none">$ tree greetgreet├── etc│   └── greet-api.yaml├── greet.api├── greet.go└── internal    ├── config    │   └── config.go    ├── handler    │   ├── greethandler.go    │   └── routes.go    ├── logic    │   └── greetlogic.go    ├── svc    │   └── servicecontext.go    └── types        └── types.go<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、查看注册Handler路由流程"><a href="#三、查看注册Handler路由流程" class="headerlink" title="三、查看注册Handler路由流程"></a>三、查看注册Handler路由流程</h2></li><li>greet.go<pre class="line-numbers language-none"><code class="language-none">var configFile &#x3D; flag.String(&quot;f&quot;, &quot;etc&#x2F;greet-api.yaml&quot;, &quot;the config file&quot;)func main() &#123;flag.Parse()var c config.Configconf.MustLoad(*configFile, &amp;c)server :&#x3D; rest.MustNewServer(c.RestConf)defer server.Stop()        &#x2F;&#x2F;上面的都是加载配置什么的ctx :&#x3D; svc.NewServiceContext(c)handler.RegisterHandlers(server, ctx) &#x2F;&#x2F;此方法是注册路由和路由映射Handler，重点在这里fmt.Printf(&quot;Starting server at %s:%d...\n&quot;, c.Host, c.Port)server.Start()&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>RegisterHandlers在<code>internal\handler\routes.go</code>中<pre class="line-numbers language-none"><code class="language-none">func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) &#123;   server.AddRoutes( &#x2F;&#x2F;往rest.Server中添加路由[]rest.Route&#123; &#x2F;&#x2F;路由数组   &#123;      Method:  http.MethodGet,      Path:    &quot;&#x2F;from&#x2F;:name&quot;, &#x2F;&#x2F;路由      Handler: GreetHandler(serverCtx),&#x2F;&#x2F;当前路由的处理Handler   &#125;,&#125;,   )&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>GreetHandler在<code>internal\handler\greethandler.go</code>中<pre class="line-numbers language-none"><code class="language-none">func GreetHandler(ctx *svc.ServiceContext) http.HandlerFunc &#123;return func(w http.ResponseWriter, r *http.Request) &#123;1.var req types.Request2.if err :&#x3D; httpx.Parse(r, &amp;req); err !&#x3D; nil &#123; &#x2F;&#x2F;请求的错误判断，这个可以不用管3.httpx.Error(w, err)4.return5.&#125;l :&#x3D; logic.NewGreetLogic(r.Context(), ctx) &#x2F;&#x2F;GreetHandler处理函数将请求转发到了GreetLogic中，调用NewGreetLogic进行结构体的初始化resp, err :&#x3D; l.Greet(req) &#x2F;&#x2F;然后调用Greet来进行处理请求，所以我们在GreetLogic.Greet方法中可以看到一句话&#x2F;&#x2F; todo: add your logic here and delete this lineif err !&#x3D; nil &#123;httpx.Error(w, err)&#125; else &#123;httpx.OkJson(w, resp)&#125;&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四、对注册Handler路由进行简化"><a href="#四、对注册Handler路由进行简化" class="headerlink" title="四、对注册Handler路由进行简化"></a>四、对注册Handler路由进行简化</h2><h3 id="项目文件的增加"><a href="#项目文件的增加" class="headerlink" title="项目文件的增加"></a>项目文件的增加</h3>在路由注册时，我们如果服务越加越多，那么相对应的<code>func xxxxHandler(ctx *svc.ServiceContext) http.HandlerFunc</code>就要进行多次的添加，并且这个方法体内部1到5行是属于额外的重复添加<br>例如：我们添加一个<code>customlogic.go</code><br>按照命名的正确和规范性，需要在<code>internal\logic</code>目录下添加customlogic.go文件，然后在<code>internal\handler</code>目录下添加customhandler.go文件，并且两个文件都添加相对应的结构体和函数等，最后在<code>routes.go</code>中再添加一次<pre class="line-numbers language-none"><code class="language-none">&#123;    Method:  http.MethodGet,    Path:    &quot;&#x2F;custom&#x2F;:name&quot;,    Handler: CustomHandler(serverCtx),&#125;,<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>此时，我们的文件结构应该是这样<pre class="line-numbers language-none"><code class="language-none">greet├── etc│   └── greet-api.yaml├── greet.api├── greet.go└── internal    ├── config    │   └── config.go    ├── handler    │   ├── greethandler.go    │   ├── customhandler.go    │   ├── ...    │   └── routes.go    ├── logic    │   ├── greetlogic.go    │   ├── ...    │   └── customlogic.go    ├── svc    │   └── servicecontext.go    └── types        └── types.go<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>当单体应用达到一定的数量级，handler和logic文件夹下将会同步增加很多的文件<h3 id="引入泛型概念"><a href="#引入泛型概念" class="headerlink" title="引入泛型概念"></a>引入泛型概念</h3>自Go1.18开始，go开始使用泛型，泛型的广泛定义 ：是一种把明确类型的工作推迟到创建对象或者调用方法的时候才去明确的特殊的类型。 也就是说在泛型使用过程中，操作的数据类型被指定为一个参数，而这种参数类型可以用在 类、方法和接口 中，分别被称为 泛型类 、 泛型方法 、 泛型接口 。<br>我们可以利用泛型，让在添加路由时就要固定死的<code>Handler: GreetHandler(serverCtx)</code>推迟到后面，去根据实际的Logic结构体去判断需要真正执行的<code>logic.NewGreetLogic(r.Context(), ctx)</code>初始化结构体和<code>l.Greet(req)</code>逻辑处理方法<h3 id="如何去做"><a href="#如何去做" class="headerlink" title="如何去做"></a>如何去做</h3></li></ul><ol><li> 在<code>internal\logic</code>下添加一个<code>baselogic.go</code>文件,参考<a href="https://juejin.cn/post/7088478439690371086">Go泛型实战 | 如何在结构体中使用泛型</a><pre class="line-numbers language-none"><code class="language-none">package logicimport (&quot;greet&#x2F;internal&#x2F;svc&quot;&quot;greet&#x2F;internal&#x2F;types&quot;&quot;net&#x2F;http&quot;)type BaseLogic interface &#123;anyHandler(req types.Request, w http.ResponseWriter, r *http.Request, svcCtx *svc.ServiceContext) &#x2F;&#x2F;每一个结构体中必须要继承一下Handler方法，例如customlogic.go和greetlogic.go中的Handler方法&#125;type logic[T BaseLogic] struct &#123;data T&#125;func New[T BaseLogic]() logic[T] &#123;c :&#x3D; logic[T]&#123;&#125;var ins Tc.data &#x3D; insreturn c&#125;func (a *logic[T]) LogicHandler(req types.Request, w http.ResponseWriter, r *http.Request, svcCtx *svc.ServiceContext) &#123; &#x2F;&#x2F;作为一个中转处理方法，最终执行结构体的Handlera.data.Handler(req, w, r, svcCtx)&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>将<code>greethandler.go</code>文件修改成<code>basehandler.go</code>,注释掉之前的<code>GreetHandler</code>方法<pre class="line-numbers language-none"><code class="language-none">package handlerimport (&quot;net&#x2F;http&quot;&quot;greet&#x2F;internal&#x2F;logic&quot;&quot;greet&#x2F;internal&#x2F;svc&quot;&quot;greet&#x2F;internal&#x2F;types&quot;&quot;github.com&#x2F;zeromicro&#x2F;go-zero&#x2F;rest&#x2F;httpx&quot;)&#x2F;&#x2F; func GreetHandler(svcCtx *svc.ServiceContext) http.HandlerFunc &#123;&#x2F;&#x2F; return BaseHandlerFunc(svcCtx)&#x2F;&#x2F; &#x2F;&#x2F; return func(w http.ResponseWriter, r *http.Request) &#123;&#x2F;&#x2F; &#x2F;&#x2F; var req types.Request&#x2F;&#x2F; &#x2F;&#x2F; if err :&#x3D; httpx.Parse(r, &amp;req); err !&#x3D; nil &#123;&#x2F;&#x2F; &#x2F;&#x2F; httpx.Error(w, err)&#x2F;&#x2F; &#x2F;&#x2F; return&#x2F;&#x2F; &#x2F;&#x2F; &#125;&#x2F;&#x2F; &#x2F;&#x2F; l :&#x3D; logic.NewGreetLogic(r.Context(), svcCtx)&#x2F;&#x2F; &#x2F;&#x2F; resp, err :&#x3D; l.Greet(&amp;req)&#x2F;&#x2F; &#x2F;&#x2F; if err !&#x3D; nil &#123;&#x2F;&#x2F; &#x2F;&#x2F; httpx.Error(w, err)&#x2F;&#x2F; &#x2F;&#x2F; &#125; else &#123;&#x2F;&#x2F; &#x2F;&#x2F; httpx.OkJson(w, resp)&#x2F;&#x2F; &#x2F;&#x2F; &#125;&#x2F;&#x2F; &#x2F;&#x2F; &#125;&#x2F;&#x2F; &#125;func BaseHandlerFunc[T logic.BaseLogic](svcCtx *svc.ServiceContext, t T) http.HandlerFunc &#123;return func(w http.ResponseWriter, r *http.Request) &#123;var req types.Requestif err :&#x3D; httpx.Parse(r, &amp;req); err !&#x3D; nil &#123;httpx.Error(w, err)return&#125;&#x2F;&#x2F;通过泛型动态调用不同结构体的Handler方法cc :&#x3D; logic.New[T]()cc.LogicHandler(req, w, r, svcCtx)&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>在<code>internal\logic\greetlogic.go</code>中增加一个<code>Handler</code>方法<pre class="line-numbers language-none"><code class="language-none">package logicimport (&quot;context&quot;&quot;net&#x2F;http&quot;&quot;greet&#x2F;internal&#x2F;svc&quot;&quot;greet&#x2F;internal&#x2F;types&quot;&quot;github.com&#x2F;zeromicro&#x2F;go-zero&#x2F;core&#x2F;logx&quot;&quot;github.com&#x2F;zeromicro&#x2F;go-zero&#x2F;rest&#x2F;httpx&quot;)type GreetLogic struct &#123;logx.Loggerctx    context.ContextsvcCtx *svc.ServiceContext&#125;func NewGreetLogic(ctx context.Context, svcCtx *svc.ServiceContext) *GreetLogic &#123;return &amp;GreetLogic&#123;Logger: logx.WithContext(ctx),ctx:    ctx,svcCtx: svcCtx,&#125;&#125;func (a GreetLogic) Handler(req types.Request, w http.ResponseWriter, r *http.Request, svcCtx *svc.ServiceContext) &#123; &#x2F;&#x2F;新增方法l :&#x3D; NewGreetLogic(r.Context(), svcCtx)resp, err :&#x3D; l.Greet(&amp;req)if err !&#x3D; nil &#123;httpx.Error(w, err)&#125; else &#123;httpx.OkJson(w, resp)&#125;&#125;func (l *GreetLogic) Greet(req *types.Request) (resp *types.Response, err error) &#123;&#x2F;&#x2F; todo: add your logic here and delete this lineresponse :&#x3D; new(types.Response)if (*req).Name &#x3D;&#x3D; &quot;me&quot; &#123;response.Message &#x3D; &quot;greetLogic: listen to me, thank you.&quot;&#125; else &#123;response.Message &#x3D; &quot;greetLogic: listen to you, thank me.&quot;&#125;return response, nil&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>然后修改<code>internal\handler\routes.go</code>下面的<code>server.AddRoutes</code>部分<pre class="line-numbers language-none"><code class="language-none">func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) &#123;   server.AddRoutes( &#x2F;&#x2F;往rest.Server中添加路由[]rest.Route&#123; &#x2F;&#x2F;路由数组   &#123;      Method:  http.MethodGet,      Path:    &quot;&#x2F;from&#x2F;:name&quot;, &#x2F;&#x2F;路由      Handler: BaseHandlerFunc(serverCtx,logic.GreetLogic&#123;&#125;),   &#125;,&#125;,   )&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>现在就大功告成了，我们启动一下<pre class="line-numbers language-none"><code class="language-none">go run greet.go -f etc&#x2F;greet-api.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>然后在浏览器中请求一下<code>http://localhost:8888/from/you</code><br><img src="/cnblogs/16524742/789895-20220727154215611-606843840.png" class="lazyload placeholder" data-srcset="/cnblogs/16524742/789895-20220727154215611-606843840.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"><h3 id="验证一下新增api路由"><a href="#验证一下新增api路由" class="headerlink" title="验证一下新增api路由"></a>验证一下新增api路由</h3></li><li>在<code>internal\logic</code>下新增一个<code>customlogic.go</code>文件<pre class="line-numbers language-none"><code class="language-none">package logicimport (&quot;context&quot;&quot;net&#x2F;http&quot;&quot;greet&#x2F;internal&#x2F;svc&quot;&quot;greet&#x2F;internal&#x2F;types&quot;&quot;github.com&#x2F;zeromicro&#x2F;go-zero&#x2F;core&#x2F;logx&quot;&quot;github.com&#x2F;zeromicro&#x2F;go-zero&#x2F;rest&#x2F;httpx&quot;)type CustomLogic struct &#123;logx.Loggerctx    context.ContextsvcCtx *svc.ServiceContext&#125;func NewCustomLogic(ctx context.Context, svcCtx *svc.ServiceContext) *CustomLogic &#123;return &amp;CustomLogic&#123;Logger: logx.WithContext(ctx),ctx:    ctx,svcCtx: svcCtx,&#125;&#125;func (a CustomLogic) Handler(req types.Request, w http.ResponseWriter, r *http.Request, svcCtx *svc.ServiceContext) &#123;l :&#x3D; NewCustomLogic(r.Context(), svcCtx)resp, err :&#x3D; l.Custom(&amp;req)if err !&#x3D; nil &#123;httpx.Error(w, err)&#125; else &#123;httpx.OkJson(w, resp)&#125;&#125;func (l *CustomLogic) Custom(req *types.Request) (resp *types.Response, err error) &#123; &#x2F;&#x2F;response.Message稍微修改了一下，便于区分&#x2F;&#x2F; todo: add your logic here and delete this lineresponse :&#x3D; new(types.Response)if (*req).Name &#x3D;&#x3D; &quot;me&quot; &#123;response.Message &#x3D; &quot;customLogic: listen to me, thank you.&quot;&#125; else &#123;response.Message &#x3D; &quot;customLogic: listen to you, thank me.&quot;&#125;return response, nil&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>然后修改<code>internal\handler\routes.go</code><pre class="line-numbers language-none"><code class="language-none">func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) &#123;   server.AddRoutes( &#x2F;&#x2F;往rest.Server中添加路由[]rest.Route&#123; &#x2F;&#x2F;路由数组   &#123;      Method:  http.MethodGet,      Path:    &quot;&#x2F;from&#x2F;:name&quot;, &#x2F;&#x2F;路由      Handler: BaseHandlerFunc(serverCtx,logic.GreetLogic&#123;&#125;),   &#125;,           &#123;      Method:  http.MethodGet,      Path:    &quot;&#x2F;to&#x2F;:name&quot;, &#x2F;&#x2F;路由      Handler: BaseHandlerFunc(serverCtx,logic.CustomLogic&#123;&#125;),   &#125;,&#125;,   )&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>其他地方不需要修改<br>我们启动一下<pre class="line-numbers language-none"><code class="language-none">go run greet.go -f etc&#x2F;greet-api.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>然后在浏览器中请求一下<code>http://localhost:8888/from/you</code>、<code>http://localhost:8888/to/you</code>、<code>http://localhost:8888/too/you</code><br><img src="/cnblogs/16524742/789895-20220727154750826-495935129.png" class="lazyload placeholder" data-srcset="/cnblogs/16524742/789895-20220727154750826-495935129.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"></li></ol><p>现在，在添加新的logic做路由映射时，就可以直接简化掉添加<code>xxxxhandler.go</code>文件了，实际上是将这个Handler移动到了xxxxlogic.go中。</p><p>新手，不喜轻喷</p><h3 id="本文代码放在go-zero-monolithic-service-generics"><a href="#本文代码放在go-zero-monolithic-service-generics" class="headerlink" title="本文代码放在go-zero-monolithic-service-generics"></a>本文代码放在<a href="https://github.com/spatxos/go-zero-monolithic-service-generics">go-zero-monolithic-service-generics</a></h3>]]></content>
      
      
      
        <tags>
            
            <tag> go </tag>
            
            <tag> go-zero </tag>
            
            <tag> go泛型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用github action发布hexo博客到云服务器</title>
      <link href="/2022/07/15/cnblogs/16478352/"/>
      <url>/2022/07/15/cnblogs/16478352/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="搭建Hexo博客"><a href="#搭建Hexo博客" class="headerlink" title="搭建Hexo博客"></a>搭建Hexo博客</h1><p>  环境<br>  <pre class="line-numbers language-none"><code class="language-none">&gt; node -vv16.15.0&gt; npm -v8.5.5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><br>  安装Hexo CLI<br>  <pre class="line-numbers language-none"><code class="language-none"># 在你的博客文件夹根目录下下执行npm install -g hexo-clihexo init blognamecd blognamehexo s# 打开http:&#x2F;&#x2F;localhost:4000 即可浏览<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><h1 id="安装主题hexo-theme-bamboo"><a href="#安装主题hexo-theme-bamboo" class="headerlink" title="安装主题hexo-theme-bamboo"></a>安装主题hexo-theme-bamboo</h1><p>  <a href="https://github.com/yuang01/hexo-theme-bamboo">hexo-theme-bamboo</a><br>  我们不使用npm安装，直接将主题download到themes文件夹下<br>  github安装<br>  <pre class="line-numbers language-none"><code class="language-none">git clone https:&#x2F;&#x2F;github.com&#x2F;yuang01&#x2F;hexo-theme-bamboo.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>  gitee安装<br>  <pre class="line-numbers language-none"><code class="language-none">git clone https:&#x2F;&#x2F;gitee.com&#x2F;yuang01&#x2F;hexo-theme-bamboo.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>  修改hexo根目录下的站点配置文件_config.yml，把主题改为hexo-theme-bamboo，通过主题文件夹下的config.yml配置主题即可，然后在<code>\themes\hexo-theme-bamboo\</code>删除<code>.git</code>文件夹<br>  然后根据<a href="https://yuang01.github.io/">https://yuang01.github.io/</a>或者<a href="http://120.48.121.186/">作者博客地址</a>来配置对应的样式或者widget</p><h1 id="修改博客名称等信息"><a href="#修改博客名称等信息" class="headerlink" title="修改博客名称等信息"></a>修改博客名称等信息</h1><p>  在<code>_config.yml</code>和<code>\themes\hexo-theme-bamboo\_config.yml</code>中将自己博客名称、网址信息等进行替换</p><h1 id="添加github-action发布"><a href="#添加github-action发布" class="headerlink" title="添加github action发布"></a>添加github action发布</h1><h3 id="1-在github中创建自己的博客仓库"><a href="#1-在github中创建自己的博客仓库" class="headerlink" title="1. 在github中创建自己的博客仓库"></a>1. 在github中创建自己的博客仓库</h3><p>  然后在<code>Settings/Secrets/Actions</code>中<code>New repository secret</code> ,  其中docker信息是在<a href="https://cr.console.aliyun.com/cn-hongkong/instances">阿里云容器仓库</a>中创建了一个个人实例(创建之后需要去<code>/个人实例/访问凭证</code>设置固定密码)，当然，你也可以使用其他的docker仓库，不过第2步的<code>Login to Aliyun Container Registry (ACR)</code>需要进行修改</p><h3 id="2-设置Secrets"><a href="#2-设置Secrets" class="headerlink" title="2. 设置Secrets"></a>2. 设置Secrets</h3><p><a id="Anchortable">表格</a><br>   |  Name  |   Value   |   说明   |   举例   |<br>   | —- | —- | —- | —- |<br>   |   DOCKER_USERNAME   |  your docker username    |  docker仓库登陆用户名    | spatxos    |<br>   |   DOCKER_PASSWORD   |  your docker pwd    |  docker仓库固定密码    | spatxospwd    |<br>|   HOST  |  your server ip    |  服务器IP    | 101.10.11.121    |<br>|   HOST_USERNAME   |  your server username    |  服务器ssh登陆账户名    | spatxosdocker   |<br>|   HOST_PASSWORD   |  your server pwd    |  服务器ssh登陆密码    |  spatxosdockerpwd   |<br>|   HOST_PORT   |  your server ssh port    |  服务器ssh端口    |  22    |<br>|   DOCKER_REGISTRY   |  docker registry    |  docker仓库地址    |  registry.cn-hongkong.aliyuncs.com    |<br>|   DOCKER_REGISTRY_REGION   |  docker registry region id    |  docker仓库区域id    |  cn-hongkong    |<br>|   CNBLOGS_ISDOWN   |  Whether to pull blogs from cnblogs    |  本次执行是否从cnblogs拉取博客    |  true或false   |<br>|   CNBLOGS_COOKIE   |  cnblogs of cookie    |  cnblogs的cookie    |  __gads=ID=bbfxxxxxxxxxx    |<br>|   BLOG_NAME   |  blog of name    |  博客的名称，发布到docker或者服务器上创建的文件夹都将使用这个    |  spatxos    |</p><h3 id="3-在-github-workflows-下添加一个yml文件，可以进行自定义"><a href="#3-在-github-workflows-下添加一个yml文件，可以进行自定义" class="headerlink" title="3.   在/.github/workflows/下添加一个yml文件，可以进行自定义"></a>3.   在<code>/.github/workflows/</code>下添加一个yml文件，可以进行自定义</h3><p>  我写好了一个yml，是将hexo发布到阿里云的docker仓库，然后进行服务器部署，后期将会添加发布到github pages的yml<br>  <pre class="line-numbers language-none"><code class="language-none">name: Build Docker Imageon:  push:    tags:      - &quot;v*.*.*&quot; # 后面每次更新提交，只有打上tag之后才会进行发布更新，减少actions执行次数  workflow_dispatch:jobs:  build:    env:      CNBLOGS_ISDOWN: $&#123;&#123;secrets.CNBLOGS_ISDOWN&#125;&#125;      CNBLOGS_COOKIE: $&#123;&#123;secrets.CNBLOGS_COOKIE&#125;&#125;    runs-on: ubuntu-latest    steps:      - name: Checkout source        uses: actions&#x2F;checkout@v2        with:          ref: master      - name: Setup Node.js        uses: actions&#x2F;setup-node@v1        with:          node-version: &#39;16.15.0&#39;      - name: Set up Go 1.18.3        if: $&#123;&#123; env.CNBLOGS_ISDOWN &#x3D;&#x3D; &#39;true&#39; &#125;&#125;  # 是否从博客园下载，可通过更改CNBLOGS_ISDOWN的值进行提交时的下载控制        uses: actions&#x2F;setup-go@v1        with:          go-version: 1.18.3        id: go      - name: Pull blogs from cnblogs        if: $&#123;&#123; env.CNBLOGS_ISDOWN &#x3D;&#x3D; &#39;true&#39; &#125;&#125;  # 是否从博客园下载，可通过更改CNBLOGS_ISDOWN的值进行提交时的下载控制        run: |          cd source&#x2F;_posts&#x2F;          echo $env.CNBLOGS_COOKIE |wc -L          echo $&#123;&#123;env.CNBLOGS_COOKIE&#125;&#125; |wc -L          go run downmyblogs.go -cookie $&#123;&#123;env.CNBLOGS_COOKIE&#125;&#125;          ls -la      - name: Setup Hexo        run: |          npm install hexo-cli -g          npm install hexo-generator-search --save          npm install hexo-generator-feed --save          npm i hexo-wordcount          npm install      # get image tag name      - name: Get Image Tag Name        run: |          if [ x$&#123;&#123; github.event.inputs.tag &#125;&#125; &#x3D;&#x3D; x&quot;&quot; ]; then            echo &quot;TAG_NAME&#x3D;$&#123;GITHUB_REF#refs&#x2F;*&#x2F;&#125;&quot; &gt;&gt; $GITHUB_ENV          else            echo &quot;TAG_NAME&#x3D;$&#123;&#123; github.event.inputs.tag &#125;&#125;&quot; &gt;&gt; $GITHUB_ENV          fi      - name: Login to Aliyun Container Registry (ACR)        uses: aliyun&#x2F;acr-login@v1        with:          login-server: &quot;$&#123;&#123; secrets.DOCKER_REGISTRY &#125;&#125;&quot;          region-id: &quot;$&#123;&#123; secrets.DOCKER_REGISTRY_REGION &#125;&#125;&quot;  # 3          username: &quot;$&#123;&#123; secrets.DOCKER_USERNAME &#125;&#125;&quot;          password: &quot;$&#123;&#123; secrets.DOCKER_PASSWORD &#125;&#125;&quot;      - name: Deploy and Build Image        run: |          hexo clean          hexo deploy          ls -la          pwd          docker build -t &quot;$&#123;&#123; secrets.DOCKER_REGISTRY &#125;&#125;&#x2F;$&#123;&#123;secrets.BLOG_NAME&#125;&#125;&#x2F;$&#123;&#123;secrets.BLOG_NAME&#125;&#125;-blog:$&#123;&#123;env.TAG_NAME&#125;&#125;&quot; -f Dockerfile .      - name: Push Image        run: |          docker images          docker push &quot;$&#123;&#123; secrets.DOCKER_REGISTRY &#125;&#125;&#x2F;$&#123;&#123;secrets.BLOG_NAME&#125;&#125;&#x2F;$&#123;&#123;secrets.BLOG_NAME&#125;&#125;-blog:$&#123;&#123;env.TAG_NAME&#125;&#125;&quot;  # Docker 自动部署  deploy-docker:     needs: [build]    name: Deploy Docker    runs-on: ubuntu-latest    steps:      # get image tag name      - name: Get Image Tag Name        run: |          if [ x$&#123;&#123; github.event.inputs.tag &#125;&#125; &#x3D;&#x3D; x&quot;&quot; ]; then            echo &quot;TAG_NAME&#x3D;$&#123;GITHUB_REF#refs&#x2F;*&#x2F;&#125;&quot; &gt;&gt; $GITHUB_ENV          else            echo &quot;TAG_NAME&#x3D;$&#123;&#123; github.event.inputs.tag &#125;&#125;&quot; &gt;&gt; $GITHUB_ENV          fi      - name: Deploy        uses: appleboy&#x2F;ssh-action@master        with:          host: $&#123;&#123; secrets.HOST &#125;&#125; # 服务器ip          username: $&#123;&#123; secrets.HOST_USERNAME &#125;&#125; # 服务器登录用户名          password: $&#123;&#123; secrets.HOST_PASSWORD &#125;&#125; # 服务器登录密码          port: $&#123;&#123; secrets.HOST_PORT &#125;&#125; # 服务器ssh端口          script: |            docker info            echo $(docker ps -aqf &quot;name&#x3D;$&#123;&#123;secrets.BLOG_NAME&#125;&#125;-blog&quot;)            docker stop $(docker ps -aqf &quot;name&#x3D;$&#123;&#123;secrets.BLOG_NAME&#125;&#125;-blog&quot;)            docker container rm $&#123;&#123;secrets.BLOG_NAME&#125;&#125;-blog            docker rmi $&#123;&#123;secrets.BLOG_NAME&#125;&#125;-blog            echo 查看是否成功删除$&#123;&#123;secrets.BLOG_NAME&#125;&#125;-blog            docker ps -a            echo 从harbor拉取docker镜像            chmod 777 &#x2F;root&#x2F;$&#123;&#123;secrets.BLOG_NAME&#125;&#125;-blog&#x2F;html&#x2F;            docker pull $&#123;&#123; secrets.DOCKER_REGISTRY &#125;&#125;&#x2F;$&#123;&#123;secrets.BLOG_NAME&#125;&#125;&#x2F;$&#123;&#123;secrets.BLOG_NAME&#125;&#125;-blog:$&#123;&#123;env.TAG_NAME&#125;&#125;            docker tag $&#123;&#123; secrets.DOCKER_REGISTRY &#125;&#125;&#x2F;$&#123;&#123;secrets.BLOG_NAME&#125;&#125;&#x2F;$&#123;&#123;secrets.BLOG_NAME&#125;&#125;-blog:$&#123;&#123;env.TAG_NAME&#125;&#125; $&#123;&#123;secrets.BLOG_NAME&#125;&#125;&#x2F;$&#123;&#123;secrets.BLOG_NAME&#125;&#125;-blog:$&#123;&#123;env.TAG_NAME&#125;&#125;            docker run -it --rm -d -p 80:80 --name $&#123;&#123;secrets.BLOG_NAME&#125;&#125;-blog $&#123;&#123;secrets.BLOG_NAME&#125;&#125;&#x2F;$&#123;&#123;secrets.BLOG_NAME&#125;&#125;-blog            docker cp $&#123;&#123;secrets.BLOG_NAME&#125;&#125;-blog:&#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html &#x2F;root&#x2F;$&#123;&#123;secrets.BLOG_NAME&#125;&#125;-blog&#x2F;html            docker system prune -f            echo docker容器启动成功<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><h1 id="另一种办法，直接fork"><a href="#另一种办法，直接fork" class="headerlink" title="另一种办法，直接fork"></a>另一种办法，直接fork</h1><p>  现在我已经把仓库创建好并且上传到了github，仓库地址<a href="https://github.com/spatxos/spatxos-blog">https://github.com/spatxos/spatxos-blog</a>，可以直接进行fork，然后去<a href="https://cr.console.aliyun.com/cn-hongkong/instances">阿里云容器仓库</a>中创建一个个人实例，购买或者使用一个云服务器，在github仓库中填写一下<a id="#Anchortable">Secrets表格</a>中Secrets即可</p><h1 id="从博客园拉取之间创建的博客到新建的hexo"><a href="#从博客园拉取之间创建的博客到新建的hexo" class="headerlink" title="从博客园拉取之间创建的博客到新建的hexo"></a>从博客园拉取之间创建的博客到新建的hexo</h1><p>  在Secrets表格中设置好<code>CNBLOGS_ISDOWN</code>是<code>true</code>，然后去登陆博客园，F12，随便找一个xhr类型的请求，查找对应的cookie，然后到<code>/source/_posts</code>下执行一下<code>go run convertcnblogbookie.go -cookie &quot;替换成你的cookie&quot;</code>将会获得一个输出的新cookie，将新的cookie作为<code>CNBLOGS_COOKIE</code>的value写入进去（github action中使用secrets时，不能包含某些特殊字符，否则会被截断，所以这次执行其实是对特殊字符的替换，后面拉取博客时再替换回来）<br>  在每次执行提交时，将会把docker里面的hexo静态页面映射到服务器的<code>/root/$&#123;&#123;BLOG_NAME&#125;&#125;-blog/html</code>文件夹下，首次拉取博客园的文章之后，如何博客园文章未进行更新，我们可以更改一下<code>CNBLOGS_ISDOWN</code>为<code>false</code>，那么就不会从博客园拉取了，原本的文件还会存在，不会进行覆盖</p><h1 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h1><h3 id="1-阿里云登陆和docker-push-时tag错误，问题描述参见docker-tag-error，解决办法参见GitHub-Actions持续集成阿里云容器镜像服务（ACR），我后面这么写的"><a href="#1-阿里云登陆和docker-push-时tag错误，问题描述参见docker-tag-error，解决办法参见GitHub-Actions持续集成阿里云容器镜像服务（ACR），我后面这么写的" class="headerlink" title="1.阿里云登陆和docker push 时tag错误，问题描述参见docker tag error，解决办法参见GitHub Actions持续集成阿里云容器镜像服务（ACR），我后面这么写的"></a>1.阿里云登陆和docker push 时tag错误，问题描述参见<a href="https://github.com/actions/starter-workflows/issues/1635">docker tag error</a>，解决办法参见<a href="https://mincong.io/cn/github-actions-acr/">GitHub Actions持续集成阿里云容器镜像服务（ACR）</a>，我后面这么写的</h3><p>  <code>docker build -t &quot;$&#123;&#123; secrets.DOCKER_REGISTRY &#125;&#125;/$&#123;&#123;secrets.BLOG_NAME&#125;&#125;/$&#123;&#123;secrets.BLOG_NAME&#125;&#125;-blog:$&#123;&#123;env.TAG_NAME&#125;&#125;&quot; -f Dockerfile .</code></p><h3 id="2-go传入参数和secrets截断问题"><a href="#2-go传入参数和secrets截断问题" class="headerlink" title="2.go传入参数和secrets截断问题"></a>2.go传入参数和secrets截断问题</h3><pre><code>  go传入参数使用conf来做，secrets截断问题通过先替换掉会截断的字符，然后使用时替换回去</code></pre><h1 id="博客github地址"><a href="#博客github地址" class="headerlink" title="博客github地址"></a><a href="https://github.com/spatxos/spatxos.github.io">博客github地址</a></h1>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> docker </tag>
            
            <tag> go </tag>
            
            <tag> github action </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用go把博客园博客下载到本地Hexo目录下</title>
      <link href="/2022/07/10/cnblogs/16463506/"/>
      <url>/2022/07/10/cnblogs/16463506/</url>
      
        <content type="html"><![CDATA[<h2 id="找到cookie"><a href="#找到cookie" class="headerlink" title="找到cookie"></a>找到cookie</h2><p>直接浏览器F12 巴拉巴拉</p><h2 id="直接上代码"><a href="#直接上代码" class="headerlink" title="直接上代码"></a>直接上代码</h2><p>用hexo建静态博客的话，go文件在<code>\source\_posts</code>目录下，run之后将会在此目录下生成cnblogs文件夹，以博客id作为md文件名，然后在<code>\source\</code>下生成一个cnblogs目录存放博客里面的图片文件，图片文件我使用<code>/cnblogs/16463506/img.*.png</code>来做匹配</p><pre class="line-numbers language-none"><code class="language-none">package mainimport (&quot;bufio&quot;&quot;encoding&#x2F;json&quot;&quot;fmt&quot;&quot;io&quot;&quot;io&#x2F;ioutil&quot;&quot;net&#x2F;http&quot;&quot;os&quot;&quot;strconv&quot;&quot;strings&quot;&quot;regexp&quot;&quot;path&quot;)const cookie &#x3D; &quot; xxxxxxxxxxxxxxxxxx&quot;func main() &#123;    fmt.Printf(&quot;开始执行&quot;)getBlogList(1)&#125;func geturl(pageno int) string&#123;    return fmt.Sprintf(&quot;https:&#x2F;&#x2F;i.cnblogs.com&#x2F;api&#x2F;posts&#x2F;list?p&#x3D;%s&amp;cid&#x3D;&amp;tid&#x3D;&amp;t&#x3D;1&amp;cfg&#x3D;0&amp;search&#x3D;&amp;orderBy&#x3D;&amp;s&#x3D;&amp;scid&#x3D;&quot;,strconv.Itoa(pageno))&#125;func getBlogList(pageindex int)&#123;var urlstr &#x3D; geturl(pageindex)recordbody :&#x3D; getData(urlstr)fmt.Printf(&quot;\r\n recordbody:%s \n&quot;, recordbody)var conf blogListerr :&#x3D; json.Unmarshal(recordbody, &amp;conf)if err !&#x3D; nil &#123;fmt.Println(&quot;error:&quot;, err)&#125;fmt.Printf(&quot;\r\n PageIndex:%s，PageSize:%s，PostsCount:%s \n&quot;, strconv.Itoa(conf.PageIndex), strconv.Itoa(conf.PageSize), strconv.Itoa(conf.PostsCount))for _, childval :&#x3D; range conf.PostList &#123;             if(childval.IsPublished)&#123;childbody :&#x3D; getData(fmt.Sprintf(&quot;https:&#x2F;&#x2F;i.cnblogs.com&#x2F;api&#x2F;posts&#x2F;%s&quot;, strconv.Itoa(childval.Id)))fmt.Printf(&quot;childbody:%s \n&quot;, childbody)var jsconf blogbodyConferr :&#x3D; json.Unmarshal(childbody, &amp;jsconf)if err !&#x3D; nil &#123;fmt.Println(&quot;error:&quot;, err)&#125;var tagbody &#x3D; &quot;&quot;for _, tag :&#x3D; range jsconf.BlogPost.Tags &#123;if(tagbody!&#x3D;&quot;&quot;)&#123;tagbody &#x3D; fmt.Sprintf(&quot;%s,\&quot;%s\&quot;&quot;,tagbody,tag)&#125;else&#123;tagbody &#x3D; fmt.Sprintf(&quot;\&quot;%s\&quot;&quot;,tag)&#125;&#125;var tagstr &#x3D; fmt.Sprintf(&quot;[%s]&quot;,tagbody)var articleBody &#x3D; fmt.Sprintf(&quot;---\r\ntitle: %s\r\ndate: %s\r\nauthor: %s\r\ntags: %s\r\n---\r\n%s&quot;,    jsconf.BlogPost.Title,jsconf.BlogPost.DatePublished,jsconf.BlogPost.Author,tagstr,    string(jsconf.BlogPost.PostBody))&#x2F;&#x2F;添加文章信息reg, _ :&#x3D; regexp.Compile(&#96;&#x2F;cnblogs&#x2F;16463506&#x2F;img.*.png&#96;)imgurls :&#x3D; reg.FindAllString(articleBody, -1)for _, imgurl :&#x3D; range imgurls &#123;fileName :&#x3D; path.Base(imgurl)downloadImage(imgurl,strconv.Itoa(jsconf.BlogPost.Id),fileName)articleBody &#x3D; strings.Replace(articleBody, imgurl, fmt.Sprintf(&quot;&#x2F;cnblogs&#x2F;%s&#x2F;%s&quot;,strconv.Itoa(jsconf.BlogPost.Id),fileName), -1)&#125;fmt.Printf(&quot;articleBody:%s \n&quot;, articleBody)downloadFile(strings.NewReader(articleBody), strconv.Itoa(jsconf.BlogPost.Id), fmt.Sprintf(&quot;%s.md&quot;,  strconv.Itoa(jsconf.BlogPost.Id)))&#125;&#125;        if(conf.PageIndex&gt;0 &amp;&amp; conf.PageIndex*conf.PageSize&lt;&#x3D;conf.PostsCount)&#123;    getBlogList(conf.PageIndex+1)&#125;fmt.Println(&quot;执行完毕&quot;)&#125;func getData(urlstr string) []byte &#123;client :&#x3D; &amp;http.Client&#123;&#125;fmt.Printf(&quot;\r\n urlstr:%s \n&quot;, urlstr)req, _ :&#x3D; http.NewRequest(&quot;GET&quot;, urlstr, nil)req.Header.Add(&quot;cookie&quot;, cookie)resp, _ :&#x3D; client.Do(req)defer resp.Body.Close()body, _ :&#x3D; ioutil.ReadAll(resp.Body)return body&#125;func downloadImage(imgurl string, rootpath string, fileName string)&#123;filepath :&#x3D; fmt.Sprintf(&quot;..&#x2F;cnblogs&#x2F;%s&#x2F;%s&quot;, rootpath, fileName)res, err :&#x3D; http.Get(imgurl)if err !&#x3D; nil &#123;fmt.Println(&quot;A error occurred!&quot;)return&#125;defer res.Body.Close()&#x2F;&#x2F; 获得get请求响应的reader对象reader :&#x3D; bufio.NewReaderSize(res.Body, 32 * 1024)    if _, err :&#x3D; os.Stat(fmt.Sprintf(&quot;..&#x2F;cnblogs&#x2F;%s&quot;, rootpath)); os.IsNotExist(err) &#123;&#x2F;&#x2F; 必须分成两步：先创建文件夹、再修改权限os.MkdirAll(fmt.Sprintf(&quot;..&#x2F;cnblogs&#x2F;%s&quot;, rootpath), 0777) &#x2F;&#x2F;0777也可以os.ModePermos.Chmod(fmt.Sprintf(&quot;..&#x2F;cnblogs&#x2F;%s&quot;, rootpath), 0777)&#125;file, err :&#x3D; os.Create(filepath)if err !&#x3D; nil &#123;panic(err)&#125;&#x2F;&#x2F; 获得文件的writer对象writer :&#x3D; bufio.NewWriter(file)written, _ :&#x3D; io.Copy(writer, reader)fmt.Printf(&quot;Total length: %d&quot;, written)&#125;func downloadFile(body io.Reader, rootpath string, name string) &#123;    filepath :&#x3D; fmt.Sprintf(&quot;.&#x2F;cnblogs&#x2F;%s&quot;, name)&#x2F;&#x2F; Create output fileif rootpath !&#x3D; &quot;&quot; &#123;if _, err :&#x3D; os.Stat(&quot;.&#x2F;cnblogs&quot;); os.IsNotExist(err) &#123;&#x2F;&#x2F; 必须分成两步：先创建文件夹、再修改权限os.MkdirAll(&quot;.&#x2F;cnblogs&quot;, 0777) &#x2F;&#x2F;0777也可以os.ModePermos.Chmod(&quot;.&#x2F;cnblogs&quot;, 0777)&#125;&#125;out, err :&#x3D; os.Create(filepath)if err !&#x3D; nil &#123;panic(err)&#125;defer out.Close()&#x2F;&#x2F; copy stream_, err &#x3D; io.Copy(out, body)if err !&#x3D; nil &#123;panic(err)&#125;&#125;type blogList struct &#123;PageIndex int &#96;json:&quot;pageIndex&quot;&#96;PageSize int &#96;json:&quot;pageSize&quot;&#96;PostsCount int &#96;json:&quot;postsCount&quot;&#96;PostList []blogbodymsg &#96;json:&quot;postList&quot;&#96;&#125;type blogbodymsg struct &#123;Id int &#96;json:&quot;id&quot;&#96;DatePublished string &#96;json:&quot;datePublished&quot;&#96;DateUpdated string &#96;json:&quot;dateUpdated&quot;&#96;Title string &#96;json:&quot;title&quot;&#96;        IsPublished bool &#96;json:&quot;isPublished&quot;&#96;&#125;type blogbodyConf struct &#123;BlogPost blogPostEntity &#96;json:&quot;blogPost&quot;&#96;&#125;type blogPostEntity struct &#123;Id int &#96;json:&quot;id&quot;&#96;AutoDesc string &#96;json:&quot;autoDesc&quot;&#96;DatePublished string &#96;json:&quot;datePublished&quot;&#96;PostBody string &#96;json:&quot;postBody&quot;&#96;Title string &#96;json:&quot;title&quot;&#96;Url string &#96;json:&quot;url&quot;&#96;Author string &#96;json:&quot;author&quot;&#96;Tags []string &#96;json:&quot;tags&quot;&#96; &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> go </tag>
            
            <tag> go文件下载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用hexo admin</title>
      <link href="/2022/07/07/shi-yong-hexo-admin/"/>
      <url>/2022/07/07/shi-yong-hexo-admin/</url>
      
        <content type="html"><![CDATA[<h2 id="安装hexo-admin"><a href="#安装hexo-admin" class="headerlink" title="安装hexo admin"></a>安装hexo admin</h2><ol><li>安装hexo并初始化<pre class="line-numbers language-none"><code class="language-none">npm install -g hexocd ~&#x2F;hexo init my-blogcd my-blognpm install <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>安装hexo admin并运行<pre class="line-numbers language-none"><code class="language-none">npm install --save hexo-adminhexo server -dopen http:&#x2F;&#x2F;localhost:4000&#x2F;admin&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>实际上安装之后的hexo admin在图片粘贴进去时，图片的路径出现了问题，我们找到<code>\node_modules\hexo-admin\api.js</code>，进行替换<pre class="line-numbers language-none"><code class="language-none">var imagePath &#x3D; &#39;&#x2F;images&#39; 替换成 var imagePath &#x3D; &#39;images&#39;在hexo.source.process().then(function () &#123; 这一行前添加一行var imageSrc &#x3D; path.join(hexo.config.root + filename).replace(&#x2F;\\&#x2F;g, &#39;&#x2F;&#39;).replace(&#39;.png\&#x2F;&#39;, &#39;.png&#39;)然后将res.done(&#123;          src: path.join(hexo.config.root + filename),          msg: msg&#125;)替换成res.done(&#123;          src: imageSrc,          msg: msg&#125;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>这样发不出来的图片就不会出现裂图了</li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> hexo-admin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>群晖下 gitea+drone+harbor实现CI/CD 发布到云服务器</title>
      <link href="/2022/05/19/cnblogs/16284709/"/>
      <url>/2022/05/19/cnblogs/16284709/</url>
      
        <content type="html"><![CDATA[<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><pre class="line-numbers language-none"><code class="language-none">sudo -i然后输入密码登录root账户（群晖默认只能使用admin账号登陆）vim xxx编辑（编辑是进去之后按i，退出并保存是按esc，然后:wq!再回车）mkdir xx创建文件夹<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><h3 id="1-群晖一般默认安装docker"><a href="#1-群晖一般默认安装docker" class="headerlink" title="1. 群晖一般默认安装docker"></a>1. 群晖一般默认安装docker</h3><pre><code>        我们不需要进行安装，如果没有安装，则去套件中心进行安装即可</code></pre><h3 id="2-域名"><a href="#2-域名" class="headerlink" title="2. 域名"></a>2. 域名</h3><pre><code>        这个不做详细赘述 比如，此文中域名是www.mydomain.com</code></pre><h3 id="3-文件夹权限"><a href="#3-文件夹权限" class="headerlink" title="3. 文件夹权限"></a>3. 文件夹权限</h3><pre><code>        在群晖的volume2的docker文件夹下创建/volume2/docker/gitea/data、/volume2/docker/gitea/data、/volume2/docker/harbor/common/config，并赋予Everyone权限</code></pre><p><img src="/cnblogs/16284709/789895-20220517111756488-2065442884.png" class="lazyload placeholder" data-srcset="/cnblogs/16284709/789895-20220517111756488-2065442884.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"><br><img src="/cnblogs/16284709/789895-20220517111813678-1694156337.png" class="lazyload placeholder" data-srcset="/cnblogs/16284709/789895-20220517111813678-1694156337.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"><br><img src="/cnblogs/16284709/789895-20220517111832836-992205237.png" class="lazyload placeholder" data-srcset="/cnblogs/16284709/789895-20220517111832836-992205237.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"><br><img src="/cnblogs/16284709/789895-20220517111854548-1820389538.png" class="lazyload placeholder" data-srcset="/cnblogs/16284709/789895-20220517111854548-1820389538.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"></p><h3 id="4-root权限"><a href="#4-root权限" class="headerlink" title="4. root权限"></a>4. root权限</h3><pre><code>         drone的deploy步骤需要root权限来进行docker发布，所以需要群晖的root也开一下，但是群晖默认关闭root</code></pre><pre class="line-numbers language-none"><code class="language-none">ssh中sudo -i进入root权限vim &#x2F;etc&#x2F;ssh&#x2F;sshd_config将#PermitRootLogin 这一行去掉注释，修改为PermitRootLogin yes保存退出，然后执行synouser --setpw root xxxxxx  （xxxxxx就是你的root密码）reboot重启群晖即可<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="安装PostgreSQL"><a href="#安装PostgreSQL" class="headerlink" title="安装PostgreSQL"></a>安装PostgreSQL</h2><pre class="line-numbers language-none"><code class="language-none">执行下面的语句，安装postgres数据库，安装成功之后，用户名是postgres，密码是postgrespw，端口号是14332，初始数据库是postgresdocker run --name postgres -e POSTGRES_PASSWORD&#x3D;postgrespw -v &#x2F;volume2&#x2F;docker&#x2F;postgres&#x2F;data:&#x2F;var&#x2F;lib&#x2F;postgresql&#x2F;data -d -p 14332:5432 postgres执行成功之后我们可以使用导航猫（navicat）连接试一下，连接成功之后添加一个gitea数据库<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="安装gitea"><a href="#安装gitea" class="headerlink" title="安装gitea"></a>安装gitea</h2><pre class="line-numbers language-none"><code class="language-none">执行下面的语句，安装giteadocker run -d --name&#x3D;gitea -p 10022:22 -p 13000:3000 -v &#x2F;volume2&#x2F;docker&#x2F;gitea&#x2F;data:&#x2F;data gitea&#x2F;gitea<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>安装成功之后进入<a href="http://www.mydomain.com:13000,此时是一个gitea初始化的界面设置数据库连接是postgresql，数据库名称是gitea；修改站点名称，服务器域名www.mydomain.com,http端口3000，基础URL：http://www.mydomain.com:13000/">http://www.mydomain.com:13000,此时是一个gitea初始化的界面设置数据库连接是postgresql，数据库名称是gitea；修改站点名称，服务器域名www.mydomain.com,http端口3000，基础URL：http://www.mydomain.com:13000/</a> , 管理员账号密码填写gitea账号密码(比如账号是myusername)，邮箱写一个然后点击安装<br>安装成功之后我们将进入<a href="http://www.mydomain.com:13000，输入账号密码进入，新建一个仓库，这个仓库可以是从其他网站仓库地址拉过来的，拉取过来的仓库只有只读权限，我们需要将仓库更改为普通仓库（在仓库设置=&gt;危险操作区=&gt;转移仓库所有权），否则会造成无法提交的问题（gitea">http://www.mydomain.com:13000，输入账号密码进入，新建一个仓库，这个仓库可以是从其他网站仓库地址拉过来的，拉取过来的仓库只有只读权限，我们需要将仓库更改为普通仓库（在仓库设置=&gt;危险操作区=&gt;转移仓库所有权），否则会造成无法提交的问题（gitea</a>  mirror repository is read-only）<br><img src="/cnblogs/16284709/789895-20220517112425303-1331896187.png" class="lazyload placeholder" data-srcset="/cnblogs/16284709/789895-20220517112425303-1331896187.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"></p><p>下一步，进行drone设置，此时我们的drone未安装，但是我们将14000端口分配给它使用，也就是<a href="http://www.mydomain.com:14000/">http://www.mydomain.com:14000</a><br>点击头像（右上角）=&gt;设置=&gt;应用=&gt;创建新的 OAuth2 应用程序，应用名称填写drone，重定向 URI填写<a href="http://www.mydomain.com:14000/login%EF%BC%8C%E7%82%B9%E5%87%BB%E5%88%9B%E5%BB%BA%E5%BA%94%E7%94%A8%EF%BC%8C%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%8Bclient-id%E3%80%81client-secret">http://www.mydomain.com:14000/login，点击创建应用，记录一下client-id、client-secret</a></p><h2 id="安装drone"><a href="#安装drone" class="headerlink" title="安装drone"></a>安装drone</h2><p>在安装之前，我们可以先执行一下<br><code>openssl rand -hex 16</code>来获取一个共享的key，这个key值我们下面将使用到（当然也可以使用其他方法来随机获取一个加密程度更高的key）</p><p>安装drone server</p><pre class="line-numbers language-none"><code class="language-none">docker run \  --volume&#x3D;&#x2F;var&#x2F;lib&#x2F;drone:&#x2F;data \  --env&#x3D;DRONE_GITEA_SERVER&#x3D;http:&#x2F;&#x2F;www.mydomain.com:13000 \  --env&#x3D;DRONE_GITEA_CLIENT_ID&#x3D;client-id \  --env&#x3D;DRONE_GITEA_CLIENT_SECRET&#x3D;client-secret \  --env&#x3D;DRONE_RPC_SECRET&#x3D;共享的key \  --env&#x3D;DRONE_SERVER_HOST&#x3D;www.mydomain.com:14000 \  --env&#x3D;DRONE_DATABASE_DRIVER&#x3D;postgres \  --env&#x3D;DRONE_DATABASE_DATASOURCE&#x3D;postgres:&#x2F;&#x2F;postgres:postgrespw@172.17.0.1:14332&#x2F;postgres?sslmode&#x3D;disable \  --env&#x3D;DRONE_SERVER_PROTO&#x3D;http \  --publish&#x3D;14000:80 \  --publish&#x3D;14443:443 \  --restart&#x3D;always \  --detach&#x3D;true \  --name&#x3D;drone \  --env&#x3D;DRONE_USER_CREATE&#x3D;username:myusername,admin:true \  drone&#x2F;drone:2  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>安装drone-runner</p><pre class="line-numbers language-none"><code class="language-none">docker run --detach \  --volume&#x3D;&#x2F;var&#x2F;run&#x2F;docker.sock:&#x2F;var&#x2F;run&#x2F;docker.sock \  --env&#x3D;DRONE_RPC_PROTO&#x3D;http \  --env&#x3D;DRONE_RPC_HOST&#x3D;www.mydomain.com:14000 \  --env&#x3D;DRONE_RPC_SECRET&#x3D;共享的key \  --env&#x3D;DRONE_RUNNER_CAPACITY&#x3D;2 \  --env&#x3D;DRONE_RUNNER_NAME&#x3D;test-runner \  --env&#x3D;DRONE_AGENTS_ENABLED&#x3D;true \  --publish&#x3D;14300:3000 \  --restart&#x3D;always \  --name&#x3D;runner \  drone&#x2F;drone-runner-docker:1  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>安装成功之后，进入<a href="http://www.mydomain.com:14000,应该可以看到刚才我们在gitea创建的仓库了">http://www.mydomain.com:14000,应该可以看到刚才我们在gitea创建的仓库了</a><br><img src="/cnblogs/16284709/789895-20220517114752421-658892608.png" class="lazyload placeholder" data-srcset="/cnblogs/16284709/789895-20220517114752421-658892608.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"></p><p>在此时的gitea里面，我们在这个项目的设置=&gt;Web 钩子里面能看到一个网址连接，这个网址连接就指向的是drone<br><img src="/cnblogs/16284709/789895-20220517130635925-523477370.png" class="lazyload placeholder" data-srcset="/cnblogs/16284709/789895-20220517130635925-523477370.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"></p><p>点击仓库进去，在settings里面打开Trusted<br><img src="/cnblogs/16284709/789895-20220517130240740-1674070652.png" class="lazyload placeholder" data-srcset="/cnblogs/16284709/789895-20220517130240740-1674070652.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"></p><p>然后在左下角的setting里面添加用户test-runner（对应drone-runner安装里面的DRONE_RUNNER_NAME）<br><img src="/cnblogs/16284709/789895-20220517130352970-2011761276.png" class="lazyload placeholder" data-srcset="/cnblogs/16284709/789895-20220517130352970-2011761276.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"></p><p>此时，我们的gitea和drone已经OK了，我们来安装一下harbor</p><h2 id="安装harbor"><a href="#安装harbor" class="headerlink" title="安装harbor"></a>安装harbor</h2><h3 id="1-安装过程"><a href="#1-安装过程" class="headerlink" title="1. 安装过程"></a>1. 安装过程</h3><p>参考<a href="https://www.cnblogs.com/fallTakeMan/p/11944042.html">使用Harbor搭建Docker私有镜像仓库</a>，去[goharbor/harbor/releases (<a href="https://github.com/goharbor/harbor/releases)%E4%B8%8B%E8%BD%BD%E4%B8%80%E4%B8%8B%E6%9C%80%E6%96%B0%E7%89%88%E7%9A%84harbor-offline-installer-vx.x.x.tgz%EF%BC%8C%E5%BB%BA%E8%AE%AE%E9%A6%96%E5%85%88">https://github.com/goharbor/harbor/releases)下载一下最新版的harbor-offline-installer-vx.x.x.tgz，建议首先</a></p><pre class="line-numbers language-none"><code class="language-none">cd &#x2F;volume2&#x2F;dockerwget https:&#x2F;&#x2F;github.com&#x2F;goharbor&#x2F;harbor&#x2F;releases&#x2F;download&#x2F;v1.10.11&#x2F;harbor-offline-installer-v1.10.11.tgztar -zxvf harbor-offline-installer-v1.10.11.tgzcd harbormkdir commoncd commonmkdir configcd &#x2F;volume2&#x2F;docker&#x2F;harborvim harbor.yml  &#x2F;&#x2F;修改一下hostname和port，比如hostname：www.mydomain.com ， port：19080, 然后保存退出sudo .&#x2F;install.sh &#x2F;&#x2F;最后会输出&#96;Harbor has been installed  and started successfully&#96;，说明安装成功<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们进入<a href="http://www.mydomain.com:19080，然后输入账号admin，密码Harbor12345，进入后去更改一下密码（！！！注意，此时的密码不能有特殊符号，否则不会保存，更改harbor.yml时，里面的所有密码最好不要随意更改）">http://www.mydomain.com:19080，然后输入账号admin，密码Harbor12345，进入后去更改一下密码（！！！注意，此时的密码不能有特殊符号，否则不会保存，更改harbor.yml时，里面的所有密码最好不要随意更改）</a><br>然后去系统设置=&gt;用户管理新增一个用户（用户名：myharborname,密码：myharborpw），便于一会儿进行docker的操作<br>同时点击项目=&gt;library=&gt;成员=&gt;添加用户，将myharborname添加进来，权限设置成项目管理员（否则有可能出现publish阶段的denied: requested access to the resource is denied问题，该问题也可以通过<code>docker login www.mydomain.com:19080</code>登陆一下来尝试解决）<br><img src="/cnblogs/16284709/789895-20220517131720760-1485029732.png" class="lazyload placeholder" data-srcset="/cnblogs/16284709/789895-20220517131720760-1485029732.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"></p><h3 id="2-问题"><a href="#2-问题" class="headerlink" title="2. 问题"></a>2. 问题</h3><ol><li>如果出现了harbor-db容器经常重启的问题，可以通过<code>docker logs --tail=&quot;100&quot; harbor-db //查看最近100行日志</code>，如果日志是<code>could not write lock file &quot;postmaster.pid&quot;: No space left on device</code>或者通过<code>cat /var/log/harbor/postgresql.log | tail -20</code>查出来的日志包含<code>could not close temporary statistics file &quot;pg_stat_tmp/db_12406.tmp&quot;: No space left on device</code>，那说明docker提交太频繁导致内存不足，<pre class="line-numbers language-none"><code class="language-none">cat &#x2F;volume2&#x2F;docker&#x2F;harbor&#x2F;docker-compose.yml --查看一下postgresql的映射路径，发现是&#x2F;data&#x2F;databasecd &#x2F;data&#x2F;databaserm -rf &#x2F;data&#x2F;databasecd &#x2F;datamkdir databasecd &#x2F;volume2&#x2F;docker&#x2F;harbordocker-compose down -v --关闭所有的harbor容器cd &#x2F;volume2&#x2F;docker&#x2F;harbor&#x2F;common&#x2F;configrm -rf *cd &#x2F;volume2&#x2F;docker&#x2F;harborsudo .&#x2F;install.sh --重新安装一下，密码、用户等需要重新添加一次 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>如果出现了<a href="http://www.mydomain.com:19080登陆报错500，那么一般去重启一下harbor的nginx容器即可">http://www.mydomain.com:19080登陆报错500，那么一般去重启一下harbor的nginx容器即可</a></li></ol><h2 id="CI和CD"><a href="#CI和CD" class="headerlink" title="CI和CD"></a>CI和CD</h2><p>我们再去drone中刚才的仓库中setting=&gt;Secret新增两个Secret<br>分别是：<br>docker_username 值：myharborname  ；  docker_password 值：myharborpw<br><img src="/cnblogs/16284709/789895-20220517132043920-686434640.png" class="lazyload placeholder" data-srcset="/cnblogs/16284709/789895-20220517132043920-686434640.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"></p><p>之前的仓库我们拉取到本地，推荐使用Sourcetree，拉取之后在仓库的根目录下面创建两个文件.drone.yml和Dockerfile<br>我这里使用的是.net 6，所有Dockerfile内容：</p><pre class="line-numbers language-none"><code class="language-none">FROM mcr.microsoft.com&#x2F;dotnet&#x2F;aspnet:6.0COPY . .WORKDIR &#x2F;appEXPOSE 29029&#x2F;tcpENTRYPOINT [&quot;dotnet&quot;, &quot;k8s-netcore-demo.dll&quot;]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>.drone.yml的内容：</p><pre class="line-numbers language-none"><code class="language-none">kind: pipelinetype: dockername: deploymentsteps:- name: ls  image: alpine  commands:  - ls -la  - ls -la Dockerfile  --查看当前文件夹是否包含了Dockerfile- name: build  image: mcr.microsoft.com&#x2F;dotnet&#x2F;sdk:6.0  commands:  - dotnet restore  - dotnet build -c Release -o &#x2F;drone&#x2F;src_temp&#x2F;k8s-netcore-demo&#x2F; --no-restore  --build之后的文件输出到&#x2F;drone&#x2F;src_temp&#x2F;k8s-netcore-demo&#x2F;目录中，因为项目文件默认在&#x2F;drone&#x2F;src&#x2F;目录，而build默认输出也是&#x2F;drone&#x2F;src&#x2F;，我们后面发布到docker里面只需要发布build的文件即可，所以先输出到临时目录  - mv &#x2F;drone&#x2F;src&#x2F;Dockerfile &#x2F;drone&#x2F;src_temp&#x2F;k8s-netcore-demo&#x2F; --将项目文件目录中的Dockerfile也移动到临时目录  - rm -rf *   --删除项目文件&#x2F;drone&#x2F;src&#x2F;下面的所有文件  - mv &#x2F;drone&#x2F;src_temp&#x2F;k8s-netcore-demo&#x2F;* &#x2F;drone&#x2F;src  --将临时目录的文件移动到drone执行的默认目录中  - ls -la  --查看最后的&#x2F;drone&#x2F;src&#x2F;下文件，可以验证一下是不是build之后+Dockerfile文件  - pwd  --输出当前文件夹路径  - echo 项目生成成功- name: publish 2 harbor  image: plugins&#x2F;docker  settings:     dockerfile: Dockerfile    tags: latest    insecure: true    registry: www.mydomain.com:19080    repo: www.mydomain.com:19080&#x2F;library&#x2F;k8s-netcore-demo    storage_driver: vfs    username:       from_secret: docker_username    password:       from_secret: docker_password- name: deploy  image: appleboy&#x2F;drone-ssh  pull: true  settings:    host: 云服务器IP    port: 22    username: root    password: root密码    command_timeout: 2m    script:       - source &#x2F;etc&#x2F;profile      - ls -la      - docker info      - echo $(docker ps -aqf &quot;name&#x3D;k8s-netcore-demo&quot;)      - docker stop $(docker ps -aqf &quot;name&#x3D;k8s-netcore-demo&quot;)      - docker container rm k8s-netcore-demo      - docker rmi k8s-netcore-demo      - echo 查看是否成功删除k8s-netcore-demo      - docker ps -a      - echo 从harbor拉取docker镜像      - sudo docker container rm xxxxxx&#x2F;k8s-netcore-demo      - sudo docker pull www.mydomain.com:19080&#x2F;library&#x2F;k8s-netcore-demo:latest      - sudo docker tag www.mydomain.com:19080&#x2F;library&#x2F;k8s-netcore-demo:latest xxxxxx&#x2F;k8s-netcore-demo:latest      - sudo docker run --name k8s-netcore-demo -d -p 29029:80 xxxxxx&#x2F;k8s-netcore-demo      - &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker system prune -f      - echo docker容器启动成功 &#x2F;&#x2F;可增加 branches: [ master ] #只对master代码触发部署<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里简单解释一下</p><ol><li>image: mcr.microsoft.com/dotnet/aspnet:6.0，原来的<a href="https://www.cnblogs.com/fallTakeMan/p/11875846.html">Gogs + Drone 实现CI/CD（CD）</a>中image是microsoft/dotnet，但是实际会出现错误（Error response from daemon: pull access denied for microsoft/dotnet, repository does not exist or may require ‘docker login’: denied: requested access to the resource is denied），从<a href="https://developercommunity.visualstudio.com/t/unable-to-build-pipeline-pull-access-denied-for-mi/1513743">Unable to build pipeline: pull access denied for microsoft/dotnet, repository does not exist or may require ‘docker login’: denied: requested access</a>中找到问题，是因为微软把docker库迁走了，这个仓库没有对应的dotnet镜像了。。。所以我们要根据自己的项目版本自己去更改， 不要使用mcr.microsoft.com/dotnet/aspnet:6.0，要使用sdk</li><li>dockerfile: Dockerfile这里我没有使用drone-ci-demo/Dockerfile，因为Dockerfile其实是在根目录下，可以查看name: ls的输出，查阅问题链接<a href="https://discourse.drone.io/t/unable-to-evaluate-symlinks-in-dockerfile-path-lstat-drone-src-dockerfile-no-such-file-or-directory/7379/3">unable to evaluate symlinks in Dockerfile path: lstat /drone/src/Dockerfile: no such file or directory</a></li><li>增加storage_driver: vfs，解决链接<a href="https://discourse.drone.io/t/plugins-docker-on-synology-dsm/8456/5">Plugins/Docker on Synology DSM</a></li><li>因为群晖默认没有开root，所以要按照准备工作第三步进行操作，打开root，如果使用admin账号，则会出现权限问题，是因为admin不能在ssh中调用docker和其他script指令（第一次尝试我是按照部署到群晖执行的（群晖的dotnet SDK安装之后软连接好像有问题，无法执行），所以有上面的一句话，如果发布到云服务器，可以给其他账户开权限，这样就不必使用root账户了）</li></ol><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="1-群晖与其他linux的不同"><a href="#1-群晖与其他linux的不同" class="headerlink" title="1. 群晖与其他linux的不同"></a>1. 群晖与其他linux的不同</h3><pre><code>   #### 1. docker的daemon.json地址          不是`/etc/docker/daemon.json`,而是`/var/packages/Docker/etc/dockerd.json`   #### 2. 常用命令不是`systemctl`或者`service`          常用命令不是`systemctl`或者`service`，而是`synoservice`，前面加一个`syno`,可以通过`synoservicecfg --list`查看群晖下运行的所有服务，其中套件中心的服务前面需要加`pkgctl-`作为前缀，例如`synoservice –restart pkgctl-Docker`</code></pre><h3 id="2-云服务器安装dotnet，自己可以去查阅微软的文档-在-Linux-发行版上安装-NET"><a href="#2-云服务器安装dotnet，自己可以去查阅微软的文档-在-Linux-发行版上安装-NET" class="headerlink" title="2. 云服务器安装dotnet，自己可以去查阅微软的文档 在 Linux 发行版上安装 .NET"></a>2. 云服务器安装dotnet，自己可以去查阅微软的文档 <a href="https://docs.microsoft.com/zh-cn/dotnet/core/install/linux">在 Linux 发行版上安装 .NET</a></h3><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://discourse.drone.io/">https://discourse.drone.io/</a><br><a href="https://plugins.drone.io/plugins/docker">https://plugins.drone.io/plugins/docker</a><br><a href="https://65535.pub/2020/06/01/gitea-drone-%E7%BE%A4%E6%99%96%E6%90%AD%E5%BB%BA/">https://65535.pub/2020/06/01/gitea-drone-%E7%BE%A4%E6%99%96%E6%90%AD%E5%BB%BA/</a><br><a href="https://www.cnblogs.com/fallTakeMan/p/11944042.html">https://www.cnblogs.com/fallTakeMan/p/11944042.html</a><br><a href="https://www.cnblogs.com/fallTakeMan/p/11866584.html">https://www.cnblogs.com/fallTakeMan/p/11866584.html</a><br><a href="https://www.cnblogs.com/fallTakeMan/p/11875846.html">https://www.cnblogs.com/fallTakeMan/p/11875846.html</a><br><a href="https://www.hafuhafu.cn/267/">https://www.hafuhafu.cn/267/</a><br><a href="https://www.cnblogs.com/manastudent/p/15938616.html">https://www.cnblogs.com/manastudent/p/15938616.html</a><br><a href="https://www.msnao.com/2019/04/26/568.html">https://www.msnao.com/2019/04/26/568.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> gitea </tag>
            
            <tag> drone </tag>
            
            <tag> harbor </tag>
            
            <tag> 群晖 </tag>
            
            <tag> .net6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>oracle删除超过N天数据脚本</title>
      <link href="/2022/02/28/cnblogs/15944641/"/>
      <url>/2022/02/28/cnblogs/15944641/</url>
      
        <content type="html"><![CDATA[<p>公司内做的项目是工厂内的，一般工厂内数据要求的是实时性，很久之前的数据可以自行删除处理，我们数据库用的oracle，所以就想着写一个脚本来删除，这样的话，脚本不管放在那里使用都可以达到效果</p><p>由于服务器是windows，参照<a href="https://oracle-base.com/articles/misc/oracle-shell-scripting">Oracle Shell Scripting</a>中，我们写一下windows下的脚本</p><p>首先删除数据的sql语句写一下</p><pre class="line-numbers language-none"><code class="language-none">DELETE FROM tablename WHERE createdtime&lt;TRUNC(SYSDATE)-59;  --删除59天前的数据commit;   --提交事务alter table tablename enable row movement;  --数据删除之后会产生很多空行，打开行移动，移动之后rowid会发生变化alter table tablename shrink space;  --连同索引一起压缩，解决delete语句造成的空间未释放问题alter table tablename disable row movement;  --关闭行迁移<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这一段相当于</p><pre class="line-numbers language-none"><code class="language-none">SPOOL C:\emp.lstSET LINESIZE 100SET PAGESIZE 50SELECT *FROM emp;SPOOL OFF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>所以我们得到了一个新的sql文件,例如C:\emp.sql</p><pre class="line-numbers language-none"><code class="language-none">CONNECT scott&#x2F;tiger--开始删除DELETE FROM tablename WHERE createdtime&lt;TRUNC(SYSDATE)-59;commit;alter table tablename enable row movement;alter table tablename shrink space;alter table tablename disable row movement;--结束删除--如果删除多个表，可以将上面语句复制一下，tablename和where条件修改一下就可以了EXIT;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后创建一个文件C:\get_emp.bat</p><pre class="line-numbers language-none"><code class="language-none">@echo offecho 开始删除过期数据并缩容sqlplus &#x2F;nolog @C:\emp.sqlecho 执行成功pauseexit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>保存之后，执行一下看会不会出现问题，如果不会出现问题，添加一下windows的任务计划程序，或者自己写一个windows服务，定期调用一下这个bat就可以了</p><p>linux版本的类似，写法这个连接下面有，写完之后先进行测试，然后使用cron或者其他进行定期调用即可</p><p>当然，操作数据库表不局限于定期清理数据，也可以进行报表生成、新表创建等其他操作</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CentOS单机安装k8s并部署.NET 6程序 压测 记录</title>
      <link href="/2022/02/26/cnblogs/15939761/"/>
      <url>/2022/02/26/cnblogs/15939761/</url>
      
        <content type="html"><![CDATA[<p>前面部分依照<a href="https://jishuin.proginn.com/p/763bfbd73d1e">CentOS单机安装k8s并部署.NET 6程序</a>来进行，内存、cpu、centos版本一致，之前222元买的三年8M 2c4g<a href="https://curl.qcloud.com/LON6nh1w">腾讯云轻量服务器</a>，这个教程算是写的很详细的了，基本可以一致执行下去就能打开网页</p><p>我卡在了搭建私有仓库部分，里面写的是需要添加insecure-registries，然后重启，但是重启之后我这里一直启动不了（IP已经修改成自己服务器的IP），随后我将添加的insecure-registries部分删掉，然后推送仓库时推送到了自己的docker hub（10.211.55.10:8888替换成自己的hub名称，后面的yaml里面也需要对应修改），并且想着后面做压测，就稍微改了一下代码，在<code>app.Run();</code>前增加了</p><pre class="line-numbers language-none"><code class="language-none">app.UseEndpoints(endpoints &#x3D;&gt;&#123;    endpoints.MapGet(&quot;&#x2F;get&quot;,async content &#x3D;&gt; &#123;        await content.Response.WriteAsync(&quot;hello!&quot;);    &#125;);&#125;);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样，压测我们就直接访问/get</p><p>如果按照教程搞完之后，需要对网站进行修改，然后更新到k8s，那么可以在 dotnet publish 之后，将文件复制进容器中</p><pre class="line-numbers language-none"><code class="language-none">docker ps -adocker cp &#x2F;root&#x2F;publish&#x2F;. a4951a90cc85:&#x2F;app&#x2F;docker commit -m&#x3D;&quot;添加get&quot; a4951a90cc85 wangpengzong&#x2F;k8s-netcore-demo:1.1docker push wangpengzong&#x2F;k8s-netcore-demo:1.1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后去修改yaml文件里面的image，将<code>image: wangpengzong/k8s-netcore-demo</code>修改成<code>image: wangpengzong/k8s-netcore-demo:1.1</code>，然后保存</p><p>执行<code>kubectl delete -f deploy.yaml</code>删除之前创建的yaml和对应pod等<br>再执行一下<code>kubectl create -f deploy.yaml --validate</code>一下即可，执行之后需要重新查看新的端口号<code>kubectl get svc -n k8s-netcore</code></p><p>压测我是用的是go-stress-testing（<a href="https://segmentfault.com/a/1190000020211494">压测工具如何选择? ab、locust、Jmeter、go压测工具【单台机器100w连接压测实战】</a>），安装时可能出现安装不了的问题，例如<br><code>A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.</code>，更改一下代理<code>go env -w GOPROXY=https://goproxy.cn,direct</code>即可</p><pre class="line-numbers language-none"><code class="language-none">-c 表示并发数-n 每个并发执行请求的次数，总请求的次数 &#x3D; 并发数 * 每个并发执行请求的次数-u 需要压测的地址# clone 项目git clone https:&#x2F;&#x2F;github.com&#x2F;link1st&#x2F;go-stress-testing.git# 进入项目目录cd go-stress-testing# 运行 go run main.go -c 1 -n 100 -u https:&#x2F;&#x2F;www.baidu.com&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>简单压测，如果直接访问网站<code>go run main.go -c 100 -n 100 -u http://ip:port</code>，结果是这样的<br><img src="/cnblogs/15939761/789895-20220226164638139-2008783301.png" class="lazyload placeholder" data-srcset="/cnblogs/15939761/789895-20220226164638139-2008783301.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"><br>某运维大佬评价<br><img src="/cnblogs/15939761/789895-20220226164847500-536945200.png" class="lazyload placeholder" data-srcset="/cnblogs/15939761/789895-20220226164847500-536945200.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"></p><p>访问刚才的/get `go run main.go -c 100 -n 100 -u <a href="http://ip:port/get```，结果是这样">http://ip:port/get```，结果是这样</a><br><img src="/cnblogs/15939761/789895-20220226164746450-1643262002.png" class="lazyload placeholder" data-srcset="/cnblogs/15939761/789895-20220226164746450-1643262002.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"></p><p>此次给出的评价是<br><img src="/cnblogs/15939761/789895-20220226164817702-919307590.png" class="lazyload placeholder" data-srcset="/cnblogs/15939761/789895-20220226164817702-919307590.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"></p>]]></content>
      
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> k8s </tag>
            
            <tag> 压测 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ABCD四个顺序执行方法，拓展性延申</title>
      <link href="/2022/02/14/cnblogs/15892850/"/>
      <url>/2022/02/14/cnblogs/15892850/</url>
      
        <content type="html"><![CDATA[<p>今天在群里，有人问<br><code>有几个void返回值的方法，但是我想让这几个方法有执行顺序，要怎么处理，ABCD 四个方法，依次执行，但是这几个方法都是无返回值的</code></p><p>这个问题其实很简单，如果方法是同步方法，直接四个方法连续写就好了，比如：</p><pre class="line-numbers language-none"><code class="language-none">static void Main()&#123;       A();       B();       C();       D();&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>但是如果方法里面包含了耗时操作（数据提交或者文件操作等），那么四个这样写就有问题了，执行顺序就错掉了，我们需要利用callback函数来进行操作，但是本着能不动原方法就不动的理念，我们使用Task的OnCompleted事件（.net framework中可以使用BeginInvoke(callback,null)）来做处理</p><ol><li>如果方法有返回值，则使用Func，或者Func&lt;&gt;</li><li>如果方法没有返回值，则使用Action，或者Action&lt;&gt;</li></ol><h3 id="1-无返回值在-net-core中使用Task的OnCompleted事件"><a href="#1-无返回值在-net-core中使用Task的OnCompleted事件" class="headerlink" title="1. 无返回值在.net core中使用Task的OnCompleted事件"></a>1. 无返回值在.net core中使用Task的OnCompleted事件</h3><p>由于是没有返回值的方法，我们使用<br>例如</p><pre class="line-numbers language-none"><code class="language-none"> static void Main()&#123;       Action action1 &#x3D; () &#x3D;&gt; &#123;            Thread.Sleep(1000);            Console.WriteLine(&quot;action1&quot;);        &#125;;        Action action2 &#x3D; () &#x3D;&gt; &#123;            Thread.Sleep(2000);            Console.WriteLine(&quot;action2&quot;);        &#125;;        Action action3 &#x3D; () &#x3D;&gt; &#123;            Thread.Sleep(3000);            Console.WriteLine(&quot;action3&quot;);        &#125;;        Action action4 &#x3D; () &#x3D;&gt; &#123;            Thread.Sleep(3000);            Console.WriteLine(&quot;action4&quot;);        &#125;;        Stack st &#x3D; new Stack();        st.Push(action2);        st.Push(action3);        st.Push(action4);        void MyAsynCallback()        &#123;            if (st.Count &gt; 0)            &#123;                var action &#x3D; (Action)st.Pop();                Task.Run(action).GetAwaiter().OnCompleted(() &#x3D;&gt;                &#123;                    MyAsynCallback();                &#125;);            &#125;        &#125;        Task.Run(action1).GetAwaiter().OnCompleted(() &#x3D;&gt;        &#123;            MyAsynCallback();        &#125;);        Console.ReadLine();        &#x2F;&#x2F;Stack的Pop是先进后出，输出顺序action1 action4 action3 action2&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们可以将Stack改成其他的，比如List、Queue等，自行判断是否需要手动弹出action即可</p><h3 id="2-无返回值在-net-framework中使用BeginInvoke"><a href="#2-无返回值在-net-framework中使用BeginInvoke" class="headerlink" title="2. 无返回值在.net framework中使用BeginInvoke"></a>2. 无返回值在.net framework中使用BeginInvoke</h3><pre class="line-numbers language-none"><code class="language-none"> static void Main()&#123;       Action action1 &#x3D; () &#x3D;&gt; &#123;            Thread.Sleep(1000);            Console.WriteLine(&quot;action1&quot;);        &#125;;        Action action2 &#x3D; () &#x3D;&gt; &#123;            Thread.Sleep(2000);            Console.WriteLine(&quot;action2&quot;);        &#125;;        Action action3 &#x3D; () &#x3D;&gt; &#123;            Thread.Sleep(3000);            Console.WriteLine(&quot;action3&quot;);        &#125;;        Action action4 &#x3D; () &#x3D;&gt; &#123;            Thread.Sleep(3000);            Console.WriteLine(&quot;action4&quot;);        &#125;;        Stack st &#x3D; new Stack();        st.Push(action2);        st.Push(action3);        st.Push(action4);        void MyAsynCallback(IAsyncResult async)        &#123;            if (st.Count &gt; 0)            &#123;                var action &#x3D; (Action)st.Pop();                action.BeginInvoke(new AsyncCallback(MyAsynCallback),null);            &#125;        &#125;        action1.BeginInvoke(new AsyncCallback(MyAsynCallback), null);        Console.ReadLine();        &#x2F;&#x2F;Stack的Pop是先进后出，输出顺序action1 action4 action3 action2&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-有返回值在-net-core中使用Task的OnCompleted事件"><a href="#3-有返回值在-net-core中使用Task的OnCompleted事件" class="headerlink" title="3. 有返回值在.net core中使用Task的OnCompleted事件"></a>3. 有返回值在.net core中使用Task的OnCompleted事件</h3><p>由于是没有返回值的方法，我们使用<br>例如</p><pre class="line-numbers language-none"><code class="language-none"> static void Main()&#123;        Func&lt;int&gt; func1 &#x3D; () &#x3D;&gt; &#123;            Thread.Sleep(1000);            Console.WriteLine(&quot;func1&quot;);            return 1;        &#125;;        Func&lt;int&gt; func2 &#x3D; () &#x3D;&gt; &#123;            Thread.Sleep(2000);            Console.WriteLine(&quot;func2&quot;);            return 1;        &#125;;        Func&lt;int&gt; func3 &#x3D; () &#x3D;&gt; &#123;            Thread.Sleep(3000);            Console.WriteLine(&quot;func3&quot;);            return 0;        &#125;;        Func&lt;int&gt; func4 &#x3D; () &#x3D;&gt; &#123;            Thread.Sleep(3000);            Console.WriteLine(&quot;func4&quot;);            return 1;        &#125;;        Stack st &#x3D; new Stack();        st.Push(func2);        st.Push(func3);        st.Push(func4);        void MyAsynCallback(int result)        &#123;            if (st.Count &gt; 0 &amp;&amp; result &gt; 0)            &#123;                var action &#x3D; (Func&lt;int&gt;)st.Pop();                var task1 &#x3D; Task.Run(action);                task1.GetAwaiter().OnCompleted(() &#x3D;&gt;                &#123;                    MyAsynCallback(task1.Result);                &#125;);            &#125;        &#125;        var task &#x3D; Task.Run(func1);        task.GetAwaiter().OnCompleted(() &#x3D;&gt;        &#123;            MyAsynCallback(task.Result);        &#125;);        Console.ReadLine();        &#x2F;&#x2F;Stack的Pop是先进后出，输出顺序func1 func4 func3 func2&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-有返回值在-net-framework中使用BeginInvoke"><a href="#4-有返回值在-net-framework中使用BeginInvoke" class="headerlink" title="4. 有返回值在.net framework中使用BeginInvoke"></a>4. 有返回值在.net framework中使用BeginInvoke</h3><pre class="line-numbers language-none"><code class="language-none">delegate int dele_func(int a);static void Main()&#123;       Func&lt;int&gt; func1 &#x3D; () &#x3D;&gt; &#123;           Thread.Sleep(1000);           Console.WriteLine(&quot;func1&quot;);           return 1;       &#125;;       Func&lt;int&gt; func2 &#x3D; () &#x3D;&gt; &#123;           Thread.Sleep(2000);           Console.WriteLine(&quot;func2&quot;);           return 1;       &#125;;       Func&lt;int&gt; func3 &#x3D; () &#x3D;&gt; &#123;           Thread.Sleep(3000);           Console.WriteLine(&quot;func3&quot;);           return 1;       &#125;;       Func&lt;int&gt; func4 &#x3D; () &#x3D;&gt; &#123;           Thread.Sleep(3000);           Console.WriteLine(&quot;func4&quot;);           return 1;       &#125;;       Stack st &#x3D; new Stack();       st.Push(func2);       st.Push(func3);       st.Push(func4);       void MyAsynCallback(IAsyncResult async)       &#123;           dele_func dele_Func2 &#x3D; (dele_func)async.AsyncState;           int result &#x3D; dele_Func2.EndInvoke(async);           if (st.Count &gt; 0 &amp;&amp; result &gt; 0)           &#123;               var action &#x3D; (Func&lt;int&gt;)st.Pop();               dele_func dele_Func1 &#x3D; new dele_func((int a) &#x3D;&gt; &#123; return action.Invoke(); &#125;);               IAsyncResult asyncResult1 &#x3D; dele_Func1.BeginInvoke(0, new AsyncCallback(MyAsynCallback), dele_Func1);           &#125;       &#125;       dele_func dele_Func &#x3D; new dele_func((int a) &#x3D;&gt; &#123; return func1.Invoke(); &#125;);       IAsyncResult asyncResult &#x3D; dele_Func.BeginInvoke(0, new AsyncCallback(MyAsynCallback), dele_Func);       Console.ReadLine();       &#x2F;&#x2F;Stack的Pop是先进后出，输出顺序func1 func4 func3 func2&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="有返回值时，可以根据result的判断，来判断是否继续往下执行"><a href="#有返回值时，可以根据result的判断，来判断是否继续往下执行" class="headerlink" title="有返回值时，可以根据result的判断，来判断是否继续往下执行"></a>有返回值时，可以根据result的判断，来判断是否继续往下执行</h3><p>如有问题，欢迎指正</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>不同云服务器下，ubuntu下开k3s集群</title>
      <link href="/2021/12/15/cnblogs/15692108/"/>
      <url>/2021/12/15/cnblogs/15692108/</url>
      
        <content type="html"><![CDATA[<p>首先先感谢老哥的文章：<a href="https://zhuanlan.zhihu.com/p/445353413">h构建多云环境下的K3S集群</a>，但是我尝试在centos 8.2上面前面一直执行报错<br><img src="/cnblogs/15692108/789895-20211215112128412-1674811.png" class="lazyload placeholder" data-srcset="/cnblogs/15692108/789895-20211215112128412-1674811.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"><br>并且安装glibc 2.17时还会报错make版本太低，所以直接放弃centos，投入ubuntu的怀抱</p><p>现在腾讯云的活动确实不错，<a href="https://curl.qcloud.com/LON6nh1w">【腾讯云】云产品限时秒杀，爆款2核4G云服务器首年74元</a>，点进去之后三年8M 2c4g轻量应用服务器222元，月流量1200G，好了，说说k3s吧，K3s相对比K8s更加轻量，对于服务器的要求较低:</p><ul><li>系统内核版本：Linux 3.10+ (CentOS 7, Debian 8/9, Ubuntu 14.04+)</li><li>K3S Server端最低内存要求：512 MB</li><li>K3S Agent端内存最低要求：75MB</li><li>磁盘空间最低要求：200 MB</li><li>支持的硬件架构：x86_64, ARMv7, ARM64</li></ul><p>实际使用过程中，可以在各种环境中进行使用（<a href="https://www.rancher.cn/k3s/">k3s在小到树莓派或大到 AWS a1.4xlarge 32GiB服务器的环境中</a>），也就是使用场景可以小到一个家庭内部的小盒子（斐讯N1）<br>由于我之前买了一个三年的阿里云服务器（1M 1c2g），准备拿阿里云服务器做server，腾讯云服务器做agent做一个单master，单node的k3s集群，不同云服务器见通过内网是访问不了的（可以拓展一下场景，比如家内的linux服务器和外网的云服务器之间也是内网不通的），就需要wireguard来帮助我们做好vpn的功能，服务器的内核建议升级到5.6以上（centos和ubuntu下<code>uname -r</code>查看)，如果内核版本不够高，需要先升级内核，我这里说一下ubuntu的升级方法</p><h1 id="以下内容需要在两台服务器上都进行执行"><a href="#以下内容需要在两台服务器上都进行执行" class="headerlink" title="以下内容需要在两台服务器上都进行执行"></a>以下内容需要在两台服务器上都进行执行</h1><pre><code>* server 阿里云 1M 1c2g ubuntu 20.04* agent 腾讯云 8M 2c4g ubuntu 20.04</code></pre><h2 id="1-升级内核"><a href="#1-升级内核" class="headerlink" title="1.升级内核"></a>1.升级内核</h2><p>在<a href="https://kernel.ubuntu.com/~kernel-ppa/mainline/">kernel.ubuntu.com</a>中寻找自己要下载的内核版本，然后点进去，例如我选择的<code>5.17.7</code><br><img src="/cnblogs/15692108/789895-20211215114236385-1487974069.png" class="lazyload placeholder" data-srcset="/cnblogs/15692108/789895-20211215114236385-1487974069.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"><br>然后服务器上执行<code>dpkg --print-architecture</code>查看一下自己的服务器是amd还是arm等，在上面打开的链接中选择好指定的架构，下载带有下面image和modules、generic的deb文件</p><ul><li>linux-image-X.Y.Z-generic-*.deb</li><li>linux-modules-X.Y.Z-generic-.deb<br>然后上传到服务器上，当然我们也可以这样<pre class="line-numbers language-none"><code class="language-none">mkdir kernelcd kernelwget https:&#x2F;&#x2F;kernel.ubuntu.com&#x2F;~kernel-ppa&#x2F;mainline&#x2F;v5.15.7&#x2F;amd64&#x2F;linux-image-unsigned-5.15.7-051507-generic_5.15.7-051507.202112080459_amd64.debwget https:&#x2F;&#x2F;kernel.ubuntu.com&#x2F;~kernel-ppa&#x2F;mainline&#x2F;v5.15.7&#x2F;amd64&#x2F;linux-modules-5.15.7-051507-generic_5.15.7-051507.202112080459_amd64.deb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>下载速度有点慢，你可以直接<a href="https://www.aliyundrive.com/s/z6Qhc7agAU4">进入我的阿里云盘下载，链接我设置的永久有效</a><br>下载完成之后，执行命令：<pre class="line-numbers language-none"><code class="language-none">sudo dpkg --install *.debsudo reboot <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>服务器重启之后再用<code>uname -r</code>查看一下，现在内核版本已经更新到了5.15.7了，服务器内核已经执行成功之后，我们可以安装wireguard了<h2 id="2-安装wireguard"><a href="#2-安装wireguard" class="headerlink" title="2.安装wireguard"></a>2.安装wireguard</h2><pre class="line-numbers language-none"><code class="language-none">sudo apt updatesudo apt upgrade -ysudo apt install -y iptables wireguard<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>在我们的server服务器执行<code>hostnamectl set-hostname k3s-master</code><br>在我们的agent服务器执行<code>hostnamectl set-hostname k3s-node1</code></li></ul><h2 id="3-安装k3s及配置"><a href="#3-安装k3s及配置" class="headerlink" title="3.安装k3s及配置"></a>3.安装k3s及配置</h2><p>接下来，两台服务器都安装k3s</p><pre class="line-numbers language-none"><code class="language-none">curl -sfL http:&#x2F;&#x2F;rancher-mirror.cnrancher.com&#x2F;k3s&#x2F;k3s-install.sh | INSTALL_K3S_MIRROR&#x3D;cn sh - <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>稍等一会儿，查看我们的<code>ip addr</code></p><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;&#x2F;10.43.0.1我们当作server服务器的内网IPkube-ipvs0: &lt;BROADCAST,NOARP&gt; mtu 1500 qdisc noop state DOWN group default     inet 10.43.0.1&#x2F;32 scope global kube-ipvs0       valid_lft forever preferred_lft forever<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="下面的内容需要分别执行"><a href="#下面的内容需要分别执行" class="headerlink" title="下面的内容需要分别执行"></a>下面的内容需要分别执行</h1><h2 id="server服务器"><a href="#server服务器" class="headerlink" title="server服务器"></a>server服务器</h2><pre class="line-numbers language-none"><code class="language-none">nano &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;k3s.service&#x2F;&#x2F;k3s.service只需要修改ExecStart部分，内网IP10.43.0.1[Unit]Description&#x3D;Lightweight KubernetesDocumentation&#x3D;https:&#x2F;&#x2F;k3s.ioWants&#x3D;network-online.targetAfter&#x3D;network-online.target[Install]WantedBy&#x3D;multi-user.target[Service]Type&#x3D;notifyEnvironmentFile&#x3D;&#x2F;etc&#x2F;systemd&#x2F;system&#x2F;k3s.service.envKillMode&#x3D;processDelegate&#x3D;yesLimitNOFILE&#x3D;1048576LimitNPROC&#x3D;infinityLimitCORE&#x3D;infinityTasksMax&#x3D;infinityTimeoutStartSec&#x3D;0Restart&#x3D;alwaysRestartSec&#x3D;5sExecStartPre&#x3D;-&#x2F;sbin&#x2F;modprobe br_netfilterExecStartPre&#x3D;-&#x2F;sbin&#x2F;modprobe overlayExecStart&#x3D;&#x2F;usr&#x2F;local&#x2F;bin&#x2F;k3s \    server --flannel-backend wireguard --tls-san 公网地址,内网地址 --node-ip 内网地址 --node-external-ip 公网地址 --no-deploy servicelb \    --disable traefik    --kube-proxy-arg &quot;proxy-mode&#x3D;ipvs&quot; &quot;masquerade-all&#x3D;true&quot; \    --kube-proxy-arg &quot;metrics-bind-address&#x3D;0.0.0.0&quot;nano &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;k3s.service.env &#x2F;&#x2F;然后直接Ctrl+X 按y退出来<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>获取token</p><pre class="line-numbers language-none"><code class="language-none">cat &#x2F;var&#x2F;lib&#x2F;rancher&#x2F;k3s&#x2F;server&#x2F;node-token    # 内容类似如下：K10fc6653356f8b0c457cd1a8e41d87b7d33b49a97f4e6b8qweqweqwewq12788a06e85647454::server:53c2qweqwe2222w4d8145be9e7<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="agent服务器"><a href="#agent服务器" class="headerlink" title="agent服务器"></a>agent服务器</h2><pre class="line-numbers language-none"><code class="language-none">nano &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;k3s.service&#x2F;&#x2F;k3s.service只需要修改ExecStart部分&#x2F;&#x2F;&#x2F;内网IP我们写成10.43.0.2[Unit]Description&#x3D;Lightweight KubernetesDocumentation&#x3D;https:&#x2F;&#x2F;k3s.ioWants&#x3D;network-online.targetAfter&#x3D;network-online.target[Install]WantedBy&#x3D;multi-user.target[Service]Type&#x3D;notifyEnvironmentFile&#x3D;&#x2F;etc&#x2F;systemd&#x2F;system&#x2F;k3s.service.envKillMode&#x3D;processDelegate&#x3D;yesLimitNOFILE&#x3D;1048576LimitNPROC&#x3D;infinityLimitCORE&#x3D;infinityTasksMax&#x3D;infinityTimeoutStartSec&#x3D;0Restart&#x3D;alwaysRestartSec&#x3D;5sExecStartPre&#x3D;-&#x2F;sbin&#x2F;modprobe br_netfilterExecStartPre&#x3D;-&#x2F;sbin&#x2F;modprobe overlayExecStart&#x3D;&#x2F;usr&#x2F;local&#x2F;bin&#x2F;k3s agent\    --node-external-ip 公网IP \    --node-ip  内网IP\    --kube-proxy-arg &quot;proxy-mode&#x3D;ipvs&quot; &quot;masquerade-all&#x3D;true&quot; \    --kube-proxy-arg &quot;metrics-bind-address&#x3D;0.0.0.0&quot;设置当前服务器的设备变量nano &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;k3s.service.env# 此处定义集群的api service访问地址以及token内容为：K3S_URL&#x3D;https:&#x2F;&#x2F;server的公网地址:6443K10fc6653356f8b0c457cd1a8e41d87b7d33b49a97f4e6b8qweqweqwewq12788a06e85647454::server:53c2qweqwe2222w4d8145be9e7<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后server服务器和agent服务器都执行</p><pre class="line-numbers language-none"><code class="language-none">systemctl daemon-reload systemctl restart k3s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>如果长时间Hold不执行下去，Ctrl+C取消，执行<code>systemctl status k3s -r或者ajournalctl -u k3s.service -r</code>查看输出日志</p><p>如果报错信息是<br><code>Failed to connect to proxy&quot; error=&quot;x509: certificate is valid for 10.43.0.1, 127.0.0.1, 172.28.115.105, not xxx.xxx.xxx.xxx(server的公网IP)</code><br>先将两个服务器的K3s都停掉，然后全部执行</p><pre class="line-numbers language-none"><code class="language-none">systemctl stop k3scd &#x2F;var&#x2F;lib&#x2F;rm -rf rancherreboot <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>一般重启之后就好了</p><p><img src="/cnblogs/15692108/789895-20211215122523232-1554137109.png" class="lazyload placeholder" data-srcset="/cnblogs/15692108/789895-20211215122523232-1554137109.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"></p><p>下面是服务器的端口开发截图<br><img src="/cnblogs/15692108/789895-20211220155923883-682805455.png" class="lazyload placeholder" data-srcset="/cnblogs/15692108/789895-20211220155923883-682805455.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"></p>]]></content>
      
      
      
        <tags>
            
            <tag> k3s </tag>
            
            <tag> ubuntu </tag>
            
            <tag> ubuntu内核升级 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go将青龙面板里面的脚本文件都下载到本地</title>
      <link href="/2021/11/27/cnblogs/15614177/"/>
      <url>/2021/11/27/cnblogs/15614177/</url>
      
        <content type="html"><![CDATA[<p>纯粹练手用的，大家轻喷<br>青龙面板的脚本文件可以下载到本地，这样的话自己可以研究一下对应的脚本文件，能学到更多的知识，原理其实很简单，F12一下就知道了，青龙面板使用Request Headers里面放入Authorization，那么Token我们已经拿到了，然后获取到所有文件的名称，分级目录，太过于简单，直接上代码了<br><img src="/cnblogs/15614177/789895-20211128011722252-460488491.png" class="lazyload placeholder" data-srcset="/cnblogs/15614177/789895-20211128011722252-460488491.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"></p><pre class="line-numbers language-none"><code class="language-none">package mainimport (&quot;bytes&quot;&quot;encoding&#x2F;json&quot;&quot;fmt&quot;&quot;io&quot;&quot;io&#x2F;ioutil&quot;&quot;net&#x2F;http&quot;&quot;os&quot;&quot;strconv&quot;&quot;strings&quot;&quot;time&quot;)func main() &#123;recordbody :&#x3D; getData(&quot;http:&#x2F;&#x2F;yourIp:5600&#x2F;api&#x2F;scripts&#x2F;files?t&#x3D;&quot;)var conf recordConfigerr :&#x3D; json.Unmarshal(recordbody, &amp;conf)if err !&#x3D; nil &#123;fmt.Println(&quot;error:&quot;, err)&#125;fmt.Printf(&quot;\r\n获取到的body code:%s \n&quot;, strconv.Itoa(conf.Code))for _, val :&#x3D; range conf.Data &#123;if val.Children !&#x3D; nil &#123;for _, childval :&#x3D; range val.Children &#123;childbody :&#x3D; getData(fmt.Sprintf(&quot;http:&#x2F;&#x2F;yourIp:5600&#x2F;api&#x2F;scripts&#x2F;%s?path&#x3D;%s&amp;t&#x3D;&quot;, childval.Value, childval.Parent))var jsconf jsConfigerr :&#x3D; json.Unmarshal(childbody, &amp;jsconf)if err !&#x3D; nil &#123;fmt.Println(&quot;error:&quot;, err)&#125;downloadFile(strings.NewReader(string(jsconf.Data)), childval.Parent, childval.Value)&#125;&#125; else &#123;childbody :&#x3D; getData(fmt.Sprintf(&quot;http:&#x2F;&#x2F;yourIp:5600&#x2F;api&#x2F;scripts&#x2F;%s?t&#x3D;&quot;, val.Value))var jsconf jsConfigerr :&#x3D; json.Unmarshal(childbody, &amp;jsconf)if err !&#x3D; nil &#123;fmt.Println(&quot;error:&quot;, err)&#125;downloadFile(strings.NewReader(string(jsconf.Data)), &quot;&quot;, val.Value)&#125;&#125;fmt.Println(&quot;执行完毕&quot;)&#125;func getData(urlstr string) []byte &#123;times :&#x3D; strconv.FormatInt(time.Now().UnixNano()&#x2F;1e6, 10)var bt bytes.Bufferbt.WriteString(urlstr)bt.WriteString(times)fmt.Printf(bt.String())fmt.Printf(&quot;\n&quot;)client :&#x3D; &amp;http.Client&#123;&#125;req, _ :&#x3D; http.NewRequest(&quot;GET&quot;, bt.String(), nil)req.Header.Add(&quot;Authorization&quot;, &quot;Bearer yourToken&quot;)resp, _ :&#x3D; client.Do(req)defer resp.Body.Close()body, _ :&#x3D; ioutil.ReadAll(resp.Body)return body&#125;func downloadFile(body io.Reader, path string, name string) &#123;filepath :&#x3D; fmt.Sprintf(&quot;.&#x2F;%s&quot;, name)&#x2F;&#x2F; Create output fileif path !&#x3D; &quot;&quot; &#123;if _, err :&#x3D; os.Stat(path); os.IsNotExist(err) &#123;&#x2F;&#x2F; 必须分成两步：先创建文件夹、再修改权限os.Mkdir(path, 0777) &#x2F;&#x2F;0777也可以os.ModePermos.Chmod(path, 0777)&#125;filepath &#x3D; fmt.Sprintf(&quot;.&#x2F;%s&#x2F;%s&quot;, path, name)&#125;out, err :&#x3D; os.Create(filepath)if err !&#x3D; nil &#123;panic(err)&#125;defer out.Close()&#x2F;&#x2F; copy stream_, err &#x3D; io.Copy(out, body)if err !&#x3D; nil &#123;panic(err)&#125;&#125;type jsConfig struct &#123;Code int &#96;json:&quot;code&quot;&#96;Data string &#96;json:&quot;data&quot;&#96;&#125;type recordConfig struct &#123;Code int &#96;json:&quot;code&quot;&#96;Data []bodymsg &#96;json:&quot;data&quot;&#96;&#125;type bodymsg struct &#123;Disabled bool &#96;json:&quot;disabled&quot;&#96;Key string &#96;json:&quot;key&quot;&#96;Mtime float32 &#96;json:&quot;mtime&quot;&#96;Title string &#96;json:&quot;title&quot;&#96;Value string &#96;json:&quot;value&quot;&#96;Children []bodymsgchildren &#96;json:&quot;children&quot;&#96;&#125;type bodymsgchildren struct &#123;Key string &#96;json:&quot;key&quot;&#96;Mtime float32 &#96;json:&quot;mtime&quot;&#96;Title  string &#96;json:&quot;title&quot;&#96;Value  string &#96;json:&quot;value&quot;&#96;Parent string &#96;json:&quot;parent&quot;&#96;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> go </tag>
            
            <tag> go文件下载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建一个完整的K8S集群-------基于CentOS 8系统</title>
      <link href="/2021/11/27/cnblogs/15193971/"/>
      <url>/2021/11/27/cnblogs/15193971/</url>
      
        <content type="html"><![CDATA[<p>创建三个centos节点：</p><div class="cnblogs_code"><pre><span style="color: #800080;">192.168</span>.<span style="color: #800080;">5.141</span> k8s-<span style="color: #000000;">master</span><span style="color: #800080;">192.168</span>.<span style="color: #800080;">5.142</span> k8s-<span style="color: #000000;">nnode1</span><span style="color: #800080;">192.168</span>.<span style="color: #800080;">5.143</span> k8s-nnode2</pre></div><p>查看centos系统版本</p><div class="cnblogs_code"><pre># cat /etc/centos-<span style="color: #000000;">releaseCentOS Linux release 8.2.2004 (Core)&nbsp;<br /></span></pre></div><div class="cnblogs_code"><pre>备注：第1步~<span style="color: #000000;">第8步，所有的节点都要操作，第9、10步Master节点操作，第11步Node节点操作。如果第9、</span><span style="color: #800080;">10</span>、11步操作失败，可以通过 kubeadm reset 命令来清理环境重新安装。</pre></div><h4><span style="color: blue;">1.关闭防火墙</span></h4><div class="cnblogs_code"><pre>#&nbsp;systemctl stop firewalld</pre></div><h4><span style="color: blue;">2.关闭selinux</span></h4><p>&nbsp;</p><div class="cnblogs_code"><pre>#&nbsp;setenforce <span style="color: #800080;">0</span></pre></div><p>&nbsp;</p><h4><span style="color: blue;">3.关闭swap</span></h4><div class="cnblogs_code"><p># nano /etc/fstab ，注释掉swap挂载这一行可以永久关闭swap分区</p><p>备注：k8s运行必须关闭掉swap分区</p><p># swapoff -a</p></div><p>&nbsp;</p><h4><span style="color: blue;">4.添加主机名与IP对应的关系</span></h4><div class="cnblogs_code"><pre># nano /etc/<span style="color: #000000;">hosts 添加如下内容：<p></span></pre></p><pre>192.168.5.141 k8s-<span>master192.168.5.142 k8s-<span>nnode1192.168.5.143 k8s-nnode2</span></span></pre></div><h4><span style="color: blue;">5.将桥接的IPV4流量传递到iptables 的链</span></h4><p>&nbsp;</p><div class="cnblogs_code"><pre>#&nbsp;cat &gt; /etc/sysctl.d/k8s.conf &lt;&lt;<span style="color: #000000;"> EOFnet.bridge.bridge</span>-nf-call-ip6tables = <span style="color: #800080;">1</span><span style="color: #000000;">net.bridge.bridge</span>-nf-call-iptables = <span style="color: #800080;">1</span><span style="color: #000000;">EOF<h1 id="sysctl-–system"><a href="#sysctl-–system" class="headerlink" title="sysctl –system"></a>sysctl </span>–system</pre></h1></div><p>&nbsp;</p><h4><span style="color: blue;">6.安装docker</span></h4><p><span style="color: blue;">&nbsp;</span></p><div class="cnblogs_code"><pre><span style="color: #000000;">卸载旧的docker:<p>#&nbsp;sudo yum remove docker <br>                  docker</span>-<span style="color: #000000;">client <br>                  docker</span>-client-<span style="color: #000000;">latest <br>                  docker</span>-<span style="color: #000000;">common <br>                  docker</span>-<span style="color: #000000;">latest <br>                  docker</span>-latest-<span style="color: #000000;">logrotate <br>                  docker</span>-<span style="color: #000000;">logrotate <br>                  docker</span>-engine</pre></p></div><div class="cnblogs_code"><pre>#&nbsp;sudo yum install -y yum-<span style="color: #000000;">utils \  device</span>-mapper-persistent-<span style="color: #000000;">data \  lvm2</span></pre></div><div class="cnblogs_code"><pre>#&nbsp;sudo yum-config-<span style="color: #000000;">manager \    </span>--add-<span style="color: #000000;">repo \    https:</span><span style="color: #008000;">//</span><span style="color: #008000;">download.docker.com/linux/centos/docker-ce.repo</span></pre></div><div class="cnblogs_code"><pre># sudo yum install -y docker-ce-<span style="color: #800080;">3</span>:<span style="color: #800080;">19.03</span>.<span style="color: #800080;">15</span>-<span style="color: #800080;">3</span>.el8 docker-ce-cli-<span style="color: #800080;">1</span>:<span style="color: #800080;">19.03</span>.<span style="color: #800080;">15</span>-<span style="color: #800080;">3</span>.el8 containerd.io-<span style="color: #800080;">1.3</span>.<span style="color: #800080;">9</span>-<span style="color: #800080;">3.1</span>.el8</pre></div><div class="cnblogs_code"><pre># docker --<span style="color: #000000;">versionDocker version </span><span style="color: #800080;">19.03</span>.<span style="color: #800080;">15</span>, build 99e3ed8919</pre></div><div class="cnblogs_code"><pre><span style="color: #000000;">修改Cgroupfs 为 Systemd(docker文件驱动默认由cgroupfs 改成 systemd，与k8s保持一致避免conflict)：# cd </span>/etc/<span style="color: #000000;"># mkdir docker<br /># cd docker# nano daemon.json<br />或 # cd /etc/ &amp;&amp; mkdir docker &amp;&amp; cd docker &amp;&amp; nano daemon.json </span></pre><pre><span style="color: #000000;">#写入{  </span><span style="color: #800000;">"</span><span style="color: #800000;">exec-opts</span><span style="color: #800000;">"</span>: [<span style="color: #800000;">"</span><span style="color: #800000;">native.cgroupdriver=systemd</span><span style="color: #800000;">"</span><span style="color: #000000;">]}</span></pre></div><div class="cnblogs_code"><pre><span style="color: #000000;">设置开机启动：<h1 id="systemctl-enable-docker-amp-amp-systemctl-start-docker"><a href="#systemctl-enable-docker-amp-amp-systemctl-start-docker" class="headerlink" title="systemctl enable docker &amp;&amp; systemctl start docker"></a>systemctl enable docker </span>&amp;&amp; systemctl start docker</pre></h1></div><div class="cnblogs_code"><pre></pre><p>&nbsp; 查看文件驱动：</p><p># docker info | grep Driver<br /> Storage Driver: overlay2<br /> Logging Driver: json-file<br /> Cgroup Driver: cgroupfs</p></div><p>&nbsp;</p><div class="cnblogs_code"><pre><span style="color: #000000;"> 安装tc# yum install tc </span>-y</pre></div><h4><span style="color: blue;">7.Kubernetes yum源配置：</span></h4><div class="cnblogs_code"><pre># nano /etc/yum.repos.d/kubernetes.repo，添加文件内容如下：</pre><div class="cnblogs_code"><pre><span style="color: #000000;">[kubernetes]<p>name</span>=<span style="color: #000000;">Kubernetes Repo</p><p>baseurl</span>=https:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.tuna.tsinghua.edu.cn/kubernetes/yum/repos/kubernetes-el7-x86_64/</span><br><span style="color: #000000;"><br>gpgcheck</span>=<span style="color: #800080;">0</span><span style="color: #000000;"></p><p>enabled</span>=<span style="color: #800080;">1</span></pre></p></div><p>&nbsp;</p></div><h4><span style="color: blue;">8.安装k8s</span></h4><p>&nbsp;</p><div class="cnblogs_code"><pre>yum -y install kubelet-<span style="color: #800080;">1.18</span>.<span style="color: #800080;">5</span> kubeadm-<span style="color: #800080;">1.18</span>.<span style="color: #800080;">5</span> kubectl-<span style="color: #800080;">1.18</span>.<span style="color: #800080;">5</span> --disableexcludes=kubernetes</pre></div><p>&nbsp;</p><div class="cnblogs_code"><pre><span style="color: #000000;">设置k8s开机启动<h1 id="systemctl-enable-kubelet"><a href="#systemctl-enable-kubelet" class="headerlink" title="systemctl enable kubelet"></a>systemctl enable kubelet</h1><p>启动k8s后台daemon</p><h1 id="systemctl-start-kubelet"><a href="#systemctl-start-kubelet" class="headerlink" title="systemctl start kubelet"></a>systemctl start kubelet</span></pre></h1></div><h4><span style="color: blue;">9.部署Kubernetes Master</span></h4><p>&nbsp;</p><p>从DockerHub的其它仓库拉取<br />网上搜了半天，很多人说从别的仓库一个一个拉取再改名，但是这些教程仓库名称不一，有的教程已经很老了，仓库很多年没更新，这里直接授之以渔，自己学怎么找仓库。<br />并且一个一个拉取改名太累了，可以写个脚本。</p><p>&nbsp;</p><p>过程如下：</p><p>&nbsp;</p><p>首先使用下面的命令获取需要的docker镜像名称：</p><p>&nbsp;</p><div class="cnblogs_code"><pre># kubeadm config images list</pre><p>k8s.gcr.io/kube-apiserver:v1.18.20<br />k8s.gcr.io/kube-controller-manager:v1.18.20<br />k8s.gcr.io/kube-scheduler:v1.18.20<br />k8s.gcr.io/kube-proxy:v1.18.20<br />k8s.gcr.io/pause:3.2<br />k8s.gcr.io/etcd:3.4.3-0<br />k8s.gcr.io/coredns:1.6.7</p></div><p>注意：新版本的coredns改名了，变成了coredns/coredns，记得在images里面改一下</p><p>&nbsp;</p><p>首先要看看该在哪个地方拉取，可以去docker hub搜一搜哪里有kube-proxy之类的组件<br />进入dockerhub搜索：<br />https://hub.docker.com/search?q=kube-proxy&amp;type=image<br />按照最近更新排序，结果如下，可以发现一个下载次数10k+，更新也很频繁的仓库：</p><p>&nbsp;</p><p><img src="/cnblogs/15193971/789895-20210827144401834-1665510685.png" class="lazyload placeholder" data-srcset="/cnblogs/15193971/789895-20210827144401834-1665510685.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" width="615" height="310" loading="lazy" /></p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>然后开始编写脚本：</p><div class="cnblogs_code"><pre># cd /etc/<span style="color: #000000;"># mkdir k8s# cd k8s# nano pull_k8s_images.sh<br />或 cd /etc/ &amp;&amp; mkdir k8s &amp;&amp; cd k8s &amp;&amp; nano pull_k8s_images.sh</span></pre><div class="cnblogs_code"><pre><span style="color: #0000ff;">set</span> -<span style="color: #000000;">o errexit</span><span style="color: #0000ff;">set</span> -<span style="color: #000000;">o nounset</span><span style="color: #0000ff;">set</span> -<span style="color: #000000;">o pipefail<p>##这里定义版本，按照上面得到的列表自己改一下版本号</p><p>KUBE_VERSION</span>=v1.<span style="color: #800080;">18.5</span><span style="color: #000000;"><br>KUBE_PAUSE_VERSION</span>=<span style="color: #800080;">3.2</span><span style="color: #000000;"><br>ETCD_VERSION</span>=<span style="color: #800080;">3.4</span>.<span style="color: #800080;">3</span>-<span style="color: #800080;">0</span><span style="color: #000000;"><br>DNS_VERSION</span>=<span style="color: #800080;">1.6</span>.<span style="color: #800080;">7</span><span style="color: #000000;"></p><p>##这是原始仓库名，最后需要改名成这个<br>GCR_URL</span>=<span style="color: #000000;">k8s.gcr.io</p><p>##这里就是写你要使用的仓库<br>DOCKERHUB_URL</span>=<span style="color: #000000;">gotok8s</p><p>##这里是镜像列表，新版本要把coredns改成coredns</span>/<span style="color: #000000;">coredns<br>images</span>=<span style="color: #000000;">(<br>kube</span>-<span style="color: #000000;">proxy:${KUBE_VERSION}<br>kube</span>-<span style="color: #000000;">scheduler:${KUBE_VERSION}<br>kube</span>-controller-<span style="color: #000000;">manager:${KUBE_VERSION}<br>kube</span>-<span style="color: #000000;">apiserver:${KUBE_VERSION}<br>pause:${KUBE_PAUSE_VERSION}<br>etcd:${ETCD_VERSION}<br>coredns:${DNS_VERSION}<br>)</p><p>##这里是拉取和改名的循环语句<br></span><span style="color: #0000ff;">for</span> imageName <span style="color: #0000ff;">in</span> ${images[@]} ; <span style="color: #0000ff;">do</span><span style="color: #000000;"><br>  docker pull $DOCKERHUB_URL</span>/<span style="color: #000000;">$imageName<br>  docker tag $DOCKERHUB_URL</span>/$imageName $GCR_URL/<span style="color: #000000;">$imageName<br>  docker rmi $DOCKERHUB_URL</span>/<span style="color: #000000;">$imageName<br>done</span></pre></p></div></div><p>然后授予执行权限</p><div class="cnblogs_code"><pre># chmod +x ./pull_k8s_images.sh</pre></div><p>执行</p><div class="cnblogs_code"><pre>./pull_k8s_images.sh</pre></div><pre class="prettyprint">执行初始化</pre><div class="cnblogs_code"><pre><span style="color: #000000;">kubeadm init  \ </span>--kubernetes-version=<span style="color: #800080;">1.18</span>.<span style="color: #800080;">5</span><span style="color: #000000;">  \ </span>--apiserver-advertise-address=<span style="color: #800080;">192.168</span>.<span style="color: #800080;">5.141</span><span style="color: #000000;">   \ </span>--service-cidr=<span style="color: #800080;">10.10</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">16</span> --pod-network-cidr=<span style="color: #800080;">10.122</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">16</span></pre></div><p>执行命令之后可以拿到，记录生成的最后部分内容，此内容需要在其它节点加入Kubernetes集群之前就执行。</p><div class="cnblogs_code"><p>&nbsp; kubeadm join 192.168.5.141:6443 --token n1anmw.ubhpjr33jdncdg5b \<br />&nbsp; &nbsp; &nbsp;--discovery-token-ca-cert-hash sha256:372c1db40560d9abc307f3882718cfd66d2773bcb377ea60d6cd60eb52717122 </p></div><p>根据init后的提示，</p><p>增加一个名为k8s的普通系统用户，并设置为可以免密sudo<br />执行kubeadm初始化master配置时提示的kubectl配置方法</p><div class="cnblogs_code"><pre># mkdir -p $HOME/<span style="color: #000000;">.kube# sudo cp </span>-i /etc/kubernetes/admin.conf $HOME/.kube/<span style="color: #000000;">config# sudo chown $(id </span>-u):$(id -g) $HOME/.kube/config</pre></div><p>查看docker镜像：</p><div class="cnblogs_code"><pre><span style="color: #000000;"># docker imagesREPOSITORY                           TAG                 IMAGE ID            CREATED             SIZEk8s.gcr.io</span>/kube-proxy                v1.<span style="color: #800080;">18.5</span>             a1daed4e2b60        <span style="color: #800080;">14</span><span style="color: #000000;"> months ago       117MBk8s.gcr.io</span>/kube-controller-manager   v1.<span style="color: #800080;">18.5</span>             8d69eaf196dc        <span style="color: #800080;">14</span><span style="color: #000000;"> months ago       162MBk8s.gcr.io</span>/kube-apiserver            v1.<span style="color: #800080;">18.5</span>             08ca24f16874        <span style="color: #800080;">14</span><span style="color: #000000;"> months ago       173MBk8s.gcr.io</span>/kube-scheduler            v1.<span style="color: #800080;">18.5</span>             39d887c6621d        <span style="color: #800080;">14</span> months ago       <span style="color: #800080;">95</span><span style="color: #000000;">.3MBk8s.gcr.io</span>/pause                     <span style="color: #800080;">3.2</span>                 80d28bedfe5d        <span style="color: #800080;">18</span><span style="color: #000000;"> months ago       683kBk8s.gcr.io</span>/coredns                   <span style="color: #800080;">1.6</span>.<span style="color: #800080;">7</span>               67da37a9a360        <span style="color: #800080;">19</span> months ago       <span style="color: #800080;">43</span><span style="color: #000000;">.8MBk8s.gcr.io</span>/etcd                      <span style="color: #800080;">3.4</span>.<span style="color: #800080;">3</span>-<span style="color: #800080;">0</span>             303ce5db0e90        <span style="color: #800080;">22</span> months ago       288MB</pre></div><p>由于kube-apiserver默认只启动安全访问接口6443，而不启动非安装访问接口8080，kubectl是通过8080端口访问k8s kubelet的，所以要修改配置文件，使其支持8080端口访问：</p><p>&nbsp;</p><div class="cnblogs_code"><pre># nano /etc/kubernetes/manifests/kube-<span style="color: #000000;">apiserver.yaml把&ndash;insecure</span>-port=<span style="color: #000000;">0修改为：&ndash;insecure</span>-port=<span style="color: #800080;">8080<br />增加或修改<br />-insecure-bind-address=0.0.0.0<br /><br /></span></pre><p><span style="color: #800080;">&nbsp; #&nbsp;systemctl restart kubelet</span></p><p><span style="color: #800080;">&nbsp; # sysctl net.bridge.bridge-nf-call-iptables=1<br />&nbsp; #&nbsp;kubectl get node<br /></span></p><p>NAME&nbsp; &nbsp; &nbsp; &nbsp;STATUS&nbsp; &nbsp;ROLES&nbsp; AGE VERSION<br />k8s-master   NotReady   master   11m   v1.18.5</p></div><h4><span style="color: blue;"><img src="/cnblogs/15193971/789895-20210827152813941-141137389.png" class="lazyload placeholder" data-srcset="/cnblogs/15193971/789895-20210827152813941-141137389.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" loading="lazy" /></span></h4><p>&nbsp;</p><h4>&nbsp;</h4><p>&nbsp;</p><h4>&nbsp;</h4><h4><span style="color: blue;">10.安装calico网络</span></h4><p>&nbsp;</p><div class="cnblogs_code"><pre># yum install -y wget<br /># wget http://download.zhufunin.com/k8s_1.18/calico.yaml<br /># kubectl apply -f calico.yaml</pre><p><span style="color: #008000;">&nbsp; #&nbsp;kubectl get pods -n kube-system 隔一段时间看一下，STATUS变为ContainerCreating或者Running<br /></span></p></div><p>&nbsp;</p><p><img src="/cnblogs/15193971/789895-20210827151048567-1226899289.png" class="lazyload placeholder" data-srcset="/cnblogs/15193971/789895-20210827151048567-1226899289.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" loading="lazy" /></p><p>&nbsp;</p><p>&nbsp;再执行</p><div class="cnblogs_code"><pre># kubectl <span style="color: #0000ff;">get</span> node，此时状态变为Ready</pre></div><p><img src="/cnblogs/15193971/789895-20210827151210561-965213108.png" class="lazyload placeholder" data-srcset="/cnblogs/15193971/789895-20210827151210561-965213108.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" loading="lazy" /></p><p>&nbsp;</p><p>&nbsp;</p><p>至此，k8s master节点创建完毕。</p><p>&nbsp;</p><h4><span style="color: blue;">11.Node节点加入集群(在k8s-nnode1和k8s-nnode2)</span></h4><p>&nbsp;</p><div class="cnblogs_code"><pre># yum install -<span style="color: #000000;">y wget# wget http:</span><span style="color: #008000;">//</span><span style="color: #008000;">download.zhufunin.com/k8s_1.18/1-18-pause.tar.gz</span># wget http:<span style="color: #008000;">//</span><span style="color: #008000;">download.zhufunin.com/k8s_1.18/1-18-kube-proxy.tar.gz</span># docker load -i   <span style="color: #800080;">1</span>-<span style="color: #800080;">18</span>-<span style="color: #000000;">pause.tar.gz# docker load </span>-i <span style="color: #800080;">1</span>-<span style="color: #800080;">18</span>-kube-proxy.tar.gz</pre></div><p>&nbsp;</p><p><span style="color: blue;">&nbsp;</span>向集群添加新节点，执行在kubeadm init输出的kubeadm join命令：<br />复制上面命令，在node节点上执行<br />在k8s-nnode1和k8s-nnode2都执行刚才拿到的：</p><div class="cnblogs_code"><pre># &nbsp; kubeadm join 192.168.5.141:6443 --token n1anmw.ubhpjr33jdncdg5b \<br />&nbsp; &nbsp; &nbsp;--discovery-token-ca-cert-hash sha256:372c1db40560d9abc307f3882718cfd66d2773bcb377ea60d6cd60eb52717122</pre></div><p>&nbsp;</p><p>然后都执行：</p><div class="cnblogs_code"><pre>kubectl -s http:<span style="color: #008000;">//</span><span style="color: #008000;">192.168.5.138:8080 get nodes</span></pre></div><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><div class="cnblogs_code"><pre><span style="color: #000000;">mater查看pod<br /><br />kubectl get pods&nbsp; kube-proxy-7jmxj&nbsp; -n kube-system -o wide<br />kubectl get pods -n kube-system -o wide<br /><br />node查看连接日志<p>journalctl </span>-f -u kubelet<br /><br />如果Node的状态是NotReady，并且日志输出出现Unable to update cni config: No networks found in /etc/cni/net.d</pre></p><p>&nbsp; 执行&nbsp;scp -r 192.168.5.141:/etc/cni /etc/cni</p></div><p>&nbsp;</p><div class="cnblogs_code"><pre>iptables --<span style="color: #000000;">flushiptables </span>-tnat --<span style="color: #000000;">flushsystemctl stop firewalldsystemctl disable firewalldsystemctl restart dockersystemctl restart kubelet</span></pre></div><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><pre class="prettyprint"></pre><pre class="prettyprint"></pre>]]></content>
      
      
      
        <tags>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go更新腾讯云DNSPod的解析记录</title>
      <link href="/2021/11/27/cnblogs/15614159/"/>
      <url>/2021/11/27/cnblogs/15614159/</url>
      
        <content type="html"><![CDATA[<p>纯粹练手用的，大家轻喷</p><ol><li>获取SecretId，SecretKey<br>打开腾讯云，登录之后打开<code>https://console.cloud.tencent.com/cam/capi</code>,然后<code>新建密钥</code>记录生成的<code>SecretId，SecretKey</code><br><img src="/cnblogs/15614159/789895-20211128000729936-492119129.png" class="lazyload placeholder" data-srcset="/cnblogs/15614159/789895-20211128000729936-492119129.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"></li><li>获取RecordId<br>然后打开<code>https://console.cloud.tencent.com/api/explorer?Product=dnspod&amp;Version=2021-03-23&amp;Action=DescribeRecordList&amp;SignVersion=</code>点击<code>在线调试</code>，然后将自己的域名输入到<code>Domain</code>下面的框里，点击<code>发送请求</code>，此时会让<code>扫码登录</code>，微信扫码登录即可，登录之后在<code>响应结果</code>框里会出现自己的<code>RecordId</code>，记录一下自己需要修改的RecordId<br><img src="/cnblogs/15614159/789895-20211128000828555-1801882487.png" class="lazyload placeholder" data-srcset="/cnblogs/15614159/789895-20211128000828555-1801882487.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"></li><li>添加一个dnspodRecord.go文件<pre class="line-numbers language-none"><code class="language-none">package mainimport (&quot;fmt&quot;&quot;io&#x2F;ioutil&quot;&quot;net&#x2F;http&quot;&quot;regexp&quot;&quot;strconv&quot;&quot;strings&quot;&quot;time&quot;&quot;github.com&#x2F;robfig&#x2F;cron&quot;&quot;github.com&#x2F;tencentcloud&#x2F;tencentcloud-sdk-go&#x2F;tencentcloud&#x2F;common&quot;&quot;github.com&#x2F;tencentcloud&#x2F;tencentcloud-sdk-go&#x2F;tencentcloud&#x2F;common&#x2F;errors&quot;&quot;github.com&#x2F;tencentcloud&#x2F;tencentcloud-sdk-go&#x2F;tencentcloud&#x2F;common&#x2F;profile&quot;dnspod &quot;github.com&#x2F;tencentcloud&#x2F;tencentcloud-sdk-go&#x2F;tencentcloud&#x2F;dnspod&#x2F;v20210323&quot;)&#x2F;&#x2F;全局IP，本次获取与上次作比较，相同IP不需要更新var currentIp &#x3D; &quot;&quot;func main() &#123;c :&#x3D; cron.New()spec :&#x3D; &quot;*&#x2F;30 * * * * ?&quot; &#x2F;&#x2F;可自行更改，默认是30秒执行一次c.AddFunc(spec, func() &#123;fmt.Printf(&quot;start:%v \n&quot;, time.Now())modifyRecordAfterGetIp()fmt.Printf(&quot;shop:%v \n&quot;, time.Now())&#125;)c.Start()select &#123;&#125;&#125;&#x2F;&#x2F;循环获取公网IP，对比变化，变化后同步func modifyRecordAfterGetIp() &#123;fmt.Printf(&quot;currentIp: %s \n&quot;, currentIp)&#x2F;&#x2F;获取记录records :&#x3D; [][]string&#123;&#125;row1 :&#x3D; []string&#123;&quot;yourhost.cn&quot;, &quot;A&quot;, &quot;yourRecordId&quot;, &quot;默认&quot;, &quot;&quot;, &quot;*&quot;&#125;row2 :&#x3D; []string&#123;&quot;yourhost.cn&quot;, &quot;A&quot;, &quot;yourRecordId&quot;, &quot;默认&quot;, &quot;&quot;, &quot;@&quot;&#125;row3 :&#x3D; []string&#123;&quot;yourhost.cn&quot;, &quot;A&quot;, &quot;yourRecordId&quot;, &quot;默认&quot;, &quot;&quot;, &quot;www&quot;&#125;records &#x3D; append(records, row1)records &#x3D; append(records, row2)records &#x3D; append(records, row3)&#x2F;&#x2F;获取Ip的网址sliceIp :&#x3D; []string&#123;&quot;myip.ipip.net&#x2F;s&quot;, &quot;api.ip.sb&#x2F;ip&quot;, &quot;ident.me&quot;, &quot;ip.3322.net&quot;, &quot;ip.cip.cc&quot;, &quot;api.ipify.org&quot;&#125;&#x2F;&#x2F; 迭代每一个元素，获取Ip并判断Ip是否符合，再调用修改腾讯云记录for index, value :&#x3D; range sliceIp &#123;fmt.Printf(&quot;---- 开始请求IP %s ----\n&quot;, value)result :&#x3D; string(getIp(&quot;http:&#x2F;&#x2F;&quot; + value))isIpv4 :&#x3D; matchIpv4(result)fmt.Printf(&quot;Index: %d Value: %s result:%s matchIpv4:%t \n&quot;, index, value, result, isIpv4)if isIpv4 &#123;if currentIp !&#x3D; result &#123;fmt.Printf(&quot;---- 结束请求IP ----\n \n&quot;)currentIp &#x3D; resultvar i intfor i &#x3D; 0; i &lt; 3; i++ &#123;intNum, _ :&#x3D; strconv.Atoi(records[i][2])modifyDynamicDNS(records[i][0], records[i][1], uint64(intNum), records[i][3], currentIp, records[i][5])&#125;fmt.Printf(&quot;currentIp: %s \n&quot;, currentIp)&#125;fmt.Printf(&quot;Ip未发生变化 \n&quot;)break&#125;&#125;fmt.Printf(&quot;---- 结束 ---- \n&quot;)fmt.Printf(&quot;currentIp: %s \n&quot;, currentIp)&#125;&#x2F;&#x2F;调用腾讯云api修改记录func modifyDynamicDNS(domain string, recordType string, recordId uint64, recordLine string, ip string, subDomain string) &#123;credential :&#x3D; common.NewCredential(&quot;yourSecretId&quot;,&quot;yourSecretKey&quot;,)cpf :&#x3D; profile.NewClientProfile()cpf.HttpProfile.Endpoint &#x3D; &quot;dnspod.tencentcloudapi.com&quot;client, _ :&#x3D; dnspod.NewClient(credential, &quot;&quot;, cpf)request :&#x3D; dnspod.NewModifyRecordBatchRequest()request.RecordIdList &#x3D; make([]*uint64, 1)fmt.Printf(&quot;开始更新记录:%d  \n&quot;, recordId)request.RecordIdList[0] &#x3D; &amp;recordIdrequest.Change &#x3D; new(string)request.ChangeTo &#x3D; new(string)*request.Change &#x3D; &quot;value&quot;*request.ChangeTo &#x3D; strings.Replace(ip, &quot;\n&quot;, &quot;&quot;, -1)fmt.Printf(&quot;requestJson：%s  \n&quot;, request.ToJsonString())response, err :&#x3D; client.ModifyRecordBatch(request)if _, ok :&#x3D; err.(*errors.TencentCloudSDKError); ok &#123;fmt.Printf(&quot;error：An API error has returned: %s \n&quot;, err)return&#125;if err !&#x3D; nil &#123;panic(err)&#125;fmt.Printf(&quot;response：%s \n&quot;, response.ToJsonString())fmt.Printf(&quot;结束更新记录:%d  \n \n&quot;, recordId)&#125;&#x2F;&#x2F;获取公网IPfunc getIp(url string) string &#123;client :&#x3D; http.Client&#123;Timeout: 2 * time.Second,&#125;resp, err :&#x3D; client.Get(url)if err !&#x3D; nil &#123;fmt.Printf(&quot; err:%s \n&quot;, err)return &quot;error&quot;&#125;defer resp.Body.Close()body, err :&#x3D; ioutil.ReadAll(resp.Body)result :&#x3D; string(body)fmt.Printf(&quot;body:%s&quot;, string(body))fmt.Printf(&quot;StatusCode:%d \n&quot;, resp.StatusCode)if resp.StatusCode &#x3D;&#x3D; 200 &#123;fmt.Printf(&quot;ok&quot; + &quot; \n&quot;)&#125;return result&#125;&#x2F;&#x2F;匹配是否是Ipv4func matchIpv4(ip string) bool &#123;matched, err :&#x3D; regexp.MatchString(&quot;((2(5[0-5]|[0-4]\\d))|[0-1]?\\d&#123;1,2&#125;)(\\.((2(5[0-5]|[0-4]\\d))|[0-1]?\\d&#123;1,2&#125;))&#123;3&#125;&quot;, ip)if err !&#x3D; nil &#123;fmt.Println(&quot;ip匹配出现错误&quot;)return false&#125;if matched &#123; &#x2F;&#x2F; 匹配上了if len(ip) &lt; 16 &#123;return true&#125;&#125;return false&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>get缺少的go环境,进入dnspodRecord.go所在文件夹的命令框，完全执行后将会新增同名mod、sum文件<ol><li>使用腾讯云镜像加速下载：<ol><li>Linux 或 MacOS:<br><code>export GOPROXY=https://mirrors.tencent.com/go/</code></li><li>Windows:<br><code>set GOPROXY=https://mirrors.tencent.com/go/</code></li></ol></li><li>go mod初始化，将会生成一个同名mod文件<br><code>go mod init dnspodRecord</code></li><li>拉取公共基础包<br><code>go get -v -u github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/common</code></li><li>拉取dnspod包<br><code>go get -v -u github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/dnspod</code></li><li>本地电脑不可能只执行一次，拉取cron包<br><code>go get github.com/robfig/cron</code></li></ol></li><li>运行测试，将会30秒执行一次，将自己的IP地址同步到dnspod的记录解析中<br><code>go run dnspodRecord.go</code><br><img src="/cnblogs/15614159/789895-20211128005756655-1385421355.png" class="lazyload placeholder" data-srcset="/cnblogs/15614159/789895-20211128005756655-1385421355.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg"></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> go </tag>
            
            <tag> dnspod </tag>
            
            <tag> 域名解析记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows版本rabbitmq安装及日志level设置</title>
      <link href="/2021/11/18/cnblogs/15571172/"/>
      <url>/2021/11/18/cnblogs/15571172/</url>
      
        <content type="html"><![CDATA[<p>1.DirectX Repair 安装缺失的C++组件，不安装缺失的组件会造成第二部安装erl文件夹缺少bin文件夹<br />2.安装otp_win64_23.1</p><p><img src="/cnblogs/15571172/789895-20211118103746539-355562978.png" class="lazyload placeholder" data-srcset="/cnblogs/15571172/789895-20211118103746539-355562978.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" loading="lazy" /></p><p>&nbsp; &nbsp; &nbsp; 1.配置 ERLANG_HOME；地址为Erlang安装的地址如：C:\Program Files\erl-23.1<br />&nbsp; &nbsp; &nbsp; 2. 配置 Path路径； 新建变量%ERLANG_HOME%\bin<br />&nbsp; &nbsp; &nbsp; 3. cmd 》输入 erl；可以看见版本号<br />3.安装rabbitmq-server-3.8.9<br />   cmd=&gt;cd C:\Program Files\RabbitMQ Server\rabbitmq_server-3.8.9\sbin=&gt;输入回车 rabbitmq-plugins enable rabbitmq_management</p><p><img src="/cnblogs/15571172/789895-20211118103547205-905835845.png" class="lazyload placeholder" data-srcset="/cnblogs/15571172/789895-20211118103547205-905835845.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" loading="lazy" /></p><p>4.http://localhost:15672/#/  guest  guest</p><p>一般情况下rabbitma的日志是按照info及以上来进行保存的，但是如果数据量过大，rabbitmq日志会暴增所以执行下一步<br />5.在第3步打开的cmd窗口输入：rabbitmqctl -n rabbit@target-host set_log_level error （target-host替换成第4步Overview=&gt;Nodes里面的Name），本方法来源 https://juejin.cn/post/6844904061829939208</p><p><img src="/cnblogs/15571172/789895-20211118103607570-913262409.png" class="lazyload placeholder" data-srcset="/cnblogs/15571172/789895-20211118103607570-913262409.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" loading="lazy" /></p><p>&nbsp;</p><p>&nbsp;</p><p><img src="/cnblogs/15571172/789895-20211118103220257-1533204017.png" class="lazyload placeholder" data-srcset="/cnblogs/15571172/789895-20211118103220257-1533204017.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" loading="lazy" /></p><p>&nbsp;</p><p>附上网盘链接 https://1drv.ms/u/s!AiLMO0Q8SzKLkJNczbNv6zYK9gEw6w?e=yc8XoI</p><p>&nbsp;</p>]]></content>
      
      
      
        <tags>
            
            <tag> rabbitmq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记vs2019  The view &#39;xxx&#39; was not found.</title>
      <link href="/2021/02/03/cnblogs/14366411/"/>
      <url>/2021/02/03/cnblogs/14366411/</url>
      
        <content type="html"><![CDATA[<p>版本：Visual Studio 2019&nbsp;16.8.2/16.8.4<br />.net core 3.1</p><p>1.检测是否是拼写错误<br />2.检查.csproj为文件中是否包含有下面的content remove（这种情况一般发生在通过复制粘贴的方式增加一个新试图）</p><div class="cnblogs_Highlighter"><pre class="brush:csharp;gutter:true;">  &lt;ItemGroup&gt;    &lt;Content Remove="Areas\Factory\Views\UnitSet\Edit - 复制.cshtml" /&gt;  &lt;/ItemGroup&gt;</pre></div><p>　　</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>centos 8及以上安装mysql 8.0</title>
      <link href="/2020/09/01/cnblogs/13596927/"/>
      <url>/2020/09/01/cnblogs/13596927/</url>
      
        <content type="html"><![CDATA[<h1>本文适用于centos 8及以上安装mysql 8.0，整体耗时20分钟内，不需要翻墙</h1><h2>1.环境先搞好</h2><div class="cnblogs_code"><pre> systemctl stop firewalld    <span style="color: #008000;">//</span><span style="color: #008000;">关闭防火墙</span> systemctl disable firewalld    <span style="color: #008000;">//</span><span style="color: #008000;">禁用防火墙</span> setenforce <span style="color: #800080;">0</span><span style="color: #000000;"> sed </span>-i <span style="color: #800000;">'</span><span style="color: #800000;">s/^SELINUX=.*/SELINUX=disabled/</span><span style="color: #800000;">'</span> /etc/selinux/<span style="color: #000000;">config  timedatectl </span><span style="color: #0000ff;">set</span>-timezone Asia/Shanghai</pre></div><h2>2.开始安装</h2><div class="cnblogs_code"><pre>yum -y install mysql-server mysql mysql-devel  <span style="color: #008000;">//</span><span style="color: #008000;">快速安装mysql</span>mysqld --install --user=<span style="color: #000000;">root  mysqld </span>--initialize --user=<span style="color: #000000;">mysqlmysqld </span>--initialize --lower-<span style="color: #0000ff;">case</span>-table-names=<span style="color: #800080;">1</span><p><span style="color: #008000;">//</span><span style="color: #008000;">查看mysql日志，密码在日志中  mysql的安装位置在/var/lib/mysql/</span><br>cat /<span style="color: #0000ff;">var</span>/log/mysql/<span style="color: #000000;">mysqld.log<br></span><span style="color: #808080;">///</span><span style="color: #008000;">发现错误 Data Dictionary initialization failed    </span></pre></p></div><h2>3.Data Dictionary initialization failed解决办法</h2><div class="cnblogs_code"><pre><span style="color: #000000;">  rm </span>-rf /<span style="color: #0000ff;">var</span>/lib/<span style="color: #000000;">mysql<p>  mysqld </span>–initialize –<span style="color: #000000;">console</p><p>  chown </span>-R mysql:mysql /<span style="color: #0000ff;">var</span>/lib/mysql/<span style="color: #000000;"></p><p>  systemctl start mysqld</p><p>  systemctl status mysqld</p><p>  cat </span>/<span style="color: #0000ff;">var</span>/log/mysql/<span style="color: #000000;">mysqld.log </p><p>  </span><span style="color: #008000;">//</span><span style="color: #008000;">A temporary password is generated for root@localhost: 冒号后面的就是初始密码</span></pre></p></div><h2>4.修改密码并开启远程访问</h2><div class="cnblogs_code"><pre>mysql -u root -<span style="color: #000000;">p  <br />//需要输入初始密码，进入mysql控制台  ALTER USER </span><span style="color: #800000;">'</span><span style="color: #800000;">root</span><span style="color: #800000;">'</span>@<span style="color: #800000;">'</span><span style="color: #800000;">localhost</span><span style="color: #800000;">'</span> IDENTIFIED WITH mysql_native_password BY <span style="color: #800000;">'</span><span style="color: #800000;">test@123</span><span style="color: #800000;">'</span><span style="color: #000000;">;  //修改密码为test@123use mysql</span><span style="color: #0000ff;">select</span> Host,User <span style="color: #0000ff;">from</span><span style="color: #000000;"> user;update user </span><span style="color: #0000ff;">set</span> host = <span style="color: #800000;">'</span><span style="color: #800000;">%</span><span style="color: #800000;">'</span> <span style="color: #0000ff;">where</span> user =<span style="color: #800000;">'</span><span style="color: #800000;">root</span><span style="color: #800000;">'</span><span style="color: #000000;">;    //将host从localhost修改为全部flush privileges;exit</span></pre></div><h2>5.其他操作</h2><div class="cnblogs_code"><pre>rpm -qa |<span style="color: #000000;"> grep mysql<p>yum </span>-y remove mysql….  <span style="color: #008000;">//</span><span style="color: #008000;">如果mysql已安装，执行删除</span><br><span style="color: #000000;"><br>systemctl  enable</span>/start/stop/status servicename   <span style="color: #008000;">//</span><span style="color: #008000;"> enable </span><span style="color: #008000;">//</span><span style="color: #008000;">设置开机启动 ； start  </span><span style="color: #008000;">//</span><span style="color: #008000;">启动 ； stop  </span><span style="color: #008000;">//</span><span style="color: #008000;">停止 ；status状态</span></pre></p></div><h2>6.连接mysql</h2><p>&nbsp;<img src="/cnblogs/13596927/789895-20200901161634167-1622109568.png" class="lazyload placeholder" data-srcset="/cnblogs/13596927/789895-20200901161634167-1622109568.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" loading="lazy" /></p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><h1>在虚拟机上的输入输出记录</h1><div class="cnblogs_code"><pre>Xshell <span style="color: #800080;">6</span> (Build <span style="color: #800080;">0189</span><span style="color: #000000;">)Copyright (c) </span><span style="color: #800080;">2002</span><span style="color: #000000;"> NetSarang Computer, Inc. All rights reserved.<p>Type `help</span><span style="color: #800000;">‘</span><span style="color: #800000;"> to learn how to use Xshell prompt.</span><br>[D:~<span style="color: #000000;">]$ </p><p>Connecting to </span><span style="color: #800080;">192.168</span>.<span style="color: #800080;">5.133</span>:<span style="color: #800080;">22</span><span style="color: #000000;">…<br>Connection established.<br>To escape to local shell, press </span><span style="color: #800000;">‘</span><span style="color: #800000;">Ctrl+Alt+]</span><span style="color: #800000;">‘</span><span style="color: #000000;">.</p><p>WARNING</span>!<span style="color: #000000;"> The remote SSH server rejected X11 forwarding request.<br>Activate the web console with: systemctl enable </span>–<span style="color: #000000;">now cockpit.socket</p><p>Last login: Tue Sep  </span><span style="color: #800080;">1</span> <span style="color: #800080;">15</span>:<span style="color: #800080;">41</span>:<span style="color: #800080;">10</span> <span style="color: #800080;">2020</span><span style="color: #000000;"><br>[root@localhost </span><del><span style="color: #000000;">]# systemctl stop firewalld<br>[root@localhost </span></del><span style="color: #000000;">]# systemctl disable firewalld<br>Removed </span>/etc/systemd/system/multi-user.target.wants/<span style="color: #000000;">firewalld.service.<br>Removed </span>/etc/systemd/system/dbus-<span style="color: #000000;">org.fedoraproject.FirewallD1.service.<br>[root@localhost </span><del>]# setenforce <span style="color: #800080;">0</span><span style="color: #000000;"><br>[root@localhost </span></del>]# sed -i <span style="color: #800000;">‘</span><span style="color: #800000;">s/^SELINUX=.*/SELINUX=disabled/</span><span style="color: #800000;">‘</span> /etc/selinux/<span style="color: #000000;">config<br>[root@localhost </span><del>]# timedatectl <span style="color: #0000ff;">set</span>-timezone Asia/<span style="color: #000000;">Shanghai<br>[root@localhost </span></del>]# yum -y install mysql-server mysql mysql-<span style="color: #000000;">devel<br>Last metadata expiration check: </span><span style="color: #800080;">0</span>:<span style="color: #800080;">11</span>:<span style="color: #800080;">14</span> ago on Tue <span style="color: #800080;">01</span> Sep <span style="color: #800080;">2020</span> <span style="color: #800080;">03</span>:<span style="color: #800080;">51</span>:<span style="color: #800080;">03</span><span style="color: #000000;"> PM CST.<br>Dependencies resolved.<br></span>===================================================================================<span style="color: #000000;"><br> Package               Arch   Version                              Repo       Size<br></span>===================================================================================<span style="color: #000000;"><br>Installing:<br> mysql                 x86_64 </span><span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>-<span style="color: #800080;">3</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">181</span>+899d6349 AppStream  <span style="color: #800080;">11</span><span style="color: #000000;"> M<br> mysql</span>-devel           x86_64 <span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>-<span style="color: #800080;">3</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">181</span>+899d6349 AppStream <span style="color: #800080;">147</span><span style="color: #000000;"> k<br> mysql</span>-server          x86_64 <span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>-<span style="color: #800080;">3</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">181</span>+899d6349 AppStream  <span style="color: #800080;">22</span><span style="color: #000000;"> M<br>Installing dependencies:<br> checkpolicy           x86_64 </span><span style="color: #800080;">2.9</span>-<span style="color: #800080;">1</span>.el8                            BaseOS    <span style="color: #800080;">348</span><span style="color: #000000;"> k<br> keyutils</span>-libs-devel   x86_64 <span style="color: #800080;">1.5</span>.<span style="color: #800080;">10</span>-<span style="color: #800080;">6</span>.el8                         BaseOS     <span style="color: #800080;">48</span><span style="color: #000000;"> k<br> krb5</span>-devel            x86_64 <span style="color: #800080;">1.17</span>-<span style="color: #800080;">18</span>.el8                          BaseOS    <span style="color: #800080;">549</span><span style="color: #000000;"> k<br> libcom_err</span>-devel      x86_64 <span style="color: #800080;">1.45</span>.<span style="color: #800080;">4</span>-<span style="color: #800080;">3</span>.el8                         BaseOS     <span style="color: #800080;">38</span><span style="color: #000000;"> k<br> libevent              x86_64 </span><span style="color: #800080;">2.1</span>.<span style="color: #800080;">8</span>-<span style="color: #800080;">5</span>.el8                          BaseOS    <span style="color: #800080;">253</span><span style="color: #000000;"> k<br> libkadm5              x86_64 </span><span style="color: #800080;">1.17</span>-<span style="color: #800080;">18</span>.el8                          BaseOS    <span style="color: #800080;">185</span><span style="color: #000000;"> k<br> libselinux</span>-devel      x86_64 <span style="color: #800080;">2.9</span>-<span style="color: #800080;">3</span>.el8                            BaseOS    <span style="color: #800080;">199</span><span style="color: #000000;"> k<br> libsepol</span>-devel        x86_64 <span style="color: #800080;">2.9</span>-<span style="color: #800080;">1</span>.el8                            BaseOS     <span style="color: #800080;">86</span><span style="color: #000000;"> k<br> libverto</span>-devel        x86_64 <span style="color: #800080;">0.3</span>.<span style="color: #800080;">0</span>-<span style="color: #800080;">5</span>.el8                          BaseOS     <span style="color: #800080;">18</span><span style="color: #000000;"> k<br> mariadb</span>-connector-c-<span style="color: #000000;">config<br>                       noarch </span><span style="color: #800080;">3.0</span>.<span style="color: #800080;">7</span>-<span style="color: #800080;">1</span>.el8                          AppStream  <span style="color: #800080;">13</span><span style="color: #000000;"> k<br> mecab                 x86_64 </span><span style="color: #800080;">0.996</span>-<span style="color: #800080;">1</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">41</span>+ca30bab6.<span style="color: #800080;">9</span> AppStream <span style="color: #800080;">397</span><span style="color: #000000;"> k<br> mysql</span>-common          x86_64 <span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>-<span style="color: #800080;">3</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">181</span>+899d6349 AppStream <span style="color: #800080;">143</span><span style="color: #000000;"> k<br> mysql</span>-errmsg          x86_64 <span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>-<span style="color: #800080;">3</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">181</span>+899d6349 AppStream <span style="color: #800080;">557</span><span style="color: #000000;"> k<br> mysql</span>-libs            x86_64 <span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>-<span style="color: #800080;">3</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">181</span>+899d6349 AppStream <span style="color: #800080;">1.2</span><span style="color: #000000;"> M<br> openssl</span>-devel         x86_64 <span style="color: #800080;">1</span>:<span style="color: #800080;">1.1</span>.1c-<span style="color: #800080;">15</span>.el8                      BaseOS    <span style="color: #800080;">2.3</span><span style="color: #000000;"> M<br> pcre2</span>-devel           x86_64 <span style="color: #800080;">10.32</span>-<span style="color: #800080;">1</span>.el8                          BaseOS    <span style="color: #800080;">605</span><span style="color: #000000;"> k<br> pcre2</span>-utf16           x86_64 <span style="color: #800080;">10.32</span>-<span style="color: #800080;">1</span>.el8                          BaseOS    <span style="color: #800080;">228</span><span style="color: #000000;"> k<br> pcre2</span>-utf32           x86_64 <span style="color: #800080;">10.32</span>-<span style="color: #800080;">1</span>.el8                          BaseOS    <span style="color: #800080;">220</span><span style="color: #000000;"> k<br> perl</span>-Carp             noarch <span style="color: #800080;">1.42</span>-<span style="color: #800080;">396</span>.el8                         BaseOS     <span style="color: #800080;">30</span><span style="color: #000000;"> k<br> perl</span>-Data-Dumper      x86_64 <span style="color: #800080;">2.167</span>-<span style="color: #800080;">399</span>.el8                        BaseOS     <span style="color: #800080;">58</span><span style="color: #000000;"> k<br> perl</span>-Digest           noarch <span style="color: #800080;">1.17</span>-<span style="color: #800080;">395</span>.el8                         AppStream  <span style="color: #800080;">27</span><span style="color: #000000;"> k<br> perl</span>-Digest-MD5       x86_64 <span style="color: #800080;">2.55</span>-<span style="color: #800080;">396</span>.el8                         AppStream  <span style="color: #800080;">37</span><span style="color: #000000;"> k<br> perl</span>-Encode           x86_64 <span style="color: #800080;">4</span>:<span style="color: #800080;">2.97</span>-<span style="color: #800080;">3</span>.el8                         BaseOS    <span style="color: #800080;">1.5</span><span style="color: #000000;"> M<br> perl</span>-Errno            x86_64 <span style="color: #800080;">1.28</span>-<span style="color: #800080;">416</span>.el8                         BaseOS     <span style="color: #800080;">76</span><span style="color: #000000;"> k<br> perl</span>-Exporter         noarch <span style="color: #800080;">5.72</span>-<span style="color: #800080;">396</span>.el8                         BaseOS     <span style="color: #800080;">34</span><span style="color: #000000;"> k<br> perl</span>-File-Path        noarch <span style="color: #800080;">2.15</span>-<span style="color: #800080;">2</span>.el8                           BaseOS     <span style="color: #800080;">38</span><span style="color: #000000;"> k<br> perl</span>-File-Temp        noarch <span style="color: #800080;">0.230</span>.<span style="color: #800080;">600</span>-<span style="color: #800080;">1</span>.el8                      BaseOS     <span style="color: #800080;">63</span><span style="color: #000000;"> k<br> perl</span>-Getopt-Long      noarch <span style="color: #800080;">1</span>:<span style="color: #800080;">2.50</span>-<span style="color: #800080;">4</span>.el8                         BaseOS     <span style="color: #800080;">63</span><span style="color: #000000;"> k<br> perl</span>-HTTP-Tiny        noarch <span style="color: #800080;">0.074</span>-<span style="color: #800080;">1</span>.el8                          BaseOS     <span style="color: #800080;">58</span><span style="color: #000000;"> k<br> perl</span>-IO               x86_64 <span style="color: #800080;">1.38</span>-<span style="color: #800080;">416</span>.el8                         BaseOS    <span style="color: #800080;">141</span><span style="color: #000000;"> k<br> perl</span>-MIME-Base64      x86_64 <span style="color: #800080;">3.15</span>-<span style="color: #800080;">396</span>.el8                         BaseOS     <span style="color: #800080;">31</span><span style="color: #000000;"> k<br> perl</span>-Net-SSLeay       x86_64 <span style="color: #800080;">1.88</span>-<span style="color: #800080;">1</span>.el8                           AppStream <span style="color: #800080;">379</span><span style="color: #000000;"> k<br> perl</span>-PathTools        x86_64 <span style="color: #800080;">3.74</span>-<span style="color: #800080;">1</span>.el8                           BaseOS     <span style="color: #800080;">90</span><span style="color: #000000;"> k<br> perl</span>-Pod-Escapes      noarch <span style="color: #800080;">1</span>:<span style="color: #800080;">1.07</span>-<span style="color: #800080;">395</span>.el8                       BaseOS     <span style="color: #800080;">20</span><span style="color: #000000;"> k<br> perl</span>-Pod-Perldoc      noarch <span style="color: #800080;">3.28</span>-<span style="color: #800080;">396</span>.el8                         BaseOS     <span style="color: #800080;">86</span><span style="color: #000000;"> k<br> perl</span>-Pod-Simple       noarch <span style="color: #800080;">1</span>:<span style="color: #800080;">3.35</span>-<span style="color: #800080;">395</span>.el8                       BaseOS    <span style="color: #800080;">213</span><span style="color: #000000;"> k<br> perl</span>-Pod-Usage        noarch <span style="color: #800080;">4</span>:<span style="color: #800080;">1.69</span>-<span style="color: #800080;">395</span>.el8                       BaseOS     <span style="color: #800080;">34</span><span style="color: #000000;"> k<br> perl</span>-Scalar-List-<span style="color: #000000;">Utils<br>                       x86_64 </span><span style="color: #800080;">3</span>:<span style="color: #800080;">1.49</span>-<span style="color: #800080;">2</span>.el8                         BaseOS     <span style="color: #800080;">68</span><span style="color: #000000;"> k<br> perl</span>-Socket           x86_64 <span style="color: #800080;">4</span>:<span style="color: #800080;">2.027</span>-<span style="color: #800080;">3</span>.el8                        BaseOS     <span style="color: #800080;">59</span><span style="color: #000000;"> k<br> perl</span>-Storable         x86_64 <span style="color: #800080;">1</span>:<span style="color: #800080;">3.11</span>-<span style="color: #800080;">3</span>.el8                         BaseOS     <span style="color: #800080;">98</span><span style="color: #000000;"> k<br> perl</span>-Term-ANSIColor   noarch <span style="color: #800080;">4.06</span>-<span style="color: #800080;">396</span>.el8                         BaseOS     <span style="color: #800080;">46</span><span style="color: #000000;"> k<br> perl</span>-Term-Cap         noarch <span style="color: #800080;">1.17</span>-<span style="color: #800080;">395</span>.el8                         BaseOS     <span style="color: #800080;">23</span><span style="color: #000000;"> k<br> perl</span>-Text-ParseWords  noarch <span style="color: #800080;">3.30</span>-<span style="color: #800080;">395</span>.el8                         BaseOS     <span style="color: #800080;">18</span><span style="color: #000000;"> k<br> perl</span>-Text-Tabs+Wrap   noarch <span style="color: #800080;">2013.0523</span>-<span style="color: #800080;">395</span>.el8                    BaseOS     <span style="color: #800080;">24</span><span style="color: #000000;"> k<br> perl</span>-Time-Local       noarch <span style="color: #800080;">1</span>:<span style="color: #800080;">1.280</span>-<span style="color: #800080;">1</span>.el8                        BaseOS     <span style="color: #800080;">34</span><span style="color: #000000;"> k<br> perl</span>-URI              noarch <span style="color: #800080;">1.73</span>-<span style="color: #800080;">3</span>.el8                           AppStream <span style="color: #800080;">116</span><span style="color: #000000;"> k<br> perl</span>-Unicode-<span style="color: #000000;">Normalize<br>                       x86_64 </span><span style="color: #800080;">1.25</span>-<span style="color: #800080;">396</span>.el8                         BaseOS     <span style="color: #800080;">82</span><span style="color: #000000;"> k<br> perl</span>-constant         noarch <span style="color: #800080;">1.33</span>-<span style="color: #800080;">396</span>.el8                         BaseOS     <span style="color: #800080;">25</span><span style="color: #000000;"> k<br> perl</span>-interpreter      x86_64 <span style="color: #800080;">4</span>:<span style="color: #800080;">5.26</span>.<span style="color: #800080;">3</span>-<span style="color: #800080;">416</span>.el8                     BaseOS    <span style="color: #800080;">6.3</span><span style="color: #000000;"> M<br> perl</span>-libnet           noarch <span style="color: #800080;">3.11</span>-<span style="color: #800080;">3</span>.el8                           AppStream <span style="color: #800080;">121</span><span style="color: #000000;"> k<br> perl</span>-libs             x86_64 <span style="color: #800080;">4</span>:<span style="color: #800080;">5.26</span>.<span style="color: #800080;">3</span>-<span style="color: #800080;">416</span>.el8                     BaseOS    <span style="color: #800080;">1.6</span><span style="color: #000000;"> M<br> perl</span>-macros           x86_64 <span style="color: #800080;">4</span>:<span style="color: #800080;">5.26</span>.<span style="color: #800080;">3</span>-<span style="color: #800080;">416</span>.el8                     BaseOS     <span style="color: #800080;">72</span><span style="color: #000000;"> k<br> perl</span>-parent           noarch <span style="color: #800080;">1</span>:<span style="color: #800080;">0.237</span>-<span style="color: #800080;">1</span>.el8                        BaseOS     <span style="color: #800080;">20</span><span style="color: #000000;"> k<br> perl</span>-podlators        noarch <span style="color: #800080;">4.11</span>-<span style="color: #800080;">1</span>.el8                           BaseOS    <span style="color: #800080;">118</span><span style="color: #000000;"> k<br> perl</span>-threads          x86_64 <span style="color: #800080;">1</span>:<span style="color: #800080;">2.21</span>-<span style="color: #800080;">2</span>.el8                         BaseOS     <span style="color: #800080;">61</span><span style="color: #000000;"> k<br> perl</span>-threads-shared   x86_64 <span style="color: #800080;">1.58</span>-<span style="color: #800080;">2</span>.el8                           BaseOS     <span style="color: #800080;">48</span><span style="color: #000000;"> k<br> policycoreutils</span>-python-<span style="color: #000000;">utils<br>                       noarch </span><span style="color: #800080;">2.9</span>-<span style="color: #800080;">9</span>.el8                            BaseOS    <span style="color: #800080;">251</span><span style="color: #000000;"> k<br> protobuf</span>-lite         x86_64 <span style="color: #800080;">3.5</span>.<span style="color: #800080;">0</span>-<span style="color: #800080;">7</span>.el8                          AppStream <span style="color: #800080;">150</span><span style="color: #000000;"> k<br> python3</span>-audit         x86_64 <span style="color: #800080;">3.0</span>-<span style="color: #800080;">0.17</span>.20191104git1c2f876.el8      BaseOS     <span style="color: #800080;">86</span><span style="color: #000000;"> k<br> python3</span>-libsemanage   x86_64 <span style="color: #800080;">2.9</span>-<span style="color: #800080;">2</span>.el8                            BaseOS    <span style="color: #800080;">127</span><span style="color: #000000;"> k<br> python3</span>-<span style="color: #000000;">policycoreutils<br>                       noarch </span><span style="color: #800080;">2.9</span>-<span style="color: #800080;">9</span>.el8                            BaseOS    <span style="color: #800080;">2.2</span><span style="color: #000000;"> M<br> python3</span>-setools       x86_64 <span style="color: #800080;">4.2</span>.<span style="color: #800080;">2</span>-<span style="color: #800080;">2</span>.el8                          BaseOS    <span style="color: #800080;">601</span><span style="color: #000000;"> k<br> zlib</span>-devel            x86_64 <span style="color: #800080;">1.2</span>.<span style="color: #800080;">11</span>-<span style="color: #800080;">13</span>.el8                        BaseOS     <span style="color: #800080;">57</span><span style="color: #000000;"> k<br>Installing weak dependencies:<br> perl</span>-IO-Socket-IP     noarch <span style="color: #800080;">0.39</span>-<span style="color: #800080;">5</span>.el8                           AppStream  <span style="color: #800080;">47</span><span style="color: #000000;"> k<br> perl</span>-IO-Socket-SSL    noarch <span style="color: #800080;">2.066</span>-<span style="color: #800080;">4</span>.el8                          AppStream <span style="color: #800080;">297</span><span style="color: #000000;"> k<br> perl</span>-Mozilla-CA       noarch <span style="color: #800080;">20160104</span>-<span style="color: #800080;">7</span>.el8                       AppStream  <span style="color: #800080;">15</span><span style="color: #000000;"> k<br>Enabling module streams:<br> mysql                        </span><span style="color: #800080;">8.0</span><span style="color: #000000;">                                                 </p><p>Transaction Summary<br></span>===================================================================================<span style="color: #000000;"><br>Install  </span><span style="color: #800080;">69</span><span style="color: #000000;"> Packages</p><p>Total download size: </span><span style="color: #800080;">55</span><span style="color: #000000;"> M<br>Installed size: </span><span style="color: #800080;">279</span><span style="color: #000000;"> M<br>Downloading Packages:<br>(</span><span style="color: #800080;">1</span>/<span style="color: #800080;">69</span>): mariadb-connector-c-config-<span style="color: #800080;">3.0</span>.<span style="color: #800080;">7</span>-<span style="color: #800080;">1</span>.el8.noa  <span style="color: #800080;">71</span> kB/s |  <span style="color: #800080;">13</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>[MIRROR] mysql</span>-<span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>-<span style="color: #800080;">3</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">181</span>+899d6349.x86_64.rpm: Curl error (<span style="color: #800080;">56</span>): Failure when receiving data <span style="color: #0000ff;">from</span> the peer <span style="color: #0000ff;">for</span> http:<span style="color: #008000;">//</span><span style="color: #008000;">mirror.lzu.edu.cn/centos/8.2.2004/AppStream/x86_64/os/Packages/mysql-8.0.17-3.module_el8.0.0+181+899d6349.x86_64.rpm [Recv failure: Connection reset by peer]</span><br>[MIRROR] mysql-common-<span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>-<span style="color: #800080;">3</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">181</span>+899d6349.x86_64.rpm: Curl error (<span style="color: #800080;">56</span>): Failure when receiving data <span style="color: #0000ff;">from</span> the peer <span style="color: #0000ff;">for</span> http:<span style="color: #008000;">//</span><span style="color: #008000;">mirror.lzu.edu.cn/centos/8.2.2004/AppStream/x86_64/os/Packages/mysql-common-8.0.17-3.module_el8.0.0+181+899d6349.x86_64.rpm [Recv failure: Connection reset by peer]</span><br>(<span style="color: #800080;">2</span>/<span style="color: #800080;">69</span>): mysql-common-<span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>-<span style="color: #800080;">3</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">181</span>+<span style="color: #800080;">8</span> <span style="color: #800080;">602</span> kB/s | <span style="color: #800080;">143</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">3</span>/<span style="color: #800080;">69</span>): mysql-devel-<span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>-<span style="color: #800080;">3</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">181</span>+<span style="color: #800080;">89</span> <span style="color: #800080;">2.3</span> MB/s | <span style="color: #800080;">147</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">4</span>/<span style="color: #800080;">69</span>): mecab-<span style="color: #800080;">0.996</span>-<span style="color: #800080;">1</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">41</span>+ca30bab6.<span style="color: #800080;">9</span> <span style="color: #800080;">562</span> kB/s | <span style="color: #800080;">397</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">5</span>/<span style="color: #800080;">69</span>): mysql-errmsg-<span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>-<span style="color: #800080;">3</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">181</span>+<span style="color: #800080;">8</span> <span style="color: #800080;">2.5</span> MB/s | <span style="color: #800080;">557</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>[MIRROR] mysql</span>-libs-<span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>-<span style="color: #800080;">3</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">181</span>+899d6349.x86_64.rpm: Curl error (<span style="color: #800080;">56</span>): Failure when receiving data <span style="color: #0000ff;">from</span> the peer <span style="color: #0000ff;">for</span> http:<span style="color: #008000;">//</span><span style="color: #008000;">mirror.lzu.edu.cn/centos/8.2.2004/AppStream/x86_64/os/Packages/mysql-libs-8.0.17-3.module_el8.0.0+181+899d6349.x86_64.rpm [Recv failure: Connection reset by peer]</span><br>(<span style="color: #800080;">6</span>/<span style="color: #800080;">69</span>): mysql-libs-<span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>-<span style="color: #800080;">3</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">181</span>+<span style="color: #800080;">899</span> <span style="color: #800080;">2.2</span> MB/s | <span style="color: #800080;">1.2</span> MB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">7</span>/<span style="color: #800080;">69</span>): perl-Digest-<span style="color: #800080;">1.17</span>-<span style="color: #800080;">395</span>.el8.noarch.rpm        <span style="color: #800080;">379</span> kB/s |  <span style="color: #800080;">27</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">8</span>/<span style="color: #800080;">69</span>): perl-Digest-MD5-<span style="color: #800080;">2.55</span>-<span style="color: #800080;">396</span>.el8.x86_64.rpm    <span style="color: #800080;">1.4</span> MB/s |  <span style="color: #800080;">37</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">9</span>/<span style="color: #800080;">69</span>): perl-IO-Socket-IP-<span style="color: #800080;">0.39</span>-<span style="color: #800080;">5</span>.el8.noarch.rpm    <span style="color: #800080;">1.5</span> MB/s |  <span style="color: #800080;">47</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">10</span>/<span style="color: #800080;">69</span>): perl-IO-Socket-SSL-<span style="color: #800080;">2.066</span>-<span style="color: #800080;">4</span>.el8.noarch.rpm <span style="color: #800080;">264</span> kB/s | <span style="color: #800080;">297</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">01</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">11</span>/<span style="color: #800080;">69</span>): perl-Mozilla-CA-<span style="color: #800080;">20160104</span>-<span style="color: #800080;">7</span>.el8.noarch.rpm <span style="color: #800080;">413</span> kB/s |  <span style="color: #800080;">15</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">12</span>/<span style="color: #800080;">69</span>): perl-Net-SSLeay-<span style="color: #800080;">1.88</span>-<span style="color: #800080;">1</span>.el8.x86_64.rpm     <span style="color: #800080;">3.6</span> MB/s | <span style="color: #800080;">379</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">13</span>/<span style="color: #800080;">69</span>): perl-URI-<span style="color: #800080;">1.73</span>-<span style="color: #800080;">3</span>.el8.noarch.rpm            <span style="color: #800080;">2.8</span> MB/s | <span style="color: #800080;">116</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">14</span>/<span style="color: #800080;">69</span>): perl-libnet-<span style="color: #800080;">3.11</span>-<span style="color: #800080;">3</span>.el8.noarch.rpm         <span style="color: #800080;">3.4</span> MB/s | <span style="color: #800080;">121</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">15</span>/<span style="color: #800080;">69</span>): protobuf-lite-<span style="color: #800080;">3.5</span>.<span style="color: #800080;">0</span>-<span style="color: #800080;">7</span>.el8.x86_64.rpm      <span style="color: #800080;">4.0</span> MB/s | <span style="color: #800080;">150</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">16</span>/<span style="color: #800080;">69</span>): checkpolicy-<span style="color: #800080;">2.9</span>-<span style="color: #800080;">1</span>.el8.x86_64.rpm          <span style="color: #800080;">831</span> kB/s | <span style="color: #800080;">348</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">17</span>/<span style="color: #800080;">69</span>): keyutils-libs-devel-<span style="color: #800080;">1.5</span>.<span style="color: #800080;">10</span>-<span style="color: #800080;">6</span>.el8.x86_64.r <span style="color: #800080;">470</span> kB/s |  <span style="color: #800080;">48</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">18</span>/<span style="color: #800080;">69</span>): krb5-devel-<span style="color: #800080;">1.17</span>-<span style="color: #800080;">18</span>.el8.x86_64.rpm         <span style="color: #800080;">1.4</span> MB/s | <span style="color: #800080;">549</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">19</span>/<span style="color: #800080;">69</span>): libcom_err-devel-<span style="color: #800080;">1.45</span>.<span style="color: #800080;">4</span>-<span style="color: #800080;">3</span>.el8.x86_64.rpm  <span style="color: #800080;">304</span> kB/s |  <span style="color: #800080;">38</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">20</span>/<span style="color: #800080;">69</span>): libevent-<span style="color: #800080;">2.1</span>.<span style="color: #800080;">8</span>-<span style="color: #800080;">5</span>.el8.x86_64.rpm           <span style="color: #800080;">1.6</span> MB/s | <span style="color: #800080;">253</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">21</span>/<span style="color: #800080;">69</span>): libkadm5-<span style="color: #800080;">1.17</span>-<span style="color: #800080;">18</span>.el8.x86_64.rpm           <span style="color: #800080;">1.6</span> MB/s | <span style="color: #800080;">185</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">22</span>/<span style="color: #800080;">69</span>): libselinux-devel-<span style="color: #800080;">2.9</span>-<span style="color: #800080;">3</span>.el8.x86_64.rpm     <span style="color: #800080;">1.7</span> MB/s | <span style="color: #800080;">199</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">23</span>/<span style="color: #800080;">69</span>): libsepol-devel-<span style="color: #800080;">2.9</span>-<span style="color: #800080;">1</span>.el8.x86_64.rpm       <span style="color: #800080;">994</span> kB/s |  <span style="color: #800080;">86</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">24</span>/<span style="color: #800080;">69</span>): libverto-devel-<span style="color: #800080;">0.3</span>.<span style="color: #800080;">0</span>-<span style="color: #800080;">5</span>.el8.x86_64.rpm     <span style="color: #800080;">367</span> kB/s |  <span style="color: #800080;">18</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">25</span>/<span style="color: #800080;">69</span>): openssl-devel-<span style="color: #800080;">1.1</span>.1c-<span style="color: #800080;">15</span>.el8.x86_64.rpm    <span style="color: #800080;">2.2</span> MB/s | <span style="color: #800080;">2.3</span> MB     <span style="color: #800080;">00</span>:<span style="color: #800080;">01</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">26</span>/<span style="color: #800080;">69</span>): mysql-<span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>-<span style="color: #800080;">3</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">181</span>+899d634 <span style="color: #800080;">1.9</span> MB/s |  <span style="color: #800080;">11</span> MB     <span style="color: #800080;">00</span>:<span style="color: #800080;">05</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">27</span>/<span style="color: #800080;">69</span>): mysql-server-<span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>-<span style="color: #800080;">3</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">181</span>+ <span style="color: #800080;">4.3</span> MB/s |  <span style="color: #800080;">22</span> MB     <span style="color: #800080;">00</span>:<span style="color: #800080;">04</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">28</span>/<span style="color: #800080;">69</span>): pcre2-devel-<span style="color: #800080;">10.32</span>-<span style="color: #800080;">1</span>.el8.x86_64.rpm        <span style="color: #800080;">1.8</span> MB/s | <span style="color: #800080;">605</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">29</span>/<span style="color: #800080;">69</span>): perl-Carp-<span style="color: #800080;">1.42</span>-<span style="color: #800080;">396</span>.el8.noarch.rpm         <span style="color: #800080;">442</span> kB/s |  <span style="color: #800080;">30</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">30</span>/<span style="color: #800080;">69</span>): pcre2-utf16-<span style="color: #800080;">10.32</span>-<span style="color: #800080;">1</span>.el8.x86_64.rpm        <span style="color: #800080;">678</span> kB/s | <span style="color: #800080;">228</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">31</span>/<span style="color: #800080;">69</span>): perl-Data-Dumper-<span style="color: #800080;">2.167</span>-<span style="color: #800080;">399</span>.el8.x86_64.rpm <span style="color: #800080;">755</span> kB/s |  <span style="color: #800080;">58</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">32</span>/<span style="color: #800080;">69</span>): perl-Errno-<span style="color: #800080;">1.28</span>-<span style="color: #800080;">416</span>.el8.x86_64.rpm        <span style="color: #800080;">557</span> kB/s |  <span style="color: #800080;">76</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">33</span>/<span style="color: #800080;">69</span>): pcre2-utf32-<span style="color: #800080;">10.32</span>-<span style="color: #800080;">1</span>.el8.x86_64.rpm        <span style="color: #800080;">631</span> kB/s | <span style="color: #800080;">220</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">34</span>/<span style="color: #800080;">69</span>): perl-Exporter-<span style="color: #800080;">5.72</span>-<span style="color: #800080;">396</span>.el8.noarch.rpm     <span style="color: #800080;">476</span> kB/s |  <span style="color: #800080;">34</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">35</span>/<span style="color: #800080;">69</span>): perl-File-Path-<span style="color: #800080;">2.15</span>-<span style="color: #800080;">2</span>.el8.noarch.rpm      <span style="color: #800080;">503</span> kB/s |  <span style="color: #800080;">38</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">36</span>/<span style="color: #800080;">69</span>): perl-File-Temp-<span style="color: #800080;">0.230</span>.<span style="color: #800080;">600</span>-<span style="color: #800080;">1</span>.el8.noarch.rpm <span style="color: #800080;">580</span> kB/s |  <span style="color: #800080;">63</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">37</span>/<span style="color: #800080;">69</span>): perl-Getopt-Long-<span style="color: #800080;">2.50</span>-<span style="color: #800080;">4</span>.el8.noarch.rpm    <span style="color: #800080;">593</span> kB/s |  <span style="color: #800080;">63</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">38</span>/<span style="color: #800080;">69</span>): perl-HTTP-Tiny-<span style="color: #800080;">0.074</span>-<span style="color: #800080;">1</span>.el8.noarch.rpm     <span style="color: #800080;">544</span> kB/s |  <span style="color: #800080;">58</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">39</span>/<span style="color: #800080;">69</span>): perl-MIME-Base64-<span style="color: #800080;">3.15</span>-<span style="color: #800080;">396</span>.el8.x86_64.rpm  <span style="color: #800080;">377</span> kB/s |  <span style="color: #800080;">31</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">40</span>/<span style="color: #800080;">69</span>): perl-IO-<span style="color: #800080;">1.38</span>-<span style="color: #800080;">416</span>.el8.x86_64.rpm           <span style="color: #800080;">738</span> kB/s | <span style="color: #800080;">141</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">41</span>/<span style="color: #800080;">69</span>): perl-Pod-Escapes-<span style="color: #800080;">1.07</span>-<span style="color: #800080;">395</span>.el8.noarch.rpm  <span style="color: #800080;">300</span> kB/s |  <span style="color: #800080;">20</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">42</span>/<span style="color: #800080;">69</span>): perl-PathTools-<span style="color: #800080;">3.74</span>-<span style="color: #800080;">1</span>.el8.x86_64.rpm      <span style="color: #800080;">704</span> kB/s |  <span style="color: #800080;">90</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">43</span>/<span style="color: #800080;">69</span>): perl-Pod-Perldoc-<span style="color: #800080;">3.28</span>-<span style="color: #800080;">396</span>.el8.noarch.rpm  <span style="color: #800080;">628</span> kB/s |  <span style="color: #800080;">86</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">44</span>/<span style="color: #800080;">69</span>): perl-Pod-Usage-<span style="color: #800080;">1.69</span>-<span style="color: #800080;">395</span>.el8.noarch.rpm    <span style="color: #800080;">408</span> kB/s |  <span style="color: #800080;">34</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">45</span>/<span style="color: #800080;">69</span>): perl-Pod-Simple-<span style="color: #800080;">3.35</span>-<span style="color: #800080;">395</span>.el8.noarch.rpm   <span style="color: #800080;">763</span> kB/s | <span style="color: #800080;">213</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">46</span>/<span style="color: #800080;">69</span>): perl-Scalar-List-Utils-<span style="color: #800080;">1.49</span>-<span style="color: #800080;">2</span>.el8.x86_64. <span style="color: #800080;">597</span> kB/s |  <span style="color: #800080;">68</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">47</span>/<span style="color: #800080;">69</span>): perl-Socket-<span style="color: #800080;">2.027</span>-<span style="color: #800080;">3</span>.el8.x86_64.rpm        <span style="color: #800080;">572</span> kB/s |  <span style="color: #800080;">59</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">48</span>/<span style="color: #800080;">69</span>): perl-Storable-<span style="color: #800080;">3.11</span>-<span style="color: #800080;">3</span>.el8.x86_64.rpm       <span style="color: #800080;">682</span> kB/s |  <span style="color: #800080;">98</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">49</span>/<span style="color: #800080;">69</span>): perl-Term-ANSIColor-<span style="color: #800080;">4.06</span>-<span style="color: #800080;">396</span>.el8.noarch.r <span style="color: #800080;">502</span> kB/s |  <span style="color: #800080;">46</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">50</span>/<span style="color: #800080;">69</span>): perl-Term-Cap-<span style="color: #800080;">1.17</span>-<span style="color: #800080;">395</span>.el8.noarch.rpm     <span style="color: #800080;">349</span> kB/s |  <span style="color: #800080;">23</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">51</span>/<span style="color: #800080;">69</span>): perl-Text-ParseWords-<span style="color: #800080;">3.30</span>-<span style="color: #800080;">395</span>.el8.noarch. <span style="color: #800080;">327</span> kB/s |  <span style="color: #800080;">18</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">52</span>/<span style="color: #800080;">69</span>): perl-Text-Tabs+Wrap-<span style="color: #800080;">2013.0523</span>-<span style="color: #800080;">395</span>.el8.noa <span style="color: #800080;">334</span> kB/s |  <span style="color: #800080;">24</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">53</span>/<span style="color: #800080;">69</span>): perl-Time-Local-<span style="color: #800080;">1.280</span>-<span style="color: #800080;">1</span>.el8.noarch.rpm    <span style="color: #800080;">424</span> kB/s |  <span style="color: #800080;">34</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">54</span>/<span style="color: #800080;">69</span>): perl-Encode-<span style="color: #800080;">2.97</span>-<span style="color: #800080;">3</span>.el8.x86_64.rpm         <span style="color: #800080;">1.1</span> MB/s | <span style="color: #800080;">1.5</span> MB     <span style="color: #800080;">00</span>:<span style="color: #800080;">01</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">55</span>/<span style="color: #800080;">69</span>): perl-constant-<span style="color: #800080;">1.33</span>-<span style="color: #800080;">396</span>.el8.noarch.rpm     <span style="color: #800080;">402</span> kB/s |  <span style="color: #800080;">25</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">56</span>/<span style="color: #800080;">69</span>): perl-Unicode-Normalize-<span style="color: #800080;">1.25</span>-<span style="color: #800080;">396</span>.el8.x86_6 <span style="color: #800080;">889</span> kB/s |  <span style="color: #800080;">82</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">57</span>/<span style="color: #800080;">69</span>): perl-macros-<span style="color: #800080;">5.26</span>.<span style="color: #800080;">3</span>-<span style="color: #800080;">416</span>.el8.x86_64.rpm     <span style="color: #800080;">539</span> kB/s |  <span style="color: #800080;">72</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">58</span>/<span style="color: #800080;">69</span>): perl-parent-<span style="color: #800080;">0.237</span>-<span style="color: #800080;">1</span>.el8.noarch.rpm        <span style="color: #800080;">280</span> kB/s |  <span style="color: #800080;">20</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">59</span>/<span style="color: #800080;">69</span>): perl-podlators-<span style="color: #800080;">4.11</span>-<span style="color: #800080;">1</span>.el8.noarch.rpm      <span style="color: #800080;">609</span> kB/s | <span style="color: #800080;">118</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">60</span>/<span style="color: #800080;">69</span>): perl-threads-<span style="color: #800080;">2.21</span>-<span style="color: #800080;">2</span>.el8.x86_64.rpm        <span style="color: #800080;">506</span> kB/s |  <span style="color: #800080;">61</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">61</span>/<span style="color: #800080;">69</span>): perl-threads-shared-<span style="color: #800080;">1.58</span>-<span style="color: #800080;">2</span>.el8.x86_64.rpm <span style="color: #800080;">468</span> kB/s |  <span style="color: #800080;">48</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">62</span>/<span style="color: #800080;">69</span>): policycoreutils-python-utils-<span style="color: #800080;">2.9</span>-<span style="color: #800080;">9</span>.el8.no <span style="color: #800080;">694</span> kB/s | <span style="color: #800080;">251</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">63</span>/<span style="color: #800080;">69</span>): python3-audit-<span style="color: #800080;">3.0</span>-<span style="color: #800080;">0.17</span>.20191104git1c2f876 <span style="color: #800080;">572</span> kB/s |  <span style="color: #800080;">86</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">64</span>/<span style="color: #800080;">69</span>): python3-libsemanage-<span style="color: #800080;">2.9</span>-<span style="color: #800080;">2</span>.el8.x86_64.rpm  <span style="color: #800080;">615</span> kB/s | <span style="color: #800080;">127</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">65</span>/<span style="color: #800080;">69</span>): perl-libs-<span style="color: #800080;">5.26</span>.<span style="color: #800080;">3</span>-<span style="color: #800080;">416</span>.el8.x86_64.rpm       <span style="color: #800080;">839</span> kB/s | <span style="color: #800080;">1.6</span> MB     <span style="color: #800080;">00</span>:<span style="color: #800080;">01</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">66</span>/<span style="color: #800080;">69</span>): python3-setools-<span style="color: #800080;">4.2</span>.<span style="color: #800080;">2</span>-<span style="color: #800080;">2</span>.el8.x86_64.rpm    <span style="color: #800080;">691</span> kB/s | <span style="color: #800080;">601</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">67</span>/<span style="color: #800080;">69</span>): zlib-devel-<span style="color: #800080;">1.2</span>.<span style="color: #800080;">11</span>-<span style="color: #800080;">13</span>.el8.x86_64.rpm       <span style="color: #800080;">473</span> kB/s |  <span style="color: #800080;">57</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">68</span>/<span style="color: #800080;">69</span>): python3-policycoreutils-<span style="color: #800080;">2.9</span>-<span style="color: #800080;">9</span>.el8.noarch. <span style="color: #800080;">934</span> kB/s | <span style="color: #800080;">2.2</span> MB     <span style="color: #800080;">00</span>:<span style="color: #800080;">02</span><span style="color: #000000;"><br>(</span><span style="color: #800080;">69</span>/<span style="color: #800080;">69</span>): perl-interpreter-<span style="color: #800080;">5.26</span>.<span style="color: #800080;">3</span>-<span style="color: #800080;">416</span>.el8.x86_64.rp <span style="color: #800080;">1.2</span> MB/s | <span style="color: #800080;">6.3</span> MB     <span style="color: #800080;">00</span>:<span style="color: #800080;">05</span><br>———————————————————————————–<span style="color: #000000;"><br>Total                                              </span><span style="color: #800080;">4.0</span> MB/s |  <span style="color: #800080;">55</span> MB     <span style="color: #800080;">00</span>:<span style="color: #800080;">13</span><span style="color: #000000;"><br>warning: </span>/<span style="color: #0000ff;">var</span>/cache/dnf/AppStream-a520ed22b0a8a736/packages/mariadb-connector-c-config-<span style="color: #800080;">3.0</span>.<span style="color: #800080;">7</span>-<span style="color: #800080;">1</span>.el8.noarch.rpm: Header V3 RSA/<span style="color: #000000;">SHA256 Signature, key ID 8483c65d: NOKEY<br>CentOS</span>-<span style="color: #800080;">8</span> - AppStream                               <span style="color: #800080;">961</span> kB/s | <span style="color: #800080;">1.6</span> kB     <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"><br>Importing GPG key </span><span style="color: #800080;">0x8483C65D</span><span style="color: #000000;">:<br> Userid     : </span><span style="color: #800000;">“</span><span style="color: #800000;">CentOS (CentOS Official Signing Key) &lt;<a href="mailto:&#115;&#x65;&#99;&#117;&#x72;&#105;&#116;&#121;&#64;&#x63;&#x65;&#110;&#116;&#111;&#115;&#x2e;&#111;&#114;&#x67;">&#115;&#x65;&#99;&#117;&#x72;&#105;&#116;&#121;&#64;&#x63;&#x65;&#110;&#116;&#111;&#115;&#x2e;&#111;&#114;&#x67;</a>&gt;</span><span style="color: #800000;">“</span><span style="color: #000000;"><br> Fingerprint: 99DB 70FA E1D7 CE22 7FB6 </span><span style="color: #800080;">4882</span> 05B5 55B3 <span style="color: #800080;">8483</span><span style="color: #000000;"> C65D<br> From       : </span>/etc/pki/rpm-gpg/RPM-GPG-KEY-<span style="color: #000000;">centosofficial<br>Key imported successfully<br>Running transaction check<br>Transaction check succeeded.<br>Running transaction test<br>Transaction test succeeded.<br>Running transaction<br>  Preparing        :                                                           </span><span style="color: #800080;">1</span>/<span style="color: #800080;">1</span><span style="color: #000000;"><br>  Installing       : perl</span>-Exporter-<span style="color: #800080;">5.72</span>-<span style="color: #800080;">396</span>.el8.noarch                        <span style="color: #800080;">1</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-libs-<span style="color: #800080;">4</span>:<span style="color: #800080;">5.26</span>.<span style="color: #800080;">3</span>-<span style="color: #800080;">416</span>.el8.x86_64                        <span style="color: #800080;">2</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-Carp-<span style="color: #800080;">1.42</span>-<span style="color: #800080;">396</span>.el8.noarch                            <span style="color: #800080;">3</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-Scalar-List-Utils-<span style="color: #800080;">3</span>:<span style="color: #800080;">1.49</span>-<span style="color: #800080;">2</span>.el8.x86_64               <span style="color: #800080;">4</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-parent-<span style="color: #800080;">1</span>:<span style="color: #800080;">0.237</span>-<span style="color: #800080;">1</span>.el8.noarch                         <span style="color: #800080;">5</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-Text-ParseWords-<span style="color: #800080;">3.30</span>-<span style="color: #800080;">395</span>.el8.noarch                 <span style="color: #800080;">6</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : zlib</span>-devel-<span style="color: #800080;">1.2</span>.<span style="color: #800080;">11</span>-<span style="color: #800080;">13</span>.el8.x86_64                          <span style="color: #800080;">7</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : mariadb</span>-connector-c-config-<span style="color: #800080;">3.0</span>.<span style="color: #800080;">7</span>-<span style="color: #800080;">1</span>.el8.noarch            <span style="color: #800080;">8</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : mysql</span>-common-<span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>-<span style="color: #800080;">3</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">181</span>+899d6349.x86    <span style="color: #800080;">9</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : mysql</span>-<span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>-<span style="color: #800080;">3</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">181</span>+899d6349.x86_64       <span style="color: #800080;">10</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : mysql</span>-errmsg-<span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>-<span style="color: #800080;">3</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">181</span>+899d6349.x86   <span style="color: #800080;">11</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : mysql</span>-libs-<span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>-<span style="color: #800080;">3</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">181</span>+899d6349.x86_6   <span style="color: #800080;">12</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-Term-ANSIColor-<span style="color: #800080;">4.06</span>-<span style="color: #800080;">396</span>.el8.noarch                 <span style="color: #800080;">13</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-macros-<span style="color: #800080;">4</span>:<span style="color: #800080;">5.26</span>.<span style="color: #800080;">3</span>-<span style="color: #800080;">416</span>.el8.x86_64                     <span style="color: #800080;">14</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-Errno-<span style="color: #800080;">1.28</span>-<span style="color: #800080;">416</span>.el8.x86_64                          <span style="color: #800080;">15</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-Socket-<span style="color: #800080;">4</span>:<span style="color: #800080;">2.027</span>-<span style="color: #800080;">3</span>.el8.x86_64                        <span style="color: #800080;">16</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-Text-Tabs+Wrap-<span style="color: #800080;">2013.0523</span>-<span style="color: #800080;">395</span>.el8.noarch            <span style="color: #800080;">17</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-Unicode-Normalize-<span style="color: #800080;">1.25</span>-<span style="color: #800080;">396</span>.el8.x86_64              <span style="color: #800080;">18</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-File-Path-<span style="color: #800080;">2.15</span>-<span style="color: #800080;">2</span>.el8.noarch                        <span style="color: #800080;">19</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-IO-<span style="color: #800080;">1.38</span>-<span style="color: #800080;">416</span>.el8.x86_64                             <span style="color: #800080;">20</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-PathTools-<span style="color: #800080;">3.74</span>-<span style="color: #800080;">1</span>.el8.x86_64                        <span style="color: #800080;">21</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-constant-<span style="color: #800080;">1.33</span>-<span style="color: #800080;">396</span>.el8.noarch                       <span style="color: #800080;">22</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-threads-<span style="color: #800080;">1</span>:<span style="color: #800080;">2.21</span>-<span style="color: #800080;">2</span>.el8.x86_64                        <span style="color: #800080;">23</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-threads-shared-<span style="color: #800080;">1.58</span>-<span style="color: #800080;">2</span>.el8.x86_64                   <span style="color: #800080;">24</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-interpreter-<span style="color: #800080;">4</span>:<span style="color: #800080;">5.26</span>.<span style="color: #800080;">3</span>-<span style="color: #800080;">416</span>.el8.x86_64                <span style="color: #800080;">25</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-MIME-Base64-<span style="color: #800080;">3.15</span>-<span style="color: #800080;">396</span>.el8.x86_64                    <span style="color: #800080;">26</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-IO-Socket-IP-<span style="color: #800080;">0.39</span>-<span style="color: #800080;">5</span>.el8.noarch                     <span style="color: #800080;">27</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-Time-Local-<span style="color: #800080;">1</span>:<span style="color: #800080;">1.280</span>-<span style="color: #800080;">1</span>.el8.noarch                    <span style="color: #800080;">28</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-Digest-<span style="color: #800080;">1.17</span>-<span style="color: #800080;">395</span>.el8.noarch                         <span style="color: #800080;">29</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-Digest-MD5-<span style="color: #800080;">2.55</span>-<span style="color: #800080;">396</span>.el8.x86_64                     <span style="color: #800080;">30</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-Net-SSLeay-<span style="color: #800080;">1.88</span>-<span style="color: #800080;">1</span>.el8.x86_64                       <span style="color: #800080;">31</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-Data-Dumper-<span style="color: #800080;">2.167</span>-<span style="color: #800080;">399</span>.el8.x86_64                   <span style="color: #800080;">32</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-File-Temp-<span style="color: #800080;">0.230</span>.<span style="color: #800080;">600</span>-<span style="color: #800080;">1</span>.el8.noarch                   <span style="color: #800080;">33</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-Pod-Escapes-<span style="color: #800080;">1</span>:<span style="color: #800080;">1.07</span>-<span style="color: #800080;">395</span>.el8.noarch                  <span style="color: #800080;">34</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-Storable-<span style="color: #800080;">1</span>:<span style="color: #800080;">3.11</span>-<span style="color: #800080;">3</span>.el8.x86_64                       <span style="color: #800080;">35</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-Term-Cap-<span style="color: #800080;">1.17</span>-<span style="color: #800080;">395</span>.el8.noarch                       <span style="color: #800080;">36</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-Mozilla-CA-<span style="color: #800080;">20160104</span>-<span style="color: #800080;">7</span>.el8.noarch                   <span style="color: #800080;">37</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-Encode-<span style="color: #800080;">4</span>:<span style="color: #800080;">2.97</span>-<span style="color: #800080;">3</span>.el8.x86_64                         <span style="color: #800080;">38</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-Pod-Simple-<span style="color: #800080;">1</span>:<span style="color: #800080;">3.35</span>-<span style="color: #800080;">395</span>.el8.noarch                   <span style="color: #800080;">39</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-Getopt-Long-<span style="color: #800080;">1</span>:<span style="color: #800080;">2.50</span>-<span style="color: #800080;">4</span>.el8.noarch                    <span style="color: #800080;">40</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-podlators-<span style="color: #800080;">4.11</span>-<span style="color: #800080;">1</span>.el8.noarch                        <span style="color: #800080;">41</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-Pod-Usage-<span style="color: #800080;">4</span>:<span style="color: #800080;">1.69</span>-<span style="color: #800080;">395</span>.el8.noarch                    <span style="color: #800080;">42</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-Pod-Perldoc-<span style="color: #800080;">3.28</span>-<span style="color: #800080;">396</span>.el8.noarch                    <span style="color: #800080;">43</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-HTTP-Tiny-<span style="color: #800080;">0.074</span>-<span style="color: #800080;">1</span>.el8.noarch                       <span style="color: #800080;">44</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-IO-Socket-SSL-<span style="color: #800080;">2.066</span>-<span style="color: #800080;">4</span>.el8.noarch                   <span style="color: #800080;">45</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-libnet-<span style="color: #800080;">3.11</span>-<span style="color: #800080;">3</span>.el8.noarch                           <span style="color: #800080;">46</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : perl</span>-URI-<span style="color: #800080;">1.73</span>-<span style="color: #800080;">3</span>.el8.noarch                              <span style="color: #800080;">47</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : python3</span>-setools-<span style="color: #800080;">4.2</span>.<span style="color: #800080;">2</span>-<span style="color: #800080;">2</span>.el8.x86_64                      <span style="color: #800080;">48</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : python3</span>-libsemanage-<span style="color: #800080;">2.9</span>-<span style="color: #800080;">2</span>.el8.x86_64                    <span style="color: #800080;">49</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : python3</span>-audit-<span style="color: #800080;">3.0</span>-<span style="color: #800080;">0.17</span>.20191104git1c2f876.el8.x86_64    <span style="color: #800080;">50</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : pcre2</span>-utf32-<span style="color: #800080;">10.32</span>-<span style="color: #800080;">1</span>.el8.x86_64                          <span style="color: #800080;">51</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : pcre2</span>-utf16-<span style="color: #800080;">10.32</span>-<span style="color: #800080;">1</span>.el8.x86_64                          <span style="color: #800080;">52</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : pcre2</span>-devel-<span style="color: #800080;">10.32</span>-<span style="color: #800080;">1</span>.el8.x86_64                          <span style="color: #800080;">53</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : libverto</span>-devel-<span style="color: #800080;">0.3</span>.<span style="color: #800080;">0</span>-<span style="color: #800080;">5</span>.el8.x86_64                       <span style="color: #800080;">54</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : libsepol</span>-devel-<span style="color: #800080;">2.9</span>-<span style="color: #800080;">1</span>.el8.x86_64                         <span style="color: #800080;">55</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : libselinux</span>-devel-<span style="color: #800080;">2.9</span>-<span style="color: #800080;">3</span>.el8.x86_64                       <span style="color: #800080;">56</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : libkadm5</span>-<span style="color: #800080;">1.17</span>-<span style="color: #800080;">18</span>.el8.x86_64                             <span style="color: #800080;">57</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : libevent</span>-<span style="color: #800080;">2.1</span>.<span style="color: #800080;">8</span>-<span style="color: #800080;">5</span>.el8.x86_64                             <span style="color: #800080;">58</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : libcom_err</span>-devel-<span style="color: #800080;">1.45</span>.<span style="color: #800080;">4</span>-<span style="color: #800080;">3</span>.el8.x86_64                    <span style="color: #800080;">59</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : keyutils</span>-libs-devel-<span style="color: #800080;">1.5</span>.<span style="color: #800080;">10</span>-<span style="color: #800080;">6</span>.el8.x86_64                 <span style="color: #800080;">60</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : krb5</span>-devel-<span style="color: #800080;">1.17</span>-<span style="color: #800080;">18</span>.el8.x86_64                           <span style="color: #800080;">61</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : openssl</span>-devel-<span style="color: #800080;">1</span>:<span style="color: #800080;">1.1</span>.1c-<span style="color: #800080;">15</span>.el8.x86_64                    <span style="color: #800080;">62</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : checkpolicy</span>-<span style="color: #800080;">2.9</span>-<span style="color: #800080;">1</span>.el8.x86_64                            <span style="color: #800080;">63</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : python3</span>-policycoreutils-<span style="color: #800080;">2.9</span>-<span style="color: #800080;">9</span>.el8.noarch                <span style="color: #800080;">64</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : policycoreutils</span>-python-utils-<span style="color: #800080;">2.9</span>-<span style="color: #800080;">9</span>.el8.noarch           <span style="color: #800080;">65</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : protobuf</span>-lite-<span style="color: #800080;">3.5</span>.<span style="color: #800080;">0</span>-<span style="color: #800080;">7</span>.el8.x86_64                        <span style="color: #800080;">66</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : mecab</span>-<span style="color: #800080;">0.996</span>-<span style="color: #800080;">1</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">41</span>+ca30bab6.<span style="color: #800080;">9</span>.x86_64       <span style="color: #800080;">67</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Running scriptlet: mecab</span>-<span style="color: #800080;">0.996</span>-<span style="color: #800080;">1</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">41</span>+ca30bab6.<span style="color: #800080;">9</span>.x86_64       <span style="color: #800080;">67</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Running scriptlet: mysql</span>-server-<span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>-<span style="color: #800080;">3</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">181</span>+899d6349.x86   <span style="color: #800080;">68</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Installing       : mysql</span>-server-<span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>-<span style="color: #800080;">3</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">181</span>+899d6349.x86   <span style="color: #800080;">68</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Running scriptlet: mysql</span>-server-<span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>-<span style="color: #800080;">3</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">181</span>+899d6349.x86   <span style="color: #800080;">68</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>ValueError: File context </span><span style="color: #0000ff;">for</span> /<span style="color: #0000ff;">var</span>/log/mysql(/.*)?<span style="color: #000000;"> already defined</p><p>  Installing       : mysql</span>-devel-<span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>-<span style="color: #800080;">3</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">181</span>+899d6349.x86_   <span style="color: #800080;">69</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Running scriptlet: mysql</span>-devel-<span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>-<span style="color: #800080;">3</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">181</span>+899d6349.x86_   <span style="color: #800080;">69</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : mariadb</span>-connector-c-config-<span style="color: #800080;">3.0</span>.<span style="color: #800080;">7</span>-<span style="color: #800080;">1</span>.el8.noarch            <span style="color: #800080;">1</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : mecab</span>-<span style="color: #800080;">0.996</span>-<span style="color: #800080;">1</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">41</span>+ca30bab6.<span style="color: #800080;">9</span>.x86_64        <span style="color: #800080;">2</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : mysql</span>-<span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>-<span style="color: #800080;">3</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">181</span>+899d6349.x86_64        <span style="color: #800080;">3</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : mysql</span>-common-<span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>-<span style="color: #800080;">3</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">181</span>+899d6349.x86    <span style="color: #800080;">4</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : mysql</span>-devel-<span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>-<span style="color: #800080;">3</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">181</span>+899d6349.x86_    <span style="color: #800080;">5</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : mysql</span>-errmsg-<span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>-<span style="color: #800080;">3</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">181</span>+899d6349.x86    <span style="color: #800080;">6</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : mysql</span>-libs-<span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>-<span style="color: #800080;">3</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">181</span>+899d6349.x86_6    <span style="color: #800080;">7</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : mysql</span>-server-<span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>-<span style="color: #800080;">3</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">181</span>+899d6349.x86    <span style="color: #800080;">8</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-Digest-<span style="color: #800080;">1.17</span>-<span style="color: #800080;">395</span>.el8.noarch                          <span style="color: #800080;">9</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-Digest-MD5-<span style="color: #800080;">2.55</span>-<span style="color: #800080;">396</span>.el8.x86_64                     <span style="color: #800080;">10</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-IO-Socket-IP-<span style="color: #800080;">0.39</span>-<span style="color: #800080;">5</span>.el8.noarch                     <span style="color: #800080;">11</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-IO-Socket-SSL-<span style="color: #800080;">2.066</span>-<span style="color: #800080;">4</span>.el8.noarch                   <span style="color: #800080;">12</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-Mozilla-CA-<span style="color: #800080;">20160104</span>-<span style="color: #800080;">7</span>.el8.noarch                   <span style="color: #800080;">13</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-Net-SSLeay-<span style="color: #800080;">1.88</span>-<span style="color: #800080;">1</span>.el8.x86_64                       <span style="color: #800080;">14</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-URI-<span style="color: #800080;">1.73</span>-<span style="color: #800080;">3</span>.el8.noarch                              <span style="color: #800080;">15</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-libnet-<span style="color: #800080;">3.11</span>-<span style="color: #800080;">3</span>.el8.noarch                           <span style="color: #800080;">16</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : protobuf</span>-lite-<span style="color: #800080;">3.5</span>.<span style="color: #800080;">0</span>-<span style="color: #800080;">7</span>.el8.x86_64                        <span style="color: #800080;">17</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : checkpolicy</span>-<span style="color: #800080;">2.9</span>-<span style="color: #800080;">1</span>.el8.x86_64                            <span style="color: #800080;">18</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : keyutils</span>-libs-devel-<span style="color: #800080;">1.5</span>.<span style="color: #800080;">10</span>-<span style="color: #800080;">6</span>.el8.x86_64                 <span style="color: #800080;">19</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : krb5</span>-devel-<span style="color: #800080;">1.17</span>-<span style="color: #800080;">18</span>.el8.x86_64                           <span style="color: #800080;">20</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : libcom_err</span>-devel-<span style="color: #800080;">1.45</span>.<span style="color: #800080;">4</span>-<span style="color: #800080;">3</span>.el8.x86_64                    <span style="color: #800080;">21</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : libevent</span>-<span style="color: #800080;">2.1</span>.<span style="color: #800080;">8</span>-<span style="color: #800080;">5</span>.el8.x86_64                             <span style="color: #800080;">22</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : libkadm5</span>-<span style="color: #800080;">1.17</span>-<span style="color: #800080;">18</span>.el8.x86_64                             <span style="color: #800080;">23</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : libselinux</span>-devel-<span style="color: #800080;">2.9</span>-<span style="color: #800080;">3</span>.el8.x86_64                       <span style="color: #800080;">24</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : libsepol</span>-devel-<span style="color: #800080;">2.9</span>-<span style="color: #800080;">1</span>.el8.x86_64                         <span style="color: #800080;">25</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : libverto</span>-devel-<span style="color: #800080;">0.3</span>.<span style="color: #800080;">0</span>-<span style="color: #800080;">5</span>.el8.x86_64                       <span style="color: #800080;">26</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : openssl</span>-devel-<span style="color: #800080;">1</span>:<span style="color: #800080;">1.1</span>.1c-<span style="color: #800080;">15</span>.el8.x86_64                    <span style="color: #800080;">27</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : pcre2</span>-devel-<span style="color: #800080;">10.32</span>-<span style="color: #800080;">1</span>.el8.x86_64                          <span style="color: #800080;">28</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : pcre2</span>-utf16-<span style="color: #800080;">10.32</span>-<span style="color: #800080;">1</span>.el8.x86_64                          <span style="color: #800080;">29</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : pcre2</span>-utf32-<span style="color: #800080;">10.32</span>-<span style="color: #800080;">1</span>.el8.x86_64                          <span style="color: #800080;">30</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-Carp-<span style="color: #800080;">1.42</span>-<span style="color: #800080;">396</span>.el8.noarch                           <span style="color: #800080;">31</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-Data-Dumper-<span style="color: #800080;">2.167</span>-<span style="color: #800080;">399</span>.el8.x86_64                   <span style="color: #800080;">32</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-Encode-<span style="color: #800080;">4</span>:<span style="color: #800080;">2.97</span>-<span style="color: #800080;">3</span>.el8.x86_64                         <span style="color: #800080;">33</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-Errno-<span style="color: #800080;">1.28</span>-<span style="color: #800080;">416</span>.el8.x86_64                          <span style="color: #800080;">34</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-Exporter-<span style="color: #800080;">5.72</span>-<span style="color: #800080;">396</span>.el8.noarch                       <span style="color: #800080;">35</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-File-Path-<span style="color: #800080;">2.15</span>-<span style="color: #800080;">2</span>.el8.noarch                        <span style="color: #800080;">36</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-File-Temp-<span style="color: #800080;">0.230</span>.<span style="color: #800080;">600</span>-<span style="color: #800080;">1</span>.el8.noarch                   <span style="color: #800080;">37</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-Getopt-Long-<span style="color: #800080;">1</span>:<span style="color: #800080;">2.50</span>-<span style="color: #800080;">4</span>.el8.noarch                    <span style="color: #800080;">38</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-HTTP-Tiny-<span style="color: #800080;">0.074</span>-<span style="color: #800080;">1</span>.el8.noarch                       <span style="color: #800080;">39</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-IO-<span style="color: #800080;">1.38</span>-<span style="color: #800080;">416</span>.el8.x86_64                             <span style="color: #800080;">40</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-MIME-Base64-<span style="color: #800080;">3.15</span>-<span style="color: #800080;">396</span>.el8.x86_64                    <span style="color: #800080;">41</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-PathTools-<span style="color: #800080;">3.74</span>-<span style="color: #800080;">1</span>.el8.x86_64                        <span style="color: #800080;">42</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-Pod-Escapes-<span style="color: #800080;">1</span>:<span style="color: #800080;">1.07</span>-<span style="color: #800080;">395</span>.el8.noarch                  <span style="color: #800080;">43</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-Pod-Perldoc-<span style="color: #800080;">3.28</span>-<span style="color: #800080;">396</span>.el8.noarch                    <span style="color: #800080;">44</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-Pod-Simple-<span style="color: #800080;">1</span>:<span style="color: #800080;">3.35</span>-<span style="color: #800080;">395</span>.el8.noarch                   <span style="color: #800080;">45</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-Pod-Usage-<span style="color: #800080;">4</span>:<span style="color: #800080;">1.69</span>-<span style="color: #800080;">395</span>.el8.noarch                    <span style="color: #800080;">46</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-Scalar-List-Utils-<span style="color: #800080;">3</span>:<span style="color: #800080;">1.49</span>-<span style="color: #800080;">2</span>.el8.x86_64              <span style="color: #800080;">47</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-Socket-<span style="color: #800080;">4</span>:<span style="color: #800080;">2.027</span>-<span style="color: #800080;">3</span>.el8.x86_64                        <span style="color: #800080;">48</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-Storable-<span style="color: #800080;">1</span>:<span style="color: #800080;">3.11</span>-<span style="color: #800080;">3</span>.el8.x86_64                       <span style="color: #800080;">49</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-Term-ANSIColor-<span style="color: #800080;">4.06</span>-<span style="color: #800080;">396</span>.el8.noarch                 <span style="color: #800080;">50</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-Term-Cap-<span style="color: #800080;">1.17</span>-<span style="color: #800080;">395</span>.el8.noarch                       <span style="color: #800080;">51</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-Text-ParseWords-<span style="color: #800080;">3.30</span>-<span style="color: #800080;">395</span>.el8.noarch                <span style="color: #800080;">52</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-Text-Tabs+Wrap-<span style="color: #800080;">2013.0523</span>-<span style="color: #800080;">395</span>.el8.noarch            <span style="color: #800080;">53</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-Time-Local-<span style="color: #800080;">1</span>:<span style="color: #800080;">1.280</span>-<span style="color: #800080;">1</span>.el8.noarch                    <span style="color: #800080;">54</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-Unicode-Normalize-<span style="color: #800080;">1.25</span>-<span style="color: #800080;">396</span>.el8.x86_64              <span style="color: #800080;">55</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-constant-<span style="color: #800080;">1.33</span>-<span style="color: #800080;">396</span>.el8.noarch                       <span style="color: #800080;">56</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-interpreter-<span style="color: #800080;">4</span>:<span style="color: #800080;">5.26</span>.<span style="color: #800080;">3</span>-<span style="color: #800080;">416</span>.el8.x86_64                <span style="color: #800080;">57</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-libs-<span style="color: #800080;">4</span>:<span style="color: #800080;">5.26</span>.<span style="color: #800080;">3</span>-<span style="color: #800080;">416</span>.el8.x86_64                       <span style="color: #800080;">58</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-macros-<span style="color: #800080;">4</span>:<span style="color: #800080;">5.26</span>.<span style="color: #800080;">3</span>-<span style="color: #800080;">416</span>.el8.x86_64                     <span style="color: #800080;">59</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-parent-<span style="color: #800080;">1</span>:<span style="color: #800080;">0.237</span>-<span style="color: #800080;">1</span>.el8.noarch                        <span style="color: #800080;">60</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-podlators-<span style="color: #800080;">4.11</span>-<span style="color: #800080;">1</span>.el8.noarch                        <span style="color: #800080;">61</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-threads-<span style="color: #800080;">1</span>:<span style="color: #800080;">2.21</span>-<span style="color: #800080;">2</span>.el8.x86_64                        <span style="color: #800080;">62</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : perl</span>-threads-shared-<span style="color: #800080;">1.58</span>-<span style="color: #800080;">2</span>.el8.x86_64                   <span style="color: #800080;">63</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : policycoreutils</span>-python-utils-<span style="color: #800080;">2.9</span>-<span style="color: #800080;">9</span>.el8.noarch           <span style="color: #800080;">64</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : python3</span>-audit-<span style="color: #800080;">3.0</span>-<span style="color: #800080;">0.17</span>.20191104git1c2f876.el8.x86_64    <span style="color: #800080;">65</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : python3</span>-libsemanage-<span style="color: #800080;">2.9</span>-<span style="color: #800080;">2</span>.el8.x86_64                    <span style="color: #800080;">66</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : python3</span>-policycoreutils-<span style="color: #800080;">2.9</span>-<span style="color: #800080;">9</span>.el8.noarch                <span style="color: #800080;">67</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : python3</span>-setools-<span style="color: #800080;">4.2</span>.<span style="color: #800080;">2</span>-<span style="color: #800080;">2</span>.el8.x86_64                      <span style="color: #800080;">68</span>/<span style="color: #800080;">69</span><span style="color: #000000;"><br>  Verifying        : zlib</span>-devel-<span style="color: #800080;">1.2</span>.<span style="color: #800080;">11</span>-<span style="color: #800080;">13</span>.el8.x86_64                         <span style="color: #800080;">69</span>/<span style="color: #800080;">69</span><span style="color: #000000;"> </p><p>Installed:<br>  checkpolicy</span>-<span style="color: #800080;">2.9</span>-<span style="color: #800080;">1</span><span style="color: #000000;">.el8.x86_64<br>  keyutils</span>-libs-devel-<span style="color: #800080;">1.5</span>.<span style="color: #800080;">10</span>-<span style="color: #800080;">6</span><span style="color: #000000;">.el8.x86_64<br>  krb5</span>-devel-<span style="color: #800080;">1.17</span>-<span style="color: #800080;">18</span><span style="color: #000000;">.el8.x86_64<br>  libcom_err</span>-devel-<span style="color: #800080;">1.45</span>.<span style="color: #800080;">4</span>-<span style="color: #800080;">3</span><span style="color: #000000;">.el8.x86_64<br>  libevent</span>-<span style="color: #800080;">2.1</span>.<span style="color: #800080;">8</span>-<span style="color: #800080;">5</span><span style="color: #000000;">.el8.x86_64<br>  libkadm5</span>-<span style="color: #800080;">1.17</span>-<span style="color: #800080;">18</span><span style="color: #000000;">.el8.x86_64<br>  libselinux</span>-devel-<span style="color: #800080;">2.9</span>-<span style="color: #800080;">3</span><span style="color: #000000;">.el8.x86_64<br>  libsepol</span>-devel-<span style="color: #800080;">2.9</span>-<span style="color: #800080;">1</span><span style="color: #000000;">.el8.x86_64<br>  libverto</span>-devel-<span style="color: #800080;">0.3</span>.<span style="color: #800080;">0</span>-<span style="color: #800080;">5</span><span style="color: #000000;">.el8.x86_64<br>  mariadb</span>-connector-c-config-<span style="color: #800080;">3.0</span>.<span style="color: #800080;">7</span>-<span style="color: #800080;">1</span><span style="color: #000000;">.el8.noarch<br>  mecab</span>-<span style="color: #800080;">0.996</span>-<span style="color: #800080;">1</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">41</span>+ca30bab6.<span style="color: #800080;">9</span><span style="color: #000000;">.x86_64<br>  mysql</span>-<span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>-<span style="color: #800080;">3</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">181</span>+<span style="color: #000000;">899d6349.x86_64<br>  mysql</span>-common-<span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>-<span style="color: #800080;">3</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">181</span>+<span style="color: #000000;">899d6349.x86_64<br>  mysql</span>-devel-<span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>-<span style="color: #800080;">3</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">181</span>+<span style="color: #000000;">899d6349.x86_64<br>  mysql</span>-errmsg-<span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>-<span style="color: #800080;">3</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">181</span>+<span style="color: #000000;">899d6349.x86_64<br>  mysql</span>-libs-<span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>-<span style="color: #800080;">3</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">181</span>+<span style="color: #000000;">899d6349.x86_64<br>  mysql</span>-server-<span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>-<span style="color: #800080;">3</span>.module_el8.<span style="color: #800080;">0.0</span>+<span style="color: #800080;">181</span>+<span style="color: #000000;">899d6349.x86_64<br>  openssl</span>-devel-<span style="color: #800080;">1</span>:<span style="color: #800080;">1.1</span>.1c-<span style="color: #800080;">15</span><span style="color: #000000;">.el8.x86_64<br>  pcre2</span>-devel-<span style="color: #800080;">10.32</span>-<span style="color: #800080;">1</span><span style="color: #000000;">.el8.x86_64<br>  pcre2</span>-utf16-<span style="color: #800080;">10.32</span>-<span style="color: #800080;">1</span><span style="color: #000000;">.el8.x86_64<br>  pcre2</span>-utf32-<span style="color: #800080;">10.32</span>-<span style="color: #800080;">1</span><span style="color: #000000;">.el8.x86_64<br>  perl</span>-Carp-<span style="color: #800080;">1.42</span>-<span style="color: #800080;">396</span><span style="color: #000000;">.el8.noarch<br>  perl</span>-Data-Dumper-<span style="color: #800080;">2.167</span>-<span style="color: #800080;">399</span><span style="color: #000000;">.el8.x86_64<br>  perl</span>-Digest-<span style="color: #800080;">1.17</span>-<span style="color: #800080;">395</span><span style="color: #000000;">.el8.noarch<br>  perl</span>-Digest-MD5-<span style="color: #800080;">2.55</span>-<span style="color: #800080;">396</span><span style="color: #000000;">.el8.x86_64<br>  perl</span>-Encode-<span style="color: #800080;">4</span>:<span style="color: #800080;">2.97</span>-<span style="color: #800080;">3</span><span style="color: #000000;">.el8.x86_64<br>  perl</span>-Errno-<span style="color: #800080;">1.28</span>-<span style="color: #800080;">416</span><span style="color: #000000;">.el8.x86_64<br>  perl</span>-Exporter-<span style="color: #800080;">5.72</span>-<span style="color: #800080;">396</span><span style="color: #000000;">.el8.noarch<br>  perl</span>-File-Path-<span style="color: #800080;">2.15</span>-<span style="color: #800080;">2</span><span style="color: #000000;">.el8.noarch<br>  perl</span>-File-Temp-<span style="color: #800080;">0.230</span>.<span style="color: #800080;">600</span>-<span style="color: #800080;">1</span><span style="color: #000000;">.el8.noarch<br>  perl</span>-Getopt-Long-<span style="color: #800080;">1</span>:<span style="color: #800080;">2.50</span>-<span style="color: #800080;">4</span><span style="color: #000000;">.el8.noarch<br>  perl</span>-HTTP-Tiny-<span style="color: #800080;">0.074</span>-<span style="color: #800080;">1</span><span style="color: #000000;">.el8.noarch<br>  perl</span>-IO-<span style="color: #800080;">1.38</span>-<span style="color: #800080;">416</span><span style="color: #000000;">.el8.x86_64<br>  perl</span>-IO-Socket-IP-<span style="color: #800080;">0.39</span>-<span style="color: #800080;">5</span><span style="color: #000000;">.el8.noarch<br>  perl</span>-IO-Socket-SSL-<span style="color: #800080;">2.066</span>-<span style="color: #800080;">4</span><span style="color: #000000;">.el8.noarch<br>  perl</span>-MIME-Base64-<span style="color: #800080;">3.15</span>-<span style="color: #800080;">396</span><span style="color: #000000;">.el8.x86_64<br>  perl</span>-Mozilla-CA-<span style="color: #800080;">20160104</span>-<span style="color: #800080;">7</span><span style="color: #000000;">.el8.noarch<br>  perl</span>-Net-SSLeay-<span style="color: #800080;">1.88</span>-<span style="color: #800080;">1</span><span style="color: #000000;">.el8.x86_64<br>  perl</span>-PathTools-<span style="color: #800080;">3.74</span>-<span style="color: #800080;">1</span><span style="color: #000000;">.el8.x86_64<br>  perl</span>-Pod-Escapes-<span style="color: #800080;">1</span>:<span style="color: #800080;">1.07</span>-<span style="color: #800080;">395</span><span style="color: #000000;">.el8.noarch<br>  perl</span>-Pod-Perldoc-<span style="color: #800080;">3.28</span>-<span style="color: #800080;">396</span><span style="color: #000000;">.el8.noarch<br>  perl</span>-Pod-Simple-<span style="color: #800080;">1</span>:<span style="color: #800080;">3.35</span>-<span style="color: #800080;">395</span><span style="color: #000000;">.el8.noarch<br>  perl</span>-Pod-Usage-<span style="color: #800080;">4</span>:<span style="color: #800080;">1.69</span>-<span style="color: #800080;">395</span><span style="color: #000000;">.el8.noarch<br>  perl</span>-Scalar-List-Utils-<span style="color: #800080;">3</span>:<span style="color: #800080;">1.49</span>-<span style="color: #800080;">2</span><span style="color: #000000;">.el8.x86_64<br>  perl</span>-Socket-<span style="color: #800080;">4</span>:<span style="color: #800080;">2.027</span>-<span style="color: #800080;">3</span><span style="color: #000000;">.el8.x86_64<br>  perl</span>-Storable-<span style="color: #800080;">1</span>:<span style="color: #800080;">3.11</span>-<span style="color: #800080;">3</span><span style="color: #000000;">.el8.x86_64<br>  perl</span>-Term-ANSIColor-<span style="color: #800080;">4.06</span>-<span style="color: #800080;">396</span><span style="color: #000000;">.el8.noarch<br>  perl</span>-Term-Cap-<span style="color: #800080;">1.17</span>-<span style="color: #800080;">395</span><span style="color: #000000;">.el8.noarch<br>  perl</span>-Text-ParseWords-<span style="color: #800080;">3.30</span>-<span style="color: #800080;">395</span><span style="color: #000000;">.el8.noarch<br>  perl</span>-Text-Tabs+Wrap-<span style="color: #800080;">2013.0523</span>-<span style="color: #800080;">395</span><span style="color: #000000;">.el8.noarch<br>  perl</span>-Time-Local-<span style="color: #800080;">1</span>:<span style="color: #800080;">1.280</span>-<span style="color: #800080;">1</span><span style="color: #000000;">.el8.noarch<br>  perl</span>-URI-<span style="color: #800080;">1.73</span>-<span style="color: #800080;">3</span><span style="color: #000000;">.el8.noarch<br>  perl</span>-Unicode-Normalize-<span style="color: #800080;">1.25</span>-<span style="color: #800080;">396</span><span style="color: #000000;">.el8.x86_64<br>  perl</span>-constant-<span style="color: #800080;">1.33</span>-<span style="color: #800080;">396</span><span style="color: #000000;">.el8.noarch<br>  perl</span>-interpreter-<span style="color: #800080;">4</span>:<span style="color: #800080;">5.26</span>.<span style="color: #800080;">3</span>-<span style="color: #800080;">416</span><span style="color: #000000;">.el8.x86_64<br>  perl</span>-libnet-<span style="color: #800080;">3.11</span>-<span style="color: #800080;">3</span><span style="color: #000000;">.el8.noarch<br>  perl</span>-libs-<span style="color: #800080;">4</span>:<span style="color: #800080;">5.26</span>.<span style="color: #800080;">3</span>-<span style="color: #800080;">416</span><span style="color: #000000;">.el8.x86_64<br>  perl</span>-macros-<span style="color: #800080;">4</span>:<span style="color: #800080;">5.26</span>.<span style="color: #800080;">3</span>-<span style="color: #800080;">416</span><span style="color: #000000;">.el8.x86_64<br>  perl</span>-parent-<span style="color: #800080;">1</span>:<span style="color: #800080;">0.237</span>-<span style="color: #800080;">1</span><span style="color: #000000;">.el8.noarch<br>  perl</span>-podlators-<span style="color: #800080;">4.11</span>-<span style="color: #800080;">1</span><span style="color: #000000;">.el8.noarch<br>  perl</span>-threads-<span style="color: #800080;">1</span>:<span style="color: #800080;">2.21</span>-<span style="color: #800080;">2</span><span style="color: #000000;">.el8.x86_64<br>  perl</span>-threads-shared-<span style="color: #800080;">1.58</span>-<span style="color: #800080;">2</span><span style="color: #000000;">.el8.x86_64<br>  policycoreutils</span>-python-utils-<span style="color: #800080;">2.9</span>-<span style="color: #800080;">9</span><span style="color: #000000;">.el8.noarch<br>  protobuf</span>-lite-<span style="color: #800080;">3.5</span>.<span style="color: #800080;">0</span>-<span style="color: #800080;">7</span><span style="color: #000000;">.el8.x86_64<br>  python3</span>-audit-<span style="color: #800080;">3.0</span>-<span style="color: #800080;">0.17</span><span style="color: #000000;">.20191104git1c2f876.el8.x86_64<br>  python3</span>-libsemanage-<span style="color: #800080;">2.9</span>-<span style="color: #800080;">2</span><span style="color: #000000;">.el8.x86_64<br>  python3</span>-policycoreutils-<span style="color: #800080;">2.9</span>-<span style="color: #800080;">9</span><span style="color: #000000;">.el8.noarch<br>  python3</span>-setools-<span style="color: #800080;">4.2</span>.<span style="color: #800080;">2</span>-<span style="color: #800080;">2</span><span style="color: #000000;">.el8.x86_64<br>  zlib</span>-devel-<span style="color: #800080;">1.2</span>.<span style="color: #800080;">11</span>-<span style="color: #800080;">13</span><span style="color: #000000;">.el8.x86_64                                                  </p><p>Complete</span>!<span style="color: #000000;"><br>[root@localhost </span><del>]# mysqld –install –user=<span style="color: #000000;">root<br>[root@localhost </span></del>]# mysqld –initialize –user=<span style="color: #000000;">mysql<br>[root@localhost </span><del>]# mysqld –initialize –lower-<span style="color: #0000ff;">case</span>-table-names=<span style="color: #800080;">1</span><span style="color: #000000;"><br>[root@localhost </span></del>]# cat /<span style="color: #0000ff;">var</span>/log/mysql/<span style="color: #000000;">mysqld.log<br></span><span style="color: #800080;">2020</span>-<span style="color: #800080;">09</span>-01T08:<span style="color: #800080;">03</span>:<span style="color: #800080;">16</span>.286242Z <span style="color: #800080;">0</span> [System] [MY-<span style="color: #800080;">010116</span>] [Server] /usr/libexec/mysqld (mysqld <span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>) starting <span style="color: #0000ff;">as</span> process <span style="color: #800080;">8036</span><br><span style="color: #800080;">2020</span>-<span style="color: #800080;">09</span>-01T08:<span style="color: #800080;">03</span>:<span style="color: #800080;">16</span>.300375Z <span style="color: #800080;">1</span> [ERROR] [MY-<span style="color: #800080;">011011</span><span style="color: #000000;">] [Server] Failed to find valid data directory.<br></span><span style="color: #800080;">2020</span>-<span style="color: #800080;">09</span>-01T08:<span style="color: #800080;">03</span>:<span style="color: #800080;">16</span>.300446Z <span style="color: #800080;">0</span> [ERROR] [MY-<span style="color: #800080;">010020</span><span style="color: #000000;">] [Server] <span style="color: #ff0000;">Data Dictionary initialization failed</span>.<br></span><span style="color: #800080;">2020</span>-<span style="color: #800080;">09</span>-01T08:<span style="color: #800080;">03</span>:<span style="color: #800080;">16</span>.300498Z <span style="color: #800080;">0</span> [ERROR] [MY-<span style="color: #800080;">010119</span><span style="color: #000000;">] [Server] Aborting<br></span><span style="color: #800080;">2020</span>-<span style="color: #800080;">09</span>-01T08:<span style="color: #800080;">03</span>:<span style="color: #800080;">16</span>.300755Z <span style="color: #800080;">0</span> [System] [MY-<span style="color: #800080;">010910</span>] [Server] /usr/libexec/mysqld: Shutdown complete (mysqld <span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span><span style="color: #000000;">)  Source distribution.<br></span><span style="color: #800080;">2020</span>-<span style="color: #800080;">09</span>-01T08:<span style="color: #800080;">03</span>:<span style="color: #800080;">25</span>.523538Z <span style="color: #800080;">0</span> [System] [MY-<span style="color: #800080;">013169</span>] [Server] /usr/libexec/mysqld (mysqld <span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>) initializing of server <span style="color: #0000ff;">in</span> progress <span style="color: #0000ff;">as</span> process <span style="color: #800080;">22923</span><br><span style="color: #800080;">2020</span>-<span style="color: #800080;">09</span>-01T08:<span style="color: #800080;">03</span>:<span style="color: #800080;">25</span>.524591Z <span style="color: #800080;">0</span> [ERROR] [MY-<span style="color: #800080;">010457</span>] [Server] –initialize specified but the data directory has files <span style="color: #0000ff;">in</span><span style="color: #000000;"> it. Aborting.<br></span><span style="color: #800080;">2020</span>-<span style="color: #800080;">09</span>-01T08:<span style="color: #800080;">03</span>:<span style="color: #800080;">25</span>.524614Z <span style="color: #800080;">0</span> [ERROR] [MY-<span style="color: #800080;">013236</span>] [Server] The designated data directory /<span style="color: #0000ff;">var</span>/lib/mysql/ <span style="color: #0000ff;">is</span><span style="color: #000000;"> unusable. You can remove all files that the server added to it.<br></span><span style="color: #800080;">2020</span>-<span style="color: #800080;">09</span>-01T08:<span style="color: #800080;">03</span>:<span style="color: #800080;">25</span>.524676Z <span style="color: #800080;">0</span> [ERROR] [MY-<span style="color: #800080;">010119</span><span style="color: #000000;">] [Server] Aborting<br></span><span style="color: #800080;">2020</span>-<span style="color: #800080;">09</span>-01T08:<span style="color: #800080;">03</span>:<span style="color: #800080;">25</span>.524752Z <span style="color: #800080;">0</span> [System] [MY-<span style="color: #800080;">010910</span>] [Server] /usr/libexec/mysqld: Shutdown complete (mysqld <span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span><span style="color: #000000;">)  Source distribution.<br></span><span style="color: #800080;">2020</span>-<span style="color: #800080;">09</span>-01T08:<span style="color: #800080;">03</span>:<span style="color: #800080;">35</span>.984050Z <span style="color: #800080;">0</span> [System] [MY-<span style="color: #800080;">013169</span>] [Server] /usr/libexec/mysqld (mysqld <span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>) initializing of server <span style="color: #0000ff;">in</span> progress <span style="color: #0000ff;">as</span> process <span style="color: #800080;">28279</span><br><span style="color: #800080;">2020</span>-<span style="color: #800080;">09</span>-01T08:<span style="color: #800080;">03</span>:<span style="color: #800080;">35</span>.985204Z <span style="color: #800080;">0</span> [ERROR] [MY-<span style="color: #800080;">010457</span>] [Server] –initialize specified but the data directory has files <span style="color: #0000ff;">in</span><span style="color: #000000;"> it. Aborting.<br></span><span style="color: #800080;">2020</span>-<span style="color: #800080;">09</span>-01T08:<span style="color: #800080;">03</span>:<span style="color: #800080;">35</span>.985285Z <span style="color: #800080;">0</span> [ERROR] [MY-<span style="color: #800080;">013236</span>] [Server] The designated data directory /<span style="color: #0000ff;">var</span>/lib/mysql/ <span style="color: #0000ff;">is</span><span style="color: #000000;"> unusable. You can remove all files that the server added to it.<br></span><span style="color: #800080;">2020</span>-<span style="color: #800080;">09</span>-01T08:<span style="color: #800080;">03</span>:<span style="color: #800080;">35</span>.985321Z <span style="color: #800080;">0</span> [ERROR] [MY-<span style="color: #800080;">010119</span><span style="color: #000000;">] [Server] Aborting<br></span><span style="color: #800080;">2020</span>-<span style="color: #800080;">09</span>-01T08:<span style="color: #800080;">03</span>:<span style="color: #800080;">35</span>.985395Z <span style="color: #800080;">0</span> [System] [MY-<span style="color: #800080;">010910</span>] [Server] /usr/libexec/mysqld: Shutdown complete (mysqld <span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span><span style="color: #000000;">)  Source distribution.<br>[root@localhost </span><del>]# rm -rf /<span style="color: #0000ff;">var</span>/lib/<span style="color: #000000;">mysql<br>[root@localhost </span></del>]# mysqld –initialize –<span style="color: #000000;">console<br>[root@localhost </span><del>]# chown -R mysql:mysql /<span style="color: #0000ff;">var</span>/lib/mysql/<span style="color: #000000;"><br>[root@localhost </span></del><span style="color: #000000;">]# systemctl start mysqld<br>[root@localhost </span>~<span style="color: #000000;">]# systemctl status mysqld<br>● mysqld.service </span>- MySQL <span style="color: #800080;">8.0</span><span style="color: #000000;"> database server<br>   Loaded: loaded (</span>/usr/lib/systemd/system/mysqld.service; disabled; vendor preset&gt;<span style="color: #000000;"><br>   Active: active (running) since Tue </span><span style="color: #800080;">2020</span>-<span style="color: #800080;">09</span>-<span style="color: #800080;">01</span> <span style="color: #800080;">16</span>:<span style="color: #800080;">04</span>:<span style="color: #800080;">21</span><span style="color: #000000;"> CST; 5s ago<br>  Process: </span><span style="color: #800080;">28436</span> ExecStartPost=/usr/libexec/mysql-check-upgrade (code=exited, stat&gt;<span style="color: #000000;"><br>  Process: </span><span style="color: #800080;">28356</span> ExecStartPre=/usr/libexec/mysql-prepare-db-dir mysqld.service (co&gt;<span style="color: #000000;"><br>  Process: </span><span style="color: #800080;">28332</span> ExecStartPre=/usr/libexec/mysql-check-socket (code=exited, status&gt;<span style="color: #000000;"><br> Main PID: </span><span style="color: #800080;">28393</span><span style="color: #000000;"> (mysqld)<br>   Status: </span><span style="color: #800000;">“</span><span style="color: #800000;">Server is operational</span><span style="color: #800000;">“</span><span style="color: #000000;"><br>    Tasks: </span><span style="color: #800080;">39</span> (limit: <span style="color: #800080;">11302</span><span style="color: #000000;">)<br>   Memory: </span><span style="color: #800080;">382.4M</span><span style="color: #000000;"><br>   CGroup: </span>/system.slice/<span style="color: #000000;">mysqld.service<br>           └─</span><span style="color: #800080;">28393</span> /usr/libexec/mysqld –basedir=/<span style="color: #000000;">usr</p><p>Sep </span><span style="color: #800080;">01</span> <span style="color: #800080;">16</span>:<span style="color: #800080;">04</span>:<span style="color: #800080;">18</span> localhost.localdomain systemd[<span style="color: #800080;">1</span>]: Starting MySQL <span style="color: #800080;">8.0</span> database serv&gt;<span style="color: #000000;"><br>Sep </span><span style="color: #800080;">01</span> <span style="color: #800080;">16</span>:<span style="color: #800080;">04</span>:<span style="color: #800080;">21</span> localhost.localdomain mysql-check-upgrade[<span style="color: #800080;">28436</span>]: The datadir loca&gt;<span style="color: #000000;"><br>Sep </span><span style="color: #800080;">01</span> <span style="color: #800080;">16</span>:<span style="color: #800080;">04</span>:<span style="color: #800080;">21</span> localhost.localdomain mysql-check-upgrade[<span style="color: #800080;">28436</span>]:   <span style="color: #800080;">1</span>. Back-up you&gt;<span style="color: #000000;"><br>Sep </span><span style="color: #800080;">01</span> <span style="color: #800080;">16</span>:<span style="color: #800080;">04</span>:<span style="color: #800080;">21</span> localhost.localdomain mysql-check-upgrade[<span style="color: #800080;">28436</span>]:   <span style="color: #800080;">2</span>. Start the d&gt;<span style="color: #000000;"><br>Sep </span><span style="color: #800080;">01</span> <span style="color: #800080;">16</span>:<span style="color: #800080;">04</span>:<span style="color: #800080;">21</span> localhost.localdomain mysql-check-upgrade[<span style="color: #800080;">28436</span>]:   <span style="color: #800080;">3</span>. Run <span style="color: #800000;">‘</span><span style="color: #800000;">mysql_&gt;</span><br>Sep <span style="color: #800080;">01</span> <span style="color: #800080;">16</span>:<span style="color: #800080;">04</span>:<span style="color: #800080;">21</span> localhost.localdomain mysql-check-upgrade[<span style="color: #800080;">28436</span>]: Read more about &gt;<span style="color: #000000;"><br>Sep </span><span style="color: #800080;">01</span> <span style="color: #800080;">16</span>:<span style="color: #800080;">04</span>:<span style="color: #800080;">21</span> localhost.localdomain mysql-check-upgrade[<span style="color: #800080;">28436</span>]: http:<span style="color: #008000;">//</span><span style="color: #008000;">dev.mysql&gt;</span><br>Sep <span style="color: #800080;">01</span> <span style="color: #800080;">16</span>:<span style="color: #800080;">04</span>:<span style="color: #800080;">21</span> localhost.localdomain systemd[<span style="color: #800080;">1</span>]: Started MySQL <span style="color: #800080;">8.0</span> database serve&gt;<span style="color: #000000;"></p><p>[root@localhost </span><del>]# ^<span style="color: #000000;">C<br>[root@localhost </span></del>]# cat /<span style="color: #0000ff;">var</span>/log/mysql/<span style="color: #000000;">mysqld.log<br></span><span style="color: #800080;">2020</span>-<span style="color: #800080;">09</span>-01T08:<span style="color: #800080;">03</span>:<span style="color: #800080;">16</span>.286242Z <span style="color: #800080;">0</span> [System] [MY-<span style="color: #800080;">010116</span>] [Server] /usr/libexec/mysqld (mysqld <span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>) starting <span style="color: #0000ff;">as</span> process <span style="color: #800080;">8036</span><br><span style="color: #800080;">2020</span>-<span style="color: #800080;">09</span>-01T08:<span style="color: #800080;">03</span>:<span style="color: #800080;">16</span>.300375Z <span style="color: #800080;">1</span> [ERROR] [MY-<span style="color: #800080;">011011</span><span style="color: #000000;">] [Server] Failed to find valid data directory.<br></span><span style="color: #800080;">2020</span>-<span style="color: #800080;">09</span>-01T08:<span style="color: #800080;">03</span>:<span style="color: #800080;">16</span>.300446Z <span style="color: #800080;">0</span> [ERROR] [MY-<span style="color: #800080;">010020</span><span style="color: #000000;">] [Server] Data Dictionary initialization failed.<br></span><span style="color: #800080;">2020</span>-<span style="color: #800080;">09</span>-01T08:<span style="color: #800080;">03</span>:<span style="color: #800080;">16</span>.300498Z <span style="color: #800080;">0</span> [ERROR] [MY-<span style="color: #800080;">010119</span><span style="color: #000000;">] [Server] Aborting<br></span><span style="color: #800080;">2020</span>-<span style="color: #800080;">09</span>-01T08:<span style="color: #800080;">03</span>:<span style="color: #800080;">16</span>.300755Z <span style="color: #800080;">0</span> [System] [MY-<span style="color: #800080;">010910</span>] [Server] /usr/libexec/mysqld: Shutdown complete (mysqld <span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span><span style="color: #000000;">)  Source distribution.<br></span><span style="color: #800080;">2020</span>-<span style="color: #800080;">09</span>-01T08:<span style="color: #800080;">03</span>:<span style="color: #800080;">25</span>.523538Z <span style="color: #800080;">0</span> [System] [MY-<span style="color: #800080;">013169</span>] [Server] /usr/libexec/mysqld (mysqld <span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>) initializing of server <span style="color: #0000ff;">in</span> progress <span style="color: #0000ff;">as</span> process <span style="color: #800080;">22923</span><br><span style="color: #800080;">2020</span>-<span style="color: #800080;">09</span>-01T08:<span style="color: #800080;">03</span>:<span style="color: #800080;">25</span>.524591Z <span style="color: #800080;">0</span> [ERROR] [MY-<span style="color: #800080;">010457</span>] [Server] –initialize specified but the data directory has files <span style="color: #0000ff;">in</span><span style="color: #000000;"> it. Aborting.<br></span><span style="color: #800080;">2020</span>-<span style="color: #800080;">09</span>-01T08:<span style="color: #800080;">03</span>:<span style="color: #800080;">25</span>.524614Z <span style="color: #800080;">0</span> [ERROR] [MY-<span style="color: #800080;">013236</span>] [Server] The designated data directory /<span style="color: #0000ff;">var</span>/lib/mysql/ <span style="color: #0000ff;">is</span><span style="color: #000000;"> unusable. You can remove all files that the server added to it.<br></span><span style="color: #800080;">2020</span>-<span style="color: #800080;">09</span>-01T08:<span style="color: #800080;">03</span>:<span style="color: #800080;">25</span>.524676Z <span style="color: #800080;">0</span> [ERROR] [MY-<span style="color: #800080;">010119</span><span style="color: #000000;">] [Server] Aborting<br></span><span style="color: #800080;">2020</span>-<span style="color: #800080;">09</span>-01T08:<span style="color: #800080;">03</span>:<span style="color: #800080;">25</span>.524752Z <span style="color: #800080;">0</span> [System] [MY-<span style="color: #800080;">010910</span>] [Server] /usr/libexec/mysqld: Shutdown complete (mysqld <span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span><span style="color: #000000;">)  Source distribution.<br></span><span style="color: #800080;">2020</span>-<span style="color: #800080;">09</span>-01T08:<span style="color: #800080;">03</span>:<span style="color: #800080;">35</span>.984050Z <span style="color: #800080;">0</span> [System] [MY-<span style="color: #800080;">013169</span>] [Server] /usr/libexec/mysqld (mysqld <span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>) initializing of server <span style="color: #0000ff;">in</span> progress <span style="color: #0000ff;">as</span> process <span style="color: #800080;">28279</span><br><span style="color: #800080;">2020</span>-<span style="color: #800080;">09</span>-01T08:<span style="color: #800080;">03</span>:<span style="color: #800080;">35</span>.985204Z <span style="color: #800080;">0</span> [ERROR] [MY-<span style="color: #800080;">010457</span>] [Server] –initialize specified but the data directory has files <span style="color: #0000ff;">in</span><span style="color: #000000;"> it. Aborting.<br></span><span style="color: #800080;">2020</span>-<span style="color: #800080;">09</span>-01T08:<span style="color: #800080;">03</span>:<span style="color: #800080;">35</span>.985285Z <span style="color: #800080;">0</span> [ERROR] [MY-<span style="color: #800080;">013236</span>] [Server] The designated data directory /<span style="color: #0000ff;">var</span>/lib/mysql/ <span style="color: #0000ff;">is</span><span style="color: #000000;"> unusable. You can remove all files that the server added to it.<br></span><span style="color: #800080;">2020</span>-<span style="color: #800080;">09</span>-01T08:<span style="color: #800080;">03</span>:<span style="color: #800080;">35</span>.985321Z <span style="color: #800080;">0</span> [ERROR] [MY-<span style="color: #800080;">010119</span><span style="color: #000000;">] [Server] Aborting<br></span><span style="color: #800080;">2020</span>-<span style="color: #800080;">09</span>-01T08:<span style="color: #800080;">03</span>:<span style="color: #800080;">35</span>.985395Z <span style="color: #800080;">0</span> [System] [MY-<span style="color: #800080;">010910</span>] [Server] /usr/libexec/mysqld: Shutdown complete (mysqld <span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span><span style="color: #000000;">)  Source distribution.<br></span><span style="color: #800080;">2020</span>-<span style="color: #800080;">09</span>-01T08:<span style="color: #800080;">04</span>:<span style="color: #800080;">00</span>.208778Z <span style="color: #800080;">0</span> [System] [MY-<span style="color: #800080;">013169</span>] [Server] /usr/libexec/mysqld (mysqld <span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>) initializing of server <span style="color: #0000ff;">in</span> progress <span style="color: #0000ff;">as</span> process <span style="color: #800080;">28282</span><br><span style="color: #800080;">2020</span>-<span style="color: #800080;">09</span>-01T08:<span style="color: #800080;">04</span>:<span style="color: #800080;">02</span>.022251Z <span style="color: #800080;">5</span> [Note] [MY-<span style="color: #800080;">010454</span>] [Server] A temporary password <span style="color: #0000ff;">is</span> generated <span style="color: #0000ff;">for</span> root@localhost: <span style="color: #ff0000;">u;*pHkkhe13T<br></span><span style="color: #800080;">2020</span>-<span style="color: #800080;">09</span>-01T08:<span style="color: #800080;">04</span>:<span style="color: #800080;">02</span>.704903Z <span style="color: #800080;">0</span> [System] [MY-<span style="color: #800080;">013170</span>] [Server] /usr/libexec/mysqld (mysqld <span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span><span style="color: #000000;">) initializing of server has completed<br></span><span style="color: #800080;">2020</span>-<span style="color: #800080;">09</span>-01T08:<span style="color: #800080;">04</span>:<span style="color: #800080;">19</span>.678034Z <span style="color: #800080;">0</span> [System] [MY-<span style="color: #800080;">010116</span>] [Server] /usr/libexec/mysqld (mysqld <span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span>) starting <span style="color: #0000ff;">as</span> process <span style="color: #800080;">28393</span><br><span style="color: #800080;">2020</span>-<span style="color: #800080;">09</span>-01T08:<span style="color: #800080;">04</span>:<span style="color: #800080;">21</span>.444889Z <span style="color: #800080;">0</span> [Warning] [MY-<span style="color: #800080;">010068</span>] [Server] CA certificate ca.pem <span style="color: #0000ff;">is</span><span style="color: #000000;"> self signed.<br></span><span style="color: #800080;">2020</span>-<span style="color: #800080;">09</span>-01T08:<span style="color: #800080;">04</span>:<span style="color: #800080;">21</span>.463100Z <span style="color: #800080;">0</span> [System] [MY-<span style="color: #800080;">010931</span>] [Server] /usr/libexec/mysqld: ready <span style="color: #0000ff;">for</span> connections. Version: <span style="color: #800000;">‘</span><span style="color: #800000;">8.0.17</span><span style="color: #800000;">‘</span>  socket: <span style="color: #800000;">‘</span><span style="color: #800000;">/var/lib/mysql/mysql.sock</span><span style="color: #800000;">‘</span>  port: <span style="color: #800080;">3306</span><span style="color: #000000;">  Source distribution.<br></span><span style="color: #800080;">2020</span>-<span style="color: #800080;">09</span>-01T08:<span style="color: #800080;">04</span>:<span style="color: #800080;">21</span>.531457Z <span style="color: #800080;">0</span> [System] [MY-<span style="color: #800080;">011323</span>] [Server] X Plugin ready <span style="color: #0000ff;">for</span> connections. Socket: <span style="color: #800000;">‘</span><span style="color: #800000;">/var/lib/mysql/mysqlx.sock</span><span style="color: #800000;">‘</span> bind-address: <span style="color: #800000;">‘</span><span style="color: #800000;">::</span><span style="color: #800000;">‘</span> port: <span style="color: #800080;">33060</span><span style="color: #000000;"><br>[root@localhost </span>~]# mysql -u root -<span style="color: #000000;">p<br>Enter password:<br>Welcome to the MySQL monitor.  Commands end with ; or \g.<br>Your MySQL connection id </span><span style="color: #0000ff;">is</span> <span style="color: #800080;">8</span><span style="color: #000000;"><br>Server version: </span><span style="color: #800080;">8.0</span>.<span style="color: #800080;">17</span><span style="color: #000000;"></p><p>Copyright (c) </span><span style="color: #800080;">2000</span>, <span style="color: #800080;">2019</span>, Oracle and/<span style="color: #000000;">or its affiliates. All rights reserved.</p><p>Oracle </span><span style="color: #0000ff;">is</span> a registered trademark of Oracle Corporation and/<span style="color: #000000;">or its<br>affiliates. Other names may be trademarks of their respective<br>owners.</p><p>Type </span><span style="color: #800000;">‘</span><span style="color: #800000;">help;</span><span style="color: #800000;">‘</span> or <span style="color: #800000;">‘</span><span style="color: #800000;">\h</span><span style="color: #800000;">‘</span> <span style="color: #0000ff;">for</span> help. Type <span style="color: #800000;">‘</span><span style="color: #800000;">\c</span><span style="color: #800000;">‘</span><span style="color: #000000;"> to clear the current input statement.</p><p>mysql</span>&gt; ALTER USER <span style="color: #800000;">‘</span><span style="color: #800000;">root</span><span style="color: #800000;">‘</span>@<span style="color: #800000;">‘</span><span style="color: #800000;">localhost</span><span style="color: #800000;">‘</span> IDENTIFIED WITH mysql_native_password BY <span style="color: #800000;">‘</span><span style="color: #800000;">test@123</span><span style="color: #800000;">‘</span><span style="color: #000000;">;<br>Query OK, </span><span style="color: #800080;">0</span> rows affected (<span style="color: #800080;">0.01</span><span style="color: #000000;"> sec)</p><p>mysql</span>&gt;<span style="color: #000000;"> use mysql<br>Reading table information </span><span style="color: #0000ff;">for</span><span style="color: #000000;"> completion of table and column names<br>You can turn off </span><span style="color: #0000ff;">this</span> feature to <span style="color: #0000ff;">get</span> a quicker startup with -<span style="color: #000000;">A</p><p>Database changed<br>mysql</span>&gt; <span style="color: #0000ff;">select</span> Host,User <span style="color: #0000ff;">from</span><span style="color: #000000;"> user;<br></span>+———–+——————+<br>| Host      | User             |<br>+———–+——————+<br>| localhost | mysql.infoschema |<br>| localhost | mysql.session    |<br>| localhost | mysql.sys        |<br>| localhost | root             |<br>+———–+——————+<br><span style="color: #800080;">4</span> rows <span style="color: #0000ff;">in</span> <span style="color: #0000ff;">set</span> (<span style="color: #800080;">0.00</span><span style="color: #000000;"> sec)</p><p>mysql</span>&gt; update user <span style="color: #0000ff;">set</span> host = <span style="color: #800000;">‘</span><span style="color: #800000;">%</span><span style="color: #800000;">‘</span> <span style="color: #0000ff;">where</span> user =<span style="color: #800000;">‘</span><span style="color: #800000;">root</span><span style="color: #800000;">‘</span><span style="color: #000000;">;<br>Query OK, </span><span style="color: #800080;">1</span> row affected (<span style="color: #800080;">0.00</span><span style="color: #000000;"> sec)<br>Rows matched: </span><span style="color: #800080;">1</span>  Changed: <span style="color: #800080;">1</span>  Warnings: <span style="color: #800080;">0</span><span style="color: #000000;"></p><p>mysql</span>&gt;<span style="color: #000000;"> flush privileges;<br>Query OK, </span><span style="color: #800080;">0</span> rows affected (<span style="color: #800080;">0.01</span><span style="color: #000000;"> sec)</p><p>mysql</span>&gt;<span style="color: #000000;"> exit<br>Bye<br>[root@localhost </span>~]# </pre></p></div><p>&nbsp;</p>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>.net core3.1 abp动态菜单和动态权限（动态菜单实现和动态权限添加）  （三）</title>
      <link href="/2020/06/13/cnblogs/13096427/"/>
      <url>/2020/06/13/cnblogs/13096427/</url>
      
        <content type="html"><![CDATA[<p>我们来创建动态菜单吧&nbsp;</p><div class="cnblogs_code"><pre>首先，先对动态菜单的概念、操作、流程进行约束：<br />1.Host和各个Tenant有自己的自定义菜单<br />2.Host和各个Tenant的权限与自定义菜单相关联<br />2.Tenant有一套默认的菜单，规定对应的TenantId=-1，在添加租户时自动将标准菜单和标准菜单的权限初始化到添加的租户</pre></div><h2>一、先实现菜单在数据库中的增删改查</h2><h3>第一步：创建表、实体，添加DbContext</h3><p>我们需要创建一个菜单表，延续Abp的命名方法，表名叫AbpMenus吧（菜单和权限、验证我们要关联，所以文件尽量放在Authorization文件夹下）</p><p>把创建的实体放在AbpLearn.Core/Authorization下面，新建一个Menus文件夹，再创建Menus实体</p><div class="cnblogs_code"><pre>    <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> AbpMenus : Entity&lt;int&gt;<span style="color: #000000;">    {        </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">string</span> MenuName { <span style="color: #0000ff;">set</span>; <span style="color: #0000ff;">get</span><span style="color: #000000;">; }        </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">string</span> PageName { <span style="color: #0000ff;">set</span>; <span style="color: #0000ff;">get</span><span style="color: #000000;">; }        </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">string</span> Name { <span style="color: #0000ff;">set</span>; <span style="color: #0000ff;">get</span><span style="color: #000000;">; }        </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">string</span> Url { <span style="color: #0000ff;">set</span>; <span style="color: #0000ff;">get</span><span style="color: #000000;">; }        </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">string</span> Icon { <span style="color: #0000ff;">set</span>; <span style="color: #0000ff;">get</span><span style="color: #000000;">; }        </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">int</span> ParentId { <span style="color: #0000ff;">set</span>; <span style="color: #0000ff;">get</span><span style="color: #000000;">; }        </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">bool</span> IsActive { <span style="color: #0000ff;">set</span>; <span style="color: #0000ff;">get</span><span style="color: #000000;">; }        </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">int</span> Orders { <span style="color: #0000ff;">set</span>; <span style="color: #0000ff;">get</span><span style="color: #000000;">; }        </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">int</span>? TenantId { <span style="color: #0000ff;">set</span>; <span style="color: #0000ff;">get</span><span style="color: #000000;">; }    }</span></pre></div><div class="cnblogs_code"><pre>如果翻过源码中实体的定义，可以发现很多实体的继承，例如：<br /><br />1.继承接口 IMayHaveTenant，继承后生成的sql语句将自动增加TenantId的查询条件，表中必须包含TenantId列<br />2.继承接口 IPassivable，继承后表中必须包含IsActive列<br />3.继承接口 FullAuditedEntity&lt;TPrimaryKey&gt; TPrimaryKey可以是long、int等值类型，必须包含IsDeleted、DeleterUserId、DeletionTime，其中这个接口<br />        还继承了AuditedEntity&lt;TPrimaryKey&gt;, IFullAudited, IAudited, ICreationAudited, IHasCreationTime, IModificationAudited, IHasModificationTime, IDeletionAudited, IHasDeletionTime, ISoftDelete，这些父类型、接口的定义自己F12就可以看到</pre></div><p>&nbsp;</p><p>AbpLearn.EntityFrameworkCore/EntityFrameworkCore/AbpLearnDbContext.cs增加DbSet</p><div class="cnblogs_code"><pre><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> AbpLearnDbContext : AbpZeroDbContext&lt;Tenant, Role, User, AbpLearnDbContext&gt;<span style="color: #000000;">    {        </span><span style="color: #008000;">/*</span><span style="color: #008000;"> Define a DbSet for each entity of the application </span><span style="color: #008000;">*/</span>        <pre><code>    &lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; AbpLearnDbContext(DbContextOptions&amp;lt;AbpLearnDbContext&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; options)        : &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;base&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;(options)    &#123;            &#125;    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; DbSet&amp;lt;AbpMenus&amp;gt; AbpMenus &#123; &lt;span style=&quot;color: #0000ff;&quot;&gt;set&lt;/span&gt;; &lt;span style=&quot;color: #0000ff;&quot;&gt;get&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;; &#125;&#125;&lt;/span&gt;&lt;/pre&gt;</code></pre></div><p>再去数据库中添加AbpMenus表 字段长度请自行调整</p><div class="cnblogs_code"><p>DROP TABLE IF EXISTS `AbpMenus`;<br />CREATE TABLE `AbpMenus` (<br />  `Id` int NOT NULL AUTO_INCREMENT,<br />  `MenuName` varchar(50) DEFAULT NULL,<br />  `PageName` varchar(50) DEFAULT NULL,<br />  `LName` varchar(50) DEFAULT NULL,<br />  `Url` varchar(50) DEFAULT NULL,<br />  `Icon` varchar(20) DEFAULT NULL,<br />  `ParentId` int DEFAULT NULL,<br />  `IsActive` bit(1) NOT NULL DEFAULT b'0',<br />  `Orders` int DEFAULT NULL,<br />  `TenantId` int DEFAULT NULL,<br />  PRIMARY KEY (`Id`)<br />) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;</p></div><h3>第二步：添加Service和Dto</h3><p>AbpLearn.Application/Authorization下添加Menus文件夹，然后添加IMenusAppService、MenusAppService，然后添加Dto文件夹</p><p><img src="/cnblogs/13096427/789895-20200611210551368-1414077737.png" class="lazyload placeholder" data-srcset="/cnblogs/13096427/789895-20200611210551368-1414077737.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" loading="lazy" /></p><h3>第三步：添加控制器和前台页面、js</h3><p>Controller文件，MenusController.cs</p><p>&nbsp;<img src="/cnblogs/13096427/789895-20200613120436495-1821816057.png" class="lazyload placeholder" data-srcset="/cnblogs/13096427/789895-20200613120436495-1821816057.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" loading="lazy" /></p><p>&nbsp;前台添加Menus及对应的js文件，可以简单省事的把其他文件夹复制粘贴一份，然后关键词修改下</p><p><img src="/cnblogs/13096427/789895-20200611210653597-521335150.png" class="lazyload placeholder" data-srcset="/cnblogs/13096427/789895-20200611210653597-521335150.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" loading="lazy" /></p><p>这些文件太多了，我会把这套代码上传到github中，文章最低部会把链接挂出来</p><p>添加完之后我们就可以生成预览一下Menus，因为SetNavigation中未将Menus的url加进去，我们自己手打链接进入<img src="/cnblogs/13096427/789895-20200613122433371-1340406219.png" class="lazyload placeholder" data-srcset="/cnblogs/13096427/789895-20200613122433371-1340406219.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" loading="lazy" /></p><p>&nbsp;</p><p>&nbsp;</p><p>此时， 我们的菜单这一块的crud已经做好了，我们可以看到有一个Host管理员这个部分是什么意思哪？</p><p>我们为了在当前Host中可以控制所有租户的菜单和权限，将当前Host、标准菜单、租户做一个select，代码如下</p><div class="cnblogs_code"><pre>    <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> ChangeModalViewModel    {        </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">int</span>? TenantId { <span style="color: #0000ff;">get</span>; <span style="color: #0000ff;">set</span><span style="color: #000000;">; }<pre><code>    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt; TenancyName &#123; &lt;span style=&quot;color: #0000ff;&quot;&gt;get&lt;/span&gt;; &lt;span style=&quot;color: #0000ff;&quot;&gt;set&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;; &#125;    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;int&lt;/span&gt;? TenantMenuType &#123; &lt;span style=&quot;color: #0000ff;&quot;&gt;get&lt;/span&gt;; &lt;span style=&quot;color: #0000ff;&quot;&gt;set&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;; &#125;    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; List&amp;lt;ComboboxItemDto&amp;gt; TeneacyItems &#123; &lt;span style=&quot;color: #0000ff;&quot;&gt;get&lt;/span&gt;; &lt;span style=&quot;color: #0000ff;&quot;&gt;set&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;; &#125;&#125;&lt;/span&gt;&lt;/pre&gt;</code></pre></div><div class="cnblogs_code"><pre>        <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">async</span> Task&lt;IActionResult&gt; IndexAsync(<span style="color: #0000ff;">int</span>? id = <span style="color: #800080;">0</span><span style="color: #000000;">)        {            </span><span style="color: #0000ff;">var</span> loginTenant = id &lt;= <span style="color: #800080;">0</span> ? <span style="color: #0000ff;">null</span> : _tenantManager.GetById((<span style="color: #0000ff;">int</span><span style="color: #000000;">)id);<pre><code>        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; viewModel = &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; ChangeModalViewModel        &#123;            TenancyName &lt;/span&gt;= loginTenant?&lt;span style=&quot;color: #000000;&quot;&gt;.TenancyName,            TenantId &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; id        &#125;;        viewModel.TeneacyItems &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; _tenantManager.Tenants            .Select(p &lt;/span&gt;=&amp;gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; ComboboxItemDto(p.Id.ToString(), p.Name) &#123; IsSelected = viewModel.TenancyName ==&lt;span style=&quot;color: #000000;&quot;&gt; p.TenancyName &#125;)            .ToList();        viewModel.TeneacyItems.Add(&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; ComboboxItemDto(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;,&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;Host管理员&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;) &#123; IsSelected = id == &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; &#125;);        viewModel.TeneacyItems.Add(&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; ComboboxItemDto(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;-1&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;默认菜单&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;) &#123; IsSelected = id == -&lt;span style=&quot;color: #800080;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; &#125;);        ViewBag.LoginInfo &lt;/span&gt;= &lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _sessionAppService.GetCurrentLoginInformations();        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; View(viewModel);    &#125;&lt;/span&gt;&lt;/pre&gt;</code></pre></div><p>然后在Index.cshtml中添加或修改</p><div class="cnblogs_code"><pre>@model ChangeModalViewModel  // 添加<br /><br /><br /></pre><p>&nbsp; @await Html.PartialAsync("~/Views/Menus/Index.AdvancedSearch.cshtml", Model)&nbsp; //修改</p><p>&nbsp;&nbsp;</p><p>&nbsp; @await Html.PartialAsync("~/Views/Menus/_CreateModal.cshtml",Model.TenantId)&nbsp; //修改</p><p>&nbsp;&nbsp;</p><p>&nbsp; //添加</p><p>&nbsp; $("#ChangeTenancyName").change(function (e) {<br />&nbsp; &nbsp; &nbsp;location.href = "/Menus/Index/" + this.options[this.selectedIndex].value;<br />&nbsp; });</p></div><p>修改_CreateModal.cshtml</p><div class="cnblogs_code" onclick="cnblogs_code_show('eb1b27ba-ce7d-494f-b2a1-896ae90bfd6b')"><img src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" class="lazyload placeholder" data-srcset="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" id="code_img_closed_eb1b27ba-ce7d-494f-b2a1-896ae90bfd6b" class="code_img_closed lazyload placeholder" /><img src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" class="lazyload placeholder" data-srcset="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" id="code_img_opened_eb1b27ba-ce7d-494f-b2a1-896ae90bfd6b" class="code_img_opened lazyload placeholder" style="display: none;" /><div id="cnblogs_code_open_eb1b27ba-ce7d-494f-b2a1-896ae90bfd6b" class="cnblogs_code_hide"><pre><span style="color: #000000;">@using Abp.Authorization.Users@using Abp.MultiTenancy@using AbpLearn.MultiTenancy@using AbpLearn.Web.Models.Common.Modals@model </span><span style="color: #0000ff;">int</span><span style="color: #000000;">@{    Layout </span>= <span style="color: #0000ff;">null</span><span style="color: #000000;">;}</span>&lt;div <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">modal fade</span><span style="color: #800000;">"</span> id=<span style="color: #800000;">"</span><span style="color: #800000;">MenuCreateModal</span><span style="color: #800000;">"</span> tabindex=<span style="color: #800000;">"</span><span style="color: #800000;">-1</span><span style="color: #800000;">"</span> role=<span style="color: #800000;">"</span><span style="color: #800000;">dialog</span><span style="color: #800000;">"</span> aria-labelledby=<span style="color: #800000;">"</span><span style="color: #800000;">MenuCreateModalLabel</span><span style="color: #800000;">"</span> data-backdrop=<span style="color: #800000;">"</span><span style="color: #800000;">static</span><span style="color: #800000;">"</span>&gt;    &lt;div <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">modal-dialog modal-lg</span><span style="color: #800000;">"</span> role=<span style="color: #800000;">"</span><span style="color: #800000;">document</span><span style="color: #800000;">"</span>&gt;        &lt;div <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">modal-content</span><span style="color: #800000;">"</span>&gt;<span style="color: #000000;">            @await Html.PartialAsync(</span><span style="color: #800000;">"</span><span style="color: #800000;">~/Views/Shared/Modals/_ModalHeader.cshtml</span><span style="color: #800000;">"</span>, <span style="color: #0000ff;">new</span> ModalHeaderViewModel(L(<span style="color: #800000;">"</span><span style="color: #800000;">CreateNewMenu</span><span style="color: #800000;">"</span><span style="color: #000000;">)))            </span>&lt;form name=<span style="color: #800000;">"</span><span style="color: #800000;">systemMenuCreateForm</span><span style="color: #800000;">"</span> role=<span style="color: #800000;">"</span><span style="color: #800000;">form</span><span style="color: #800000;">"</span> <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">form-horizontal</span><span style="color: #800000;">"</span>&gt;                &lt;div <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">modal-body</span><span style="color: #800000;">"</span>&gt;                    &lt;div <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">form-group row required</span><span style="color: #800000;">"</span>&gt;                        &lt;label <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">col-md-3 col-form-label</span><span style="color: #800000;">"</span>&gt;@L(<span style="color: #800000;">"</span><span style="color: #800000;">MenuName</span><span style="color: #800000;">"</span>)&lt;/label&gt;                        &lt;div <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">col-md-9</span><span style="color: #800000;">"</span>&gt;                            &lt;input type=<span style="color: #800000;">"</span><span style="color: #800000;">text</span><span style="color: #800000;">"</span> name=<span style="color: #800000;">"</span><span style="color: #800000;">MenuName</span><span style="color: #800000;">"</span> <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">form-control</span><span style="color: #800000;">"</span> required minlength=<span style="color: #800000;">"</span><span style="color: #800000;">2</span><span style="color: #800000;">"</span>&gt;                        &lt;/div&gt;                    &lt;/div&gt;                    &lt;div <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">form-group row required</span><span style="color: #800000;">"</span>&gt;                        &lt;label <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">col-md-3 col-form-label</span><span style="color: #800000;">"</span>&gt;@L(<span style="color: #800000;">"</span><span style="color: #800000;">LName</span><span style="color: #800000;">"</span>)&lt;/label&gt;                        &lt;div <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">col-md-9</span><span style="color: #800000;">"</span>&gt;                            &lt;input type=<span style="color: #800000;">"</span><span style="color: #800000;">text</span><span style="color: #800000;">"</span> name=<span style="color: #800000;">"</span><span style="color: #800000;">LName</span><span style="color: #800000;">"</span> <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">form-control</span><span style="color: #800000;">"</span> required&gt;                        &lt;/div&gt;                    &lt;/div&gt;                    &lt;div <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">form-group row required</span><span style="color: #800000;">"</span>&gt;                        &lt;label <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">col-md-3 col-form-label</span><span style="color: #800000;">"</span>&gt;@L(<span style="color: #800000;">"</span><span style="color: #800000;">Url</span><span style="color: #800000;">"</span>)&lt;/label&gt;                        &lt;div <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">col-md-9</span><span style="color: #800000;">"</span>&gt;                            &lt;input type=<span style="color: #800000;">"</span><span style="color: #800000;">text</span><span style="color: #800000;">"</span> name=<span style="color: #800000;">"</span><span style="color: #800000;">Url</span><span style="color: #800000;">"</span> <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">form-control</span><span style="color: #800000;">"</span>&gt;                        &lt;/div&gt;                    &lt;/div&gt;                    &lt;div <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">form-group row</span><span style="color: #800000;">"</span>&gt;                        &lt;label <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">col-md-3 col-form-label</span><span style="color: #800000;">"</span>&gt;@L(<span style="color: #800000;">"</span><span style="color: #800000;">PageName</span><span style="color: #800000;">"</span>)&lt;/label&gt;                        &lt;div <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">col-md-9</span><span style="color: #800000;">"</span>&gt;                            &lt;input type=<span style="color: #800000;">"</span><span style="color: #800000;">text</span><span style="color: #800000;">"</span> name=<span style="color: #800000;">"</span><span style="color: #800000;">PageName</span><span style="color: #800000;">"</span> <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">form-control</span><span style="color: #800000;">"</span>&gt;                        &lt;/div&gt;                    &lt;/div&gt;                    &lt;div <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">form-group row</span><span style="color: #800000;">"</span>&gt;                        &lt;label <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">col-md-3 col-form-label</span><span style="color: #800000;">"</span>&gt;@L(<span style="color: #800000;">"</span><span style="color: #800000;">ParentId</span><span style="color: #800000;">"</span>)&lt;/label&gt;                        &lt;div <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">col-md-9</span><span style="color: #800000;">"</span>&gt;                            &lt;input type=<span style="color: #800000;">"</span><span style="color: #800000;">text</span><span style="color: #800000;">"</span> name=<span style="color: #800000;">"</span><span style="color: #800000;">ParentId</span><span style="color: #800000;">"</span> <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">form-control</span><span style="color: #800000;">"</span>&gt;                        &lt;/div&gt;                    &lt;/div&gt;                    &lt;div <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">form-group row</span><span style="color: #800000;">"</span>&gt;                        &lt;label <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">col-md-3 col-form-label</span><span style="color: #800000;">"</span>&gt;@L(<span style="color: #800000;">"</span><span style="color: #800000;">Orders</span><span style="color: #800000;">"</span>)&lt;/label&gt;                        &lt;div <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">col-md-9</span><span style="color: #800000;">"</span>&gt;                            &lt;input type=<span style="color: #800000;">"</span><span style="color: #800000;">text</span><span style="color: #800000;">"</span> name=<span style="color: #800000;">"</span><span style="color: #800000;">Orders</span><span style="color: #800000;">"</span> <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">form-control</span><span style="color: #800000;">"</span>&gt;                        &lt;/div&gt;                    &lt;/div&gt;                    &lt;div <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">form-group row</span><span style="color: #800000;">"</span>&gt;                        &lt;label <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">col-md-3 col-form-label</span><span style="color: #800000;">"</span> <span style="color: #0000ff;">for</span>=<span style="color: #800000;">"</span><span style="color: #800000;">CreateMenuIsActive</span><span style="color: #800000;">"</span>&gt;@L(<span style="color: #800000;">"</span><span style="color: #800000;">IsActive</span><span style="color: #800000;">"</span>)&lt;/label&gt;                        &lt;div <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">col-md-9</span><span style="color: #800000;">"</span>&gt;                            &lt;input id=<span style="color: #800000;">"</span><span style="color: #800000;">CreateMenuIsActive</span><span style="color: #800000;">"</span> type=<span style="color: #800000;">"</span><span style="color: #800000;">checkbox</span><span style="color: #800000;">"</span> name=<span style="color: #800000;">"</span><span style="color: #800000;">IsActive</span><span style="color: #800000;">"</span> value=<span style="color: #800000;">"</span><span style="color: #800000;">true</span><span style="color: #800000;">"</span> <span style="color: #0000ff;">checked</span> /&gt;                        &lt;/div&gt;                    &lt;/div&gt;                &lt;/div&gt;                &lt;input type=<span style="color: #800000;">"</span><span style="color: #800000;">hidden</span><span style="color: #800000;">"</span> name=<span style="color: #800000;">"</span><span style="color: #800000;">TenantId</span><span style="color: #800000;">"</span> value=<span style="color: #800000;">"</span><span style="color: #800000;">@(Model)</span><span style="color: #800000;">"</span> /&gt;<span style="color: #000000;">                @await Html.PartialAsync(</span><span style="color: #800000;">"</span><span style="color: #800000;">~/Views/Shared/Modals/_ModalFooterWithSaveAndCancel.cshtml</span><span style="color: #800000;">"</span><span style="color: #000000;">)            </span>&lt;/form&gt;        &lt;/div&gt;    &lt;/div&gt;&lt;/div&gt;</pre></div><span class="cnblogs_code_collapse">View Code</span></div><p>&nbsp;</p><p>修改_EditModal.cshtml</p><div class="cnblogs_code" onclick="cnblogs_code_show('3cac859e-397f-41e9-9596-025466ee5cbc')"><img src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" class="lazyload placeholder" data-srcset="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" id="code_img_closed_3cac859e-397f-41e9-9596-025466ee5cbc" class="code_img_closed lazyload placeholder" /><img src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" class="lazyload placeholder" data-srcset="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" id="code_img_opened_3cac859e-397f-41e9-9596-025466ee5cbc" class="code_img_opened lazyload placeholder" style="display: none;" /><div id="cnblogs_code_open_3cac859e-397f-41e9-9596-025466ee5cbc" class="cnblogs_code_hide"><pre><span style="color: #000000;">@using AbpLearn.Authorization.Menus.Dto@using AbpLearn.Web.Models.Common.Modals@model MenuDto@{    Layout </span>= <span style="color: #0000ff;">null</span><span style="color: #000000;">;}@await Html.PartialAsync(</span><span style="color: #800000;">"</span><span style="color: #800000;">~/Views/Shared/Modals/_ModalHeader.cshtml</span><span style="color: #800000;">"</span>, <span style="color: #0000ff;">new</span> ModalHeaderViewModel(L(<span style="color: #800000;">"</span><span style="color: #800000;">EditMenu</span><span style="color: #800000;">"</span><span style="color: #000000;">)))</span>&lt;form name=<span style="color: #800000;">"</span><span style="color: #800000;">MenuEditForm</span><span style="color: #800000;">"</span> role=<span style="color: #800000;">"</span><span style="color: #800000;">form</span><span style="color: #800000;">"</span> <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">form-horizontal</span><span style="color: #800000;">"</span>&gt;    &lt;input type=<span style="color: #800000;">"</span><span style="color: #800000;">hidden</span><span style="color: #800000;">"</span> name=<span style="color: #800000;">"</span><span style="color: #800000;">Id</span><span style="color: #800000;">"</span> value=<span style="color: #800000;">"</span><span style="color: #800000;">@Model.Id</span><span style="color: #800000;">"</span> /&gt;    &lt;div <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">modal-body</span><span style="color: #800000;">"</span>&gt;        &lt;div <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">form-group row required</span><span style="color: #800000;">"</span>&gt;            &lt;label <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">col-md-3 col-form-label</span><span style="color: #800000;">"</span> <span style="color: #0000ff;">for</span>=<span style="color: #800000;">"</span><span style="color: #800000;">tenancy-name</span><span style="color: #800000;">"</span>&gt;@L(<span style="color: #800000;">"</span><span style="color: #800000;">MenuName</span><span style="color: #800000;">"</span>)&lt;/label&gt;            &lt;div <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">col-md-9</span><span style="color: #800000;">"</span>&gt;                &lt;input id=<span style="color: #800000;">"</span><span style="color: #800000;">tenancy-name</span><span style="color: #800000;">"</span> type=<span style="color: #800000;">"</span><span style="color: #800000;">text</span><span style="color: #800000;">"</span> <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">form-control</span><span style="color: #800000;">"</span> name=<span style="color: #800000;">"</span><span style="color: #800000;">MenuName</span><span style="color: #800000;">"</span> value=<span style="color: #800000;">"</span><span style="color: #800000;">@Model.MenuName</span><span style="color: #800000;">"</span> required maxlength=<span style="color: #800000;">"</span><span style="color: #800000;">64</span><span style="color: #800000;">"</span> minlength=<span style="color: #800000;">"</span><span style="color: #800000;">2</span><span style="color: #800000;">"</span>&gt;            &lt;/div&gt;        &lt;/div&gt;        &lt;div <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">form-group row required</span><span style="color: #800000;">"</span>&gt;            &lt;label <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">col-md-3 col-form-label</span><span style="color: #800000;">"</span> <span style="color: #0000ff;">for</span>=<span style="color: #800000;">"</span><span style="color: #800000;">name</span><span style="color: #800000;">"</span>&gt;@L(<span style="color: #800000;">"</span><span style="color: #800000;">LName</span><span style="color: #800000;">"</span>)&lt;/label&gt;            &lt;div <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">col-md-9</span><span style="color: #800000;">"</span>&gt;                &lt;input id=<span style="color: #800000;">"</span><span style="color: #800000;">name</span><span style="color: #800000;">"</span> type=<span style="color: #800000;">"</span><span style="color: #800000;">text</span><span style="color: #800000;">"</span> <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">form-control</span><span style="color: #800000;">"</span> name=<span style="color: #800000;">"</span><span style="color: #800000;">LName</span><span style="color: #800000;">"</span> value=<span style="color: #800000;">"</span><span style="color: #800000;">@Model.LName</span><span style="color: #800000;">"</span> required maxlength=<span style="color: #800000;">"</span><span style="color: #800000;">128</span><span style="color: #800000;">"</span>&gt;            &lt;/div&gt;        &lt;/div&gt;        &lt;div <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">form-group row required</span><span style="color: #800000;">"</span>&gt;            &lt;label <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">col-md-3 col-form-label</span><span style="color: #800000;">"</span> <span style="color: #0000ff;">for</span>=<span style="color: #800000;">"</span><span style="color: #800000;">name</span><span style="color: #800000;">"</span>&gt;@L(<span style="color: #800000;">"</span><span style="color: #800000;">Url</span><span style="color: #800000;">"</span>)&lt;/label&gt;            &lt;div <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">col-md-9</span><span style="color: #800000;">"</span>&gt;                &lt;input id=<span style="color: #800000;">"</span><span style="color: #800000;">name</span><span style="color: #800000;">"</span> type=<span style="color: #800000;">"</span><span style="color: #800000;">text</span><span style="color: #800000;">"</span> <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">form-control</span><span style="color: #800000;">"</span> name=<span style="color: #800000;">"</span><span style="color: #800000;">Url</span><span style="color: #800000;">"</span> value=<span style="color: #800000;">"</span><span style="color: #800000;">@Model.Url</span><span style="color: #800000;">"</span> required maxlength=<span style="color: #800000;">"</span><span style="color: #800000;">128</span><span style="color: #800000;">"</span>&gt;            &lt;/div&gt;        &lt;/div&gt;<pre><code>    &amp;lt;div &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;form-group row required&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;        &amp;lt;label &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;col-md-3 col-form-label&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;for&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;@L(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;PageName&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;)&amp;lt;/label&amp;gt;        &amp;lt;div &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;col-md-9&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;            &amp;lt;input id=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; type=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;text&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;form-control&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; name=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;PageName&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; value=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;@Model.PageName&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; required maxlength=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;128&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;        &amp;lt;/div&amp;gt;    &amp;lt;/div&amp;gt;    &amp;lt;div &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;form-group row required&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;        &amp;lt;label &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;col-md-3 col-form-label&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;for&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;@L(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;ParentId&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;)&amp;lt;/label&amp;gt;        &amp;lt;div &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;col-md-9&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;            &amp;lt;input id=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; type=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;text&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;form-control&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; name=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;ParentId&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; value=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;@Model.ParentId&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; required maxlength=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;128&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;        &amp;lt;/div&amp;gt;    &amp;lt;/div&amp;gt;    &amp;lt;div &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;form-group row required&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;        &amp;lt;label &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;col-md-3 col-form-label&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;for&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;@L(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;Orders&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;)&amp;lt;/label&amp;gt;        &amp;lt;div &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;col-md-9&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;            &amp;lt;input id=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; type=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;text&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;form-control&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; name=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;Orders&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; value=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;@Model.Orders&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; required maxlength=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;128&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;        &amp;lt;/div&amp;gt;    &amp;lt;/div&amp;gt;    &amp;lt;div &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;form-group row&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;        &amp;lt;label &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;col-md-3 col-form-label&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;for&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;isactive&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;@L(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;IsActive&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;)&amp;lt;/label&amp;gt;        &amp;lt;div &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;col-md-9&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;            &amp;lt;input id=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;isactive&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; type=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;checkbox&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; name=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;IsActive&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; value=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; @(Model.IsActive ? &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;checked&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; : &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&quot;&lt;/span&gt;) /&amp;gt;        &amp;lt;/div&amp;gt;    &amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;@await Html.PartialAsync(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;~/Views/Shared/Modals/_ModalFooterWithSaveAndCancel.cshtml&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)</code></pre><p></span>&lt;/form&gt;</p><p>&lt;script src=<span style="color: #800000;">“</span><span style="color: #800000;">~/view-resources/Views/Menus/_EditModal.js</span><span style="color: #800000;">“</span> asp-append-version=<span style="color: #800000;">“</span><span style="color: #800000;">true</span><span style="color: #800000;">“</span>&gt;&lt;/script&gt;</pre></p></div><span class="cnblogs_code_collapse">View Code</span></div><p>修改Index.AdvancedSearch.cshtml</p><div class="cnblogs_code"><pre><span style="color: #000000;">@using AbpLearn.Web.Views.Shared.Components.TenantChange@using Abp.Application.Services.Dto@model ChangeModalViewModel<pre><code>&lt;/span&gt;&amp;lt;div &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;abp-advanced-search&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;    &amp;lt;form id=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;MenusSearchForm&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;form-horizontal&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;        &amp;lt;input type=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;hidden&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; name=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;TenantId&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; value=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;@Model.TenantId&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; /&amp;gt;        &amp;lt;/form&amp;gt;        &amp;lt;div &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;form-horizontal&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;            &amp;lt;div &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;form-group&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;                @Html.DropDownList(                   &lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;ChangeTenancyNames&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;,                   Model.TeneacyItems.Select(i &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; i.ToSelectListItem()),                   &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; &#123; @class = &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;form-control edited&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, id = &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;ChangeTenancyName&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; &#125;)            &lt;/span&gt;&amp;lt;/div&amp;gt;        &amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&lt;/pre&gt;</code></pre></div><p>因为在abp里面加载当前列表调用的是abp.services.app.menus.getAll方法，我们还需要对MenusAppService中的GetAllAsync做一下修改</p><div class="cnblogs_code"><pre><span style="color: #000000;">    [Serializable]    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> MenusPagedResultRequestDto: PagedResultRequestDto, IPagedAndSortedResultRequest    {        </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">virtual</span> <span style="color: #0000ff;">int</span>? TenantId { <span style="color: #0000ff;">get</span>; <span style="color: #0000ff;">set</span><span style="color: #000000;">; }<pre><code>    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;virtual&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt; Sorting &#123; &lt;span style=&quot;color: #0000ff;&quot;&gt;get&lt;/span&gt;; &lt;span style=&quot;color: #0000ff;&quot;&gt;set&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;; &#125;    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;virtual&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;bool&lt;/span&gt; ShowAll &#123; &lt;span style=&quot;color: #0000ff;&quot;&gt;get&lt;/span&gt;; &lt;span style=&quot;color: #0000ff;&quot;&gt;set&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;; &#125;&#125;&lt;/span&gt;&lt;/pre&gt;</code></pre></div><div class="cnblogs_code"><pre>        <span style="color: #0000ff;">#region</span> 查询全部菜单        <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span>        <span style="color: #808080;">///</span><span style="color: #008000;"> 查询全部菜单        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span>        <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;param name="input"&gt;&lt;/param&gt;</span>        <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;returns&gt;&lt;/returns&gt;</span>        <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">override</span> <span style="color: #0000ff;">async</span> Task&lt;PagedResultDto&lt;MenuDto&gt;&gt;<span style="color: #000000;"> GetAllAsync(MenusPagedResultRequestDto input)        {            IQueryable</span>&lt;AbpMenus&gt;<span style="color: #000000;"> query;<pre><code>        query &lt;/span&gt;= CreateFilteredQuery(input).Where(o =&amp;gt; o.TenantId == (input.TenantId == &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt; ? &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; : input.TenantId));        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; totalCount = &lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; AsyncQueryableExecuter.CountAsync(query);        query &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; ApplySorting(query, input);        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (!input.ShowAll) query =&lt;span style=&quot;color: #000000;&quot;&gt; ApplyPaging(query, input);        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; entities = &lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; AsyncQueryableExecuter.ToListAsync(query);        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; PagedResultDto&amp;lt;MenuDto&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;(            totalCount,            entities.Select(MapToEntityDto).ToList()        );    &#125;    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;#endregion&lt;/span&gt;&lt;/pre&gt;</code></pre></div><p>这样，我们在选中下面中的任意一个Tenant时，将会跳到对应的菜单里面了</p><p>&nbsp;</p><p><img src="/cnblogs/13096427/789895-20200613122549077-374827601.png" class="lazyload placeholder" data-srcset="/cnblogs/13096427/789895-20200613122549077-374827601.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" loading="lazy" /></p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;我们先把Host管理员菜单和默认菜单配置一下</p><p><img src="/cnblogs/13096427/789895-20200613131544727-322024248.png" class="lazyload placeholder" data-srcset="/cnblogs/13096427/789895-20200613131544727-322024248.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" loading="lazy" /></p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;<img src="/cnblogs/13096427/789895-20200613131507643-1916575069.png" class="lazyload placeholder" data-srcset="/cnblogs/13096427/789895-20200613131507643-1916575069.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" loading="lazy" /></p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><h2>二、实现添加租户时，初始化标准菜单和权限</h2><p>首先我们找到添加租户的地方，去TenantAppService里面去找，可以看到有CreateAsync的重写</p><div class="cnblogs_code"><pre>        <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">override</span> <span style="color: #0000ff;">async</span> Task&lt;TenantDto&gt;<span style="color: #000000;"> CreateAsync(CreateTenantDto input)        {            CheckCreatePermission();<pre><code>        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Create tenant&lt;/span&gt;        &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; tenant = ObjectMapper.Map&amp;lt;Tenant&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;(input);        tenant.ConnectionString &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; input.ConnectionString.IsNullOrEmpty()            &lt;/span&gt;? &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;            : SimpleStringCipher.Instance.Encrypt(input.ConnectionString);        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; defaultEdition = &lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _editionManager.FindByNameAsync(EditionManager.DefaultEditionName);        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (defaultEdition != &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)        &#123;            tenant.EditionId &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; defaultEdition.Id;        &#125;        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _tenantManager.CreateAsync(tenant);        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt; CurrentUnitOfWork.SaveChangesAsync(); &lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; To get new tenant&#39;s id.        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Create tenant database&lt;/span&gt;</code></pre><p><span style="color: #000000;">            _abpZeroDbMigrator.CreateOrMigrateForTenant(tenant);</p><pre><code>        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; We are working entities of new tenant, so changing tenant filter&lt;/span&gt;        &lt;span style=&quot;color: #0000ff;&quot;&gt;using&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; (CurrentUnitOfWork.SetTenantId(tenant.Id))        &#123;            &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Create static roles for new tenant&lt;/span&gt;            CheckErrors(&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _roleManager.CreateStaticRoles(tenant.Id));            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt; CurrentUnitOfWork.SaveChangesAsync(); &lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; To get static role ids            &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Grant all permissions to admin role&lt;/span&gt;            &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; adminRole = _roleManager.Roles.Single(r =&amp;gt; r.Name ==&lt;span style=&quot;color: #000000;&quot;&gt; StaticRoleNames.Tenants.Admin);            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _roleManager.GrantAllPermissionsAsync(adminRole);            &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Create admin user for the tenant&lt;/span&gt;            &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; adminUser =&lt;span style=&quot;color: #000000;&quot;&gt; User.CreateTenantAdminUser(tenant.Id, input.AdminEmailAddress);            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _userManager.InitializeOptionsAsync(tenant.Id);            CheckErrors(&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _userManager.CreateAsync(adminUser, User.DefaultPassword));            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt; CurrentUnitOfWork.SaveChangesAsync(); &lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; To get admin user&#39;s id            &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Assign admin user to role!&lt;/span&gt;            CheckErrors(&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _userManager.AddToRoleAsync(adminUser, adminRole.Name));            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; CurrentUnitOfWork.SaveChangesAsync();        &#125;        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; MapToEntityDto(tenant);    &#125;&lt;/span&gt;&lt;/pre&gt;</code></pre></div><p>我们需要做的是，在&nbsp;using (CurrentUnitOfWork.SetTenantId(tenant.Id)) 的内部尾部添加赋予菜单和权限的方法即可</p><p>赋予菜单和权限的方法我们分开写，都放在MenusAppService中，</p><div class="cnblogs_code"><pre>    <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">interface</span> IMenusAppService : IAsyncCrudAppService&lt;MenuDto, <span style="color: #0000ff;">int</span>, MenusPagedResultRequestDto, CreateMenuDto, MenuDto&gt;<span style="color: #000000;">    {        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span>        <span style="color: #808080;">///</span><span style="color: #008000;"> 赋予默认菜单        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span>        <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;param name="input"&gt;&lt;/param&gt;</span>        <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;returns&gt;&lt;/returns&gt;</span>        Task GiveMenusAsync(EntityDto&lt;<span style="color: #0000ff;">int</span>&gt;<span style="color: #000000;"> input);<pre><code>    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; 赋予当前租户Admin角色菜单权限    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;param name=&quot;input&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;returns&amp;gt;&amp;lt;/returns&amp;gt;&lt;/span&gt;    Task GivePermissionsAsync(EntityDto&amp;lt;&lt;span style=&quot;color: #0000ff;&quot;&gt;int&lt;/span&gt;&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; input);&#125;&lt;/span&gt;&lt;/pre&gt;</code></pre></div><div class="cnblogs_code"><pre>        #region 赋予默认菜单        public async Task GiveMenusAsync(EntityDto&lt;int&gt; input)        {            if (input.Id &gt; 0)            {                var tenant = await _tenantManager.GetByIdAsync(input.Id);<pre><code>            using (_unitOfWorkManager.Current.SetTenantId(tenant.Id))            &#123;                var query = CreateFilteredQuery(new MenusPagedResultRequestDto()).Where(o =&amp;gt; o.TenantId == tenant.Id);                var systemMenus = await AsyncQueryableExecuter.ToListAsync(query);                if (!systemMenus.Any())                &#123;                    query = CreateFilteredQuery(new MenusPagedResultRequestDto()).Where(o =&amp;gt; o.TenantId == -1);                    var defaultMenus = await AsyncQueryableExecuter.ToListAsync(query);                    if (defaultMenus.Any())                    &#123;                        List&amp;lt;MenusInsert&amp;gt; GetMenusInserts(List&amp;lt;AbpMenus&amp;gt; abpMenus,int parentId = 0)                        &#123;                            List&amp;lt;MenusInsert&amp;gt; menusInserts = new List&amp;lt;MenusInsert&amp;gt;();                            foreach (var entity in abpMenus.Where(o =&amp;gt; o.ParentId == parentId))                            &#123;                                var insert = new MenusInsert()                                &#123;                                    LName = entity.LName,                                    MenuName = entity.MenuName,                                    PageName = entity.PageName,                                    Icon = entity.Icon,                                    Url = entity.Url,                                    IsActive = entity.IsActive,                                    Orders = entity.Orders,                                    ParentId = entity.ParentId,                                    TenantId = tenant.Id                                &#125;;                                insert.menusInserts = GetMenusInserts(abpMenus, entity.Id);                                menusInserts.Add(insert);                            &#125;                            return menusInserts;                        &#125;                        async Task InsertMenusAsync(List&amp;lt;MenusInsert&amp;gt; inserts,int parentId = 0)                        &#123;                            foreach (var insert in inserts)                            &#123;                                var entity = await CreateAsync(new AbpMenus()                                &#123;                                    LName = insert.LName,                                    MenuName = insert.MenuName,                                    PageName = insert.PageName,                                    Icon = insert.Icon,                                    Url = insert.Url,                                    IsActive = insert.IsActive,                                    Orders = insert.Orders,                                    ParentId = parentId,                                    TenantId = tenant.Id                                &#125;);                                if (insert.menusInserts.Any())                                &#123;                                    await InsertMenusAsync(insert.menusInserts, entity.Id);                                &#125;                            &#125;                        &#125;                        await InsertMenusAsync(GetMenusInserts(defaultMenus));                                            &#125;                &#125;            &#125;        &#125;    &#125;    #endregion    &lt;span style=&quot;color: #0000ff;&quot;&gt;#region&lt;/span&gt; 赋予当前租户Admin角色菜单权限    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; 赋予当前租户Admin角色菜单权限    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;param name=&quot;input&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;returns&amp;gt;&amp;lt;/returns&amp;gt;&lt;/span&gt;    &lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;async&lt;/span&gt; Task GivePermissionsAsync(EntityDto&amp;lt;&lt;span style=&quot;color: #0000ff;&quot;&gt;int&lt;/span&gt;&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; input)    &#123;        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (input.Id &amp;gt; &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)        &#123;            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; tenant = &lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _tenantManager.GetByIdAsync(input.Id);            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;using&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; (_unitOfWorkManager.Current.SetTenantId(tenant.Id))            &#123;                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; adminRoles = &lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt; _roleRepository.GetAllListAsync(o =&amp;gt; o.Name == StaticRoleNames.Tenants.Admin &amp;amp;&amp;amp; o.TenantId ==&lt;span style=&quot;color: #000000;&quot;&gt; tenant.Id);                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (adminRoles.FirstOrDefault() != &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)                &#123;                    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; adminRole =&lt;span style=&quot;color: #000000;&quot;&gt; adminRoles.FirstOrDefault();                    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; query = CreateFilteredQuery(&lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; MenusPagedResultRequestDto()).Where(o =&amp;gt; o.TenantId ==&lt;span style=&quot;color: #000000;&quot;&gt; tenant.Id);                    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; systemMenus = &lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; AsyncQueryableExecuter.ToListAsync(query);                    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; permissions =&lt;span style=&quot;color: #000000;&quot;&gt; ConvertTenantPermissions(systemMenus);                    &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;await _roleManager.ResetAllPermissionsAsync(adminRole.FirstOrDefault()); &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;重置授权&lt;/span&gt;                    &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; active_BatchCount = &lt;span style=&quot;color: #800080;&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;;                    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; active_permissions = ConvertTenantPermissions(systemMenus.Where(o =&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; o.IsActive).ToList());                    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;for&lt;/span&gt; (&lt;span style=&quot;color: #0000ff;&quot;&gt;int&lt;/span&gt; i = &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt;; i &amp;lt; active_permissions.Count(); i += &lt;span style=&quot;color: #800080;&quot;&gt;10&lt;/span&gt;)&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;每次后移5位&lt;/span&gt;</code></pre><p><span style="color: #000000;">                        {<br>                            </span><span style="color: #008000;">//</span><span style="color: #008000;">await _roleManager.SetGrantedPermissionsAsync(adminRole.FirstOrDefault().Id, active_permissions.Take(active_BatchCount).Skip(i));</span><br>                            <span style="color: #0000ff;">foreach</span> (<span style="color: #0000ff;">var</span> notActive_permission <span style="color: #0000ff;">in</span><span style="color: #000000;"> active_permissions.Take(active_BatchCount).Skip(i))<br>                            {<br>                                </span><span style="color: #0000ff;">await</span><span style="color: #000000;"> _roleManager.GrantPermissionAsync(adminRole, notActive_permission);<br>                            }<br>                            active_BatchCount </span>+= <span style="color: #800080;">10</span>;<span style="color: #008000;">//</span><span style="color: #008000;">每次从数组中选出N+10位，skip前N位</span><br><span style="color: #000000;">                        }</p><pre><code>                    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; notActive_BatchCount = &lt;span style=&quot;color: #800080;&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;;                    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; notActive_permissions = ConvertTenantPermissions(systemMenus.Where(o =&amp;gt; !&lt;span style=&quot;color: #000000;&quot;&gt;o.IsActive).ToList());                    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;for&lt;/span&gt; (&lt;span style=&quot;color: #0000ff;&quot;&gt;int&lt;/span&gt; i = &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt;; i &amp;lt; notActive_permissions.Count(); i += &lt;span style=&quot;color: #800080;&quot;&gt;10&lt;/span&gt;)&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;每次后移5位&lt;/span&gt;</code></pre><p><span style="color: #000000;">                        {<br>                            </span><span style="color: #0000ff;">foreach</span> (<span style="color: #0000ff;">var</span> notActive_permission <span style="color: #0000ff;">in</span><span style="color: #000000;"> notActive_permissions.Take(notActive_BatchCount).Skip(i))<br>                            {<br>                                </span><span style="color: #0000ff;">await</span><span style="color: #000000;"> _roleManager.ProhibitPermissionAsync(adminRole, notActive_permission);<br>                            }<br>                            notActive_BatchCount </span>+= <span style="color: #800080;">10</span>;<span style="color: #008000;">//</span><span style="color: #008000;">每次从数组中选出N+10位，skip前N位</span><br><span style="color: #000000;">                        }<br>                    }<br>                    </span><span style="color: #0000ff;">else</span><span style="color: #000000;"><br>                    {<br>                        </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span> AbpDbConcurrencyException(<span style="color: #800000;">“</span><span style="color: #800000;">未获取到当前租户的Admin角色！</span><span style="color: #800000;">“</span><span style="color: #000000;">);<br>                    }<br>                }<br>            }<br>            </span><span style="color: #0000ff;">else</span><span style="color: #000000;"><br>            {<br>                </span><span style="color: #0000ff;">var</span> adminRoles = <span style="color: #0000ff;">await</span> _roleRepository.GetAllListAsync(o =&gt; o.Name == StaticRoleNames.Tenants.Admin &amp;&amp; o.TenantId == <span style="color: #0000ff;">null</span><span style="color: #000000;">);<br>                </span><span style="color: #0000ff;">if</span> (adminRoles.FirstOrDefault() != <span style="color: #0000ff;">null</span><span style="color: #000000;">)<br>                {<br>                    </span><span style="color: #0000ff;">var</span> adminRole =<span style="color: #000000;"> adminRoles.FirstOrDefault();</p><pre><code>                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; query = CreateFilteredQuery(&lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; MenusPagedResultRequestDto()).Where(o =&amp;gt; o.TenantId == &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt; || o.TenantId == &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; systemMenus = &lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; AsyncQueryableExecuter.ToListAsync(query);                &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;await _roleManager.ResetAllPermissionsAsync(adminRole.FirstOrDefault()); &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;重置授权&lt;/span&gt;                &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; active_BatchCount = &lt;span style=&quot;color: #800080;&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;;                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; active_permissions = ConvertHostPermissions(systemMenus.Where(o =&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; o.IsActive).ToList());                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;for&lt;/span&gt; (&lt;span style=&quot;color: #0000ff;&quot;&gt;int&lt;/span&gt; i = &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt;; i &amp;lt; active_permissions.Count(); i += &lt;span style=&quot;color: #800080;&quot;&gt;10&lt;/span&gt;)&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;每次后移5位&lt;/span&gt;</code></pre><p><span style="color: #000000;">                    {<br>                        </span><span style="color: #008000;">//</span><span style="color: #008000;">await _roleManager.SetGrantedPermissionsAsync(adminRole.FirstOrDefault().Id, active_permissions.Take(active_BatchCount).Skip(i));</span><br>                        <span style="color: #0000ff;">foreach</span> (<span style="color: #0000ff;">var</span> notActive_permission <span style="color: #0000ff;">in</span><span style="color: #000000;"> active_permissions.Take(active_BatchCount).Skip(i))<br>                        {<br>                            </span><span style="color: #0000ff;">await</span><span style="color: #000000;"> _roleManager.GrantPermissionAsync(adminRole, notActive_permission);<br>                        }<br>                        active_BatchCount </span>+= <span style="color: #800080;">10</span>;<span style="color: #008000;">//</span><span style="color: #008000;">每次从数组中选出N+10位，skip前N位</span><br><span style="color: #000000;">                    }</p><pre><code>                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; notActive_BatchCount = &lt;span style=&quot;color: #800080;&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;;                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; notActive_permissions = ConvertHostPermissions(systemMenus.Where(o =&amp;gt; !&lt;span style=&quot;color: #000000;&quot;&gt;o.IsActive).ToList());                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;for&lt;/span&gt; (&lt;span style=&quot;color: #0000ff;&quot;&gt;int&lt;/span&gt; i = &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt;; i &amp;lt; notActive_permissions.Count(); i += &lt;span style=&quot;color: #800080;&quot;&gt;10&lt;/span&gt;)&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;每次后移5位&lt;/span&gt;</code></pre><p><span style="color: #000000;">                    {<br>                        </span><span style="color: #0000ff;">foreach</span> (<span style="color: #0000ff;">var</span> notActive_permission <span style="color: #0000ff;">in</span><span style="color: #000000;"> notActive_permissions.Take(notActive_BatchCount).Skip(i))<br>                        {<br>                            </span><span style="color: #0000ff;">await</span><span style="color: #000000;"> _roleManager.ProhibitPermissionAsync(adminRole, notActive_permission);<br>                        }<br>                        notActive_BatchCount </span>+= <span style="color: #800080;">10</span>;<span style="color: #008000;">//</span><span style="color: #008000;">每次从数组中选出N+10位，skip前N位</span><br><span style="color: #000000;">                    }<br>                }<br>            }<br>        }</p><pre><code>    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; IEnumerable&amp;lt;Permission&amp;gt; ConvertTenantPermissions(IReadOnlyList&amp;lt;AbpMenus&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; systemMenus)    &#123;        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt; systemMenus.Select(o =&amp;gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; Permission(o.PageName, L(o.MenuName), L(o.LName), MultiTenancySides.Tenant));    &#125;    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; IEnumerable&amp;lt;Permission&amp;gt; ConvertHostPermissions(IReadOnlyList&amp;lt;AbpMenus&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; systemMenus)    &#123;        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt; systemMenus.Select(o =&amp;gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; Permission(o.PageName, L(o.MenuName), L(o.LName), MultiTenancySides.Host));    &#125;    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;#endregion&lt;/span&gt;&lt;/pre&gt;</code></pre></div><p>TenantAppService.cs中做一下修改</p><div class="cnblogs_code"><pre>        <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">override</span> <span style="color: #0000ff;">async</span> Task&lt;TenantDto&gt;<span style="color: #000000;"> CreateAsync(CreateTenantDto input)        {            CheckCreatePermission();<pre><code>        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Create tenant&lt;/span&gt;        &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; tenant = ObjectMapper.Map&amp;lt;Tenant&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;(input);        tenant.ConnectionString &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; input.ConnectionString.IsNullOrEmpty()            &lt;/span&gt;? &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;            : SimpleStringCipher.Instance.Encrypt(input.ConnectionString);        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; defaultEdition = &lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _editionManager.FindByNameAsync(EditionManager.DefaultEditionName);        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (defaultEdition != &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)        &#123;            tenant.EditionId &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; defaultEdition.Id;        &#125;        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _tenantManager.CreateAsync(tenant);        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt; CurrentUnitOfWork.SaveChangesAsync(); &lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; To get new tenant&#39;s id.        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Create tenant database&lt;/span&gt;</code></pre><p><span style="color: #000000;">            _abpZeroDbMigrator.CreateOrMigrateForTenant(tenant);</p><pre><code>        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; We are working entities of new tenant, so changing tenant filter&lt;/span&gt;        &lt;span style=&quot;color: #0000ff;&quot;&gt;using&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; (CurrentUnitOfWork.SetTenantId(tenant.Id))        &#123;            &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Create static roles for new tenant&lt;/span&gt;            CheckErrors(&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _roleManager.CreateStaticRoles(tenant.Id));            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt; CurrentUnitOfWork.SaveChangesAsync(); &lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; To get static role ids            &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Grant all permissions to admin role&lt;/span&gt;            &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; adminRole = _roleManager.Roles.Single(r =&amp;gt; r.Name ==&lt;span style=&quot;color: #000000;&quot;&gt; StaticRoleNames.Tenants.Admin);            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _roleManager.GrantAllPermissionsAsync(adminRole);            &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Create admin user for the tenant&lt;/span&gt;            &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; adminUser =&lt;span style=&quot;color: #000000;&quot;&gt; User.CreateTenantAdminUser(tenant.Id, input.AdminEmailAddress);            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _userManager.InitializeOptionsAsync(tenant.Id);            CheckErrors(&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _userManager.CreateAsync(adminUser, User.DefaultPassword));            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt; CurrentUnitOfWork.SaveChangesAsync(); &lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; To get admin user&#39;s id            &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Assign admin user to role!&lt;/span&gt;            CheckErrors(&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _userManager.AddToRoleAsync(adminUser, adminRole.Name));            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; CurrentUnitOfWork.SaveChangesAsync();            &lt;/span&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;await _menusAppService.GiveMenusAsync(new EntityDto&amp;lt;int&amp;gt;() &#123; Id = tenant.Id &#125;);            await CurrentUnitOfWork.SaveChangesAsync();            await _menusAppService.GivePermissionsAsync(new EntityDto&amp;lt;int&amp;gt;() &#123; Id = tenant.Id &#125;);            await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt; CurrentUnitOfWork.SaveChangesAsync();&lt;/span&gt;        &#125;        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; MapToEntityDto(tenant);    &#125;&lt;/span&gt;&lt;/pre&gt;</code></pre></div><p>现在我们添加租户企业1、企业2</p><p><img src="/cnblogs/13096427/789895-20200613151834645-748331091.png" class="lazyload placeholder" data-srcset="/cnblogs/13096427/789895-20200613151834645-748331091.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" loading="lazy" /></p><p>&nbsp;</p><p>&nbsp;<img src="/cnblogs/13096427/789895-20200613151852573-1477272883.png" class="lazyload placeholder" data-srcset="/cnblogs/13096427/789895-20200613151852573-1477272883.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" loading="lazy" /></p><p>&nbsp;</p><p>&nbsp;现在菜单已经同步好了，我们去数据库看下权限的同步</p><p><img src="/cnblogs/13096427/789895-20200613152221722-277186366.png" class="lazyload placeholder" data-srcset="/cnblogs/13096427/789895-20200613152221722-277186366.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" loading="lazy" /></p><p>&nbsp;</p><p>TenantId：</p><p>null是Host</p><p>1是abp页面第一次加载时初始化的Default租户</p><p>2是我之前添加的旧的企业1，那个时候方法没写好，就把2的删掉了</p><p>3是企业2</p><p>4是企业1</p><p>由此可以看出，我们添加的菜单对应的PageName已经作为权限添加到权限表了</p><p>&nbsp;</p><h2>三、实现菜单修改后，权限赋予对应租户</h2><p>这一个其实在二里面已经写好了，前台做一个按钮，赋予权限，调用一下就好了</p><p>例如：</p><p>Index.cshtml&nbsp; &nbsp;//为什么要加getCurrentLoginInformationsOutput.Tenant == null的判断？是因为租户在进入菜单管理的地方，我们不给他们添加、赋予权限的权限</p><p><img src="/cnblogs/13096427/789895-20200613152628601-193312193.png" class="lazyload placeholder" data-srcset="/cnblogs/13096427/789895-20200613152628601-193312193.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" loading="lazy" /></p><p>&nbsp;</p><p>&nbsp;在/wwwroot/view-resources/Views/Menus/Index.js中添加</p><div class="cnblogs_code"><pre>    $(document).on(<span style="color: #800000;">'</span><span style="color: #800000;">click</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">#GivePermissions</span><span style="color: #800000;">'</span><span style="color: #000000;">, function (e) {        </span><span style="color: #0000ff;">var</span> tenantId = $(<span style="color: #0000ff;">this</span>).attr(<span style="color: #800000;">'</span><span style="color: #800000;">data-tenant-id</span><span style="color: #800000;">'</span><span style="color: #000000;">);<pre><code>    abp.message.confirm(        abp.utils.formatString(            &lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;是否赋予当前租户管理员账号所有权限？&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;,            &lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;系统&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;        ),        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;,        (isConfirmed) &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; &#123;            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; (isConfirmed) &#123;                _menuService                    .givePermissions(&#123;                        id: tenantId                    &#125;)                    .done(() &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; &#123;                        abp.notify.info(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;操作成功！&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);                        _$menusTable.ajax.reload();                    &#125;);            &#125;        &#125;    );&#125;);&lt;/span&gt;&lt;/pre&gt;</code></pre></div><h2>四、实现菜单的动态加载</h2><p>在<a href="https://www.cnblogs.com/wangpengzong/p/13089690.html">https://www.cnblogs.com/wangpengzong/p/13089690.html</a>中我们找到了菜单生成的地方，在最底部，通过<span style="font-family: 'Courier New'; font-size: 12px; white-space: pre-wrap;">NavigationManager来获取到Menus，这里其实有一个初始化方法（</span><span style="font-family: 'Courier New'; font-size: 12px; white-space: pre-wrap;">Initialize</span><span style="font-family: 'Courier New'; font-size: 12px; white-space: pre-wrap;">），调用的是</span><span style="font-family: 'Courier New';"><span style="font-size: 12px; white-space: pre-wrap;">AbpLearnNavigationProvider的</span></span><span style="font-family: 'Courier New'; font-size: 12px; white-space: pre-wrap;">SetNavigation方法来进行本地化，然后在</span></p><pre><span style="margin: 0px; padding: 0px; line-height: 1.5 !important;">NavigationManager的非静态构造函数中去获取已经本地化的Menus，但是本地化Menus因为是在初始化时，程序的初始化我们无法获取到当前的Tenant信息，所以只能将获取Menus的地方推迟，放在倒数第二个类</span>UserNavigationManager里面的GetMenuAsync方法中，我们来看下GetMenuAsync</pre><div class="cnblogs_code"><pre>        <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">async</span> Task&lt;UserMenu&gt; GetMenuAsync(<span style="color: #0000ff;">string</span><span style="color: #000000;"> menuName, UserIdentifier user)        {            </span><span style="color: #0000ff;">var</span> menuDefinition =<span style="color: #000000;"> _navigationManager.Menus.GetOrDefault(menuName);            </span><span style="color: #0000ff;">if</span> (menuDefinition == <span style="color: #0000ff;">null</span><span style="color: #000000;">)            {                </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span> AbpException(<span style="color: #800000;">"</span><span style="color: #800000;">There is no menu with given name: </span><span style="color: #800000;">"</span> +<span style="color: #000000;"> menuName);            }<pre><code>        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; userMenu = &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; UserMenu(menuDefinition, _localizationContext);        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; FillUserMenuItems(user, menuDefinition.Items, userMenu.Items);        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; userMenu;    &#125;&lt;/span&gt;&lt;/pre&gt;</code></pre></div><p>第一句话获取menuDefinition是关键点，我们将menuDefinition修改为从数据库中获取，在AbpLearn.Application/Authorization/Menus下添加UserNavigationManager.cs</p><div class="cnblogs_code"><pre><span style="color: #0000ff;"><span style="color: #0000ff;">using Abp;using Abp.Application.Features;using Abp.Application.Navigation;using Abp.Authorization;using Abp.Dependency;using Abp.Localization;using Abp.MultiTenancy;using Abp.Runtime.Session;using AbpLearn.Authorization.Menus.Dto;using AbpLearn.Sessions;using System;using System.Collections.Generic;using System.Linq;using System.Text;using System.Threading.Tasks;<p>namespace AbpLearn.Authorization.Menus<br>{<br>    public class UserNavigationManager : IUserNavigationManager, ITransientDependency<br>    {<br>        public IAbpSession AbpSession { get; set; }</p><pre><code>    private readonly INavigationManager _navigationManager;    private readonly ILocalizationContext _localizationContext;    private readonly IIocResolver _iocResolver;    private readonly IMenusAppService _menuAppService;    private readonly ISessionAppService _sessionAppService;    public IDictionary&amp;lt;string, MenuDefinition&amp;gt; Menus &#123; get; private set; &#125;    public MenuDefinition MainMenu    &#123;        get &#123; return Menus[&quot;MainMenu&quot;]; &#125;    &#125;    public UserNavigationManager(        INavigationManager navigationManager,        ILocalizationContext localizationContext,        IMenusAppService menuAppService,        ISessionAppService sessionAppService,        IIocResolver iocResolver)    &#123;        _navigationManager = navigationManager;        _localizationContext = localizationContext;        _iocResolver = iocResolver;        AbpSession = NullAbpSession.Instance;        _menuAppService = menuAppService;        _sessionAppService = sessionAppService;    &#125;    public async Task&amp;lt;UserMenu&amp;gt; GetMenuAsync(string menuName, UserIdentifier user)    &#123;        var loginInfo = await _sessionAppService.GetCurrentLoginInformations();        Menus = new Dictionary&amp;lt;string, MenuDefinition&amp;gt;                &#123;                    &#123;&quot;MainMenu&quot;, new MenuDefinition(&quot;MainMenu&quot;, new LocalizableString(&quot;MainMenu&quot;, AbpConsts.LocalizationSourceName))&#125;                &#125;;        var lists = await _menuAppService.GetAllAsync(new MenusPagedResultRequestDto() &#123; ShowAll = true, TenantId = (loginInfo.Tenant == null ? 0 : loginInfo.Tenant.Id) &#125;);        var ParentMenu = lists.Items.Where(k =&amp;gt; k.IsActive).ToList().Where(x =&amp;gt; x.ParentId == 0).ToList();        if (ParentMenu.Any())        &#123;            ParentMenu.ForEach(g =&amp;gt;            &#123;                var menu = new MenuItemDefinition(                      g.LName,                      MenuL(g.MenuName),                      g.Icon,                      g.Url,                      false,                      g.Orders                      );                BuildSubMenu(menu, g.Id, lists.Items.Where(k =&amp;gt; k.IsActive).ToList());                MainMenu.AddItem(menu);            &#125;);        &#125;                var menuDefinition = MainMenu;        if (menuDefinition == null)        &#123;            throw new AbpException(&quot;There is no menu with given name: &quot; + menuName);        &#125;        var userMenu = new UserMenu();        userMenu.Name = menuDefinition.Name;        userMenu.DisplayName = menuDefinition.DisplayName.Localize(_localizationContext);        userMenu.CustomData = menuDefinition.CustomData;        userMenu.Items = new List&amp;lt;UserMenuItem&amp;gt;();        await FillUserMenuItems(user, menuDefinition.Items, userMenu.Items);        return userMenu;    &#125;    public async Task&amp;lt;IReadOnlyList&amp;lt;UserMenu&amp;gt;&amp;gt; GetMenusAsync(UserIdentifier user)    &#123;        var userMenus = new List&amp;lt;UserMenu&amp;gt;();        foreach (var menu in _navigationManager.Menus.Values)        &#123;            userMenus.Add(await GetMenuAsync(menu.Name, user));        &#125;        return userMenus;    &#125;    public void BuildSubMenu(MenuItemDefinition menu, int parentId, List&amp;lt;MenuDto&amp;gt; list)    &#123;        var nList = list.Where(x =&amp;gt; x.ParentId == parentId).ToList();        if (nList != null &amp;amp;&amp;amp; nList.Count &amp;gt; 0)        &#123;            nList.ForEach(g =&amp;gt;            &#123;                var subMenu = new MenuItemDefinition(                     g.PageName,                    MenuL(g.MenuName),                    g.Icon,                    g.Url,                    false,                  g.Orders                    );                menu.AddItem(subMenu);                BuildSubMenu(subMenu, g.Id, list);            &#125;);        &#125;    &#125;    private static ILocalizableString MenuL(string name)    &#123;        return new LocalizableString(name, AbpLearnConsts.LocalizationSourceName);    &#125;    private async Task&amp;lt;int&amp;gt; FillUserMenuItems(UserIdentifier user, IList&amp;lt;MenuItemDefinition&amp;gt; menuItemDefinitions, IList&amp;lt;UserMenuItem&amp;gt; userMenuItems)    &#123;        //TODO: Can be optimized by re-using FeatureDependencyContext.        var addedMenuItemCount = 0;        using (var scope = _iocResolver.CreateScope())        &#123;            var permissionDependencyContext = scope.Resolve&amp;lt;PermissionDependencyContext&amp;gt;();            permissionDependencyContext.User = user;            var featureDependencyContext = scope.Resolve&amp;lt;FeatureDependencyContext&amp;gt;();            featureDependencyContext.TenantId = user == null ? null : user.TenantId;            foreach (var menuItemDefinition in menuItemDefinitions)            &#123;                if (menuItemDefinition.RequiresAuthentication &amp;amp;&amp;amp; user == null)                &#123;                    continue;                &#125;                if (menuItemDefinition.PermissionDependency != null &amp;amp;&amp;amp;                    (user == null || !(await menuItemDefinition.PermissionDependency.IsSatisfiedAsync(permissionDependencyContext))))                &#123;                    continue;                &#125;                if (menuItemDefinition.FeatureDependency != null &amp;amp;&amp;amp;                    (AbpSession.MultiTenancySide == MultiTenancySides.Tenant || (user != null &amp;amp;&amp;amp; user.TenantId != null)) &amp;amp;&amp;amp;                    !(await menuItemDefinition.FeatureDependency.IsSatisfiedAsync(featureDependencyContext)))                &#123;                    continue;                &#125;                var userMenuItem = new UserMenuItem(menuItemDefinition, _localizationContext);                if (menuItemDefinition.IsLeaf || (await FillUserMenuItems(user, menuItemDefinition.Items, userMenuItem.Items)) &amp;gt; 0)                &#123;                    userMenuItems.Add(userMenuItem);                    ++addedMenuItemCount;                &#125;            &#125;        &#125;        return addedMenuItemCount;    &#125;&#125;</code></pre><p>}</span></span></pre></p><p><span style="color: #0000ff;">&nbsp;</span></p></div><p>然后在Mvc项目的Startup.cs/ConfigureServices下增加</p><div class="cnblogs_code"><pre>            services.AddScoped&lt;IUserNavigationManager, UserNavigationManager&gt;();</pre></div><p>因为在abp中菜单被做做成了模块，在程序初始化时模块添加进去，但是我们将菜单修改成了每次读取数据库加载，那么我们就不需要加载这个模块了<span style="font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12px;"><br /></span></p><p>在mvc项目的AbpLearnWebMvcModule.cs注释下面这句话</p><div class="cnblogs_code"><pre>            <span style="color: #008000;">//</span><span style="color: #008000;">Configuration.Navigation.Providers.Add&lt;AbpLearnNavigationProvider&gt;();</span></pre></div><p>将AbpLearnNavigationProvider.cs/SetNavigation方法的内容全部注释掉</p><p>预览一下mvc，用Host登录一下</p><p><img src="/cnblogs/13096427/789895-20200613155431331-1058862470.png" class="lazyload placeholder" data-srcset="/cnblogs/13096427/789895-20200613155431331-1058862470.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" loading="lazy" /></p><p>&nbsp;</p><p>&nbsp;用企业1登陆下，登录切换Host和Tenant，是在登录界面&nbsp;<span style="color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;">Current tenant:&nbsp;</span><span style="box-sizing: border-box; color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;">未选</span><span style="color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;">&nbsp;(</span><a style="box-sizing: border-box; color: #007bff; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;" data-toggle="modal" data-target="#TenantChangeModal">Change</a><span style="color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;">) 点击Change，在弹框中输入 E1（因为上面设置的企业1标识是E1），点击save，页面刷新后就变为了&nbsp;</span><span style="color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;">Current tenant:&nbsp;</span><span style="box-sizing: border-box; color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;" title="企业1"><span style="box-sizing: border-box; font-weight: bolder;">E1</span></span><span style="color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;">&nbsp;(</span><a style="box-sizing: border-box; color: #007bff; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;" data-toggle="modal" data-target="#TenantChangeModal">Change</a><span style="color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;">) ，输入账号密码登录</span></p><p>&nbsp;<img src="/cnblogs/13096427/789895-20200613164737035-1698740974.png" class="lazyload placeholder" data-srcset="/cnblogs/13096427/789895-20200613164737035-1698740974.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" loading="lazy" /></p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;OK，我们的动态菜单已经完成了</p><p>&nbsp;</p><h2>添加jstree</h2><p>&nbsp;当然，我的菜单使用的是table来显示，你也可以使用tree来，我找到了一个jstree，下面修改一下</p><p>MenusAppService.cs</p><div class="cnblogs_code"><pre>        <span style="color: #0000ff;">#region</span> 获取当前账户的菜单树        <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span>        <span style="color: #808080;">///</span><span style="color: #008000;"> 获取当前账户的菜单树        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span>        <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;param name="input"&gt;&lt;/param&gt;</span>        <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;returns&gt;&lt;/returns&gt;</span>        <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">async</span> Task&lt;<span style="color: #0000ff;">string</span>&gt;<span style="color: #000000;"> GetTreeAsync(MenusPagedResultRequestDto input)        {            </span><span style="color: #0000ff;">var</span> query = CreateFilteredQuery(<span style="color: #0000ff;">new</span> MenusPagedResultRequestDto()).Where(o =&gt; o.TenantId ==<span style="color: #000000;"> input.TenantId);<pre><code>        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; systemMenus = &lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; AsyncQueryableExecuter.ToListAsync(query);        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; childJObject = &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; JObject();        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; openJObject = &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; JObject();        openJObject.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;opened&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #0000ff;&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);        childJObject.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);        childJObject.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;text&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;根目录&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);        childJObject.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;icon&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);        childJObject.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;state&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;, openJObject);        childJObject.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;children&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, GetJArray(systemMenus, &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;));        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; childJObject.ToString();    &#125;    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;#region&lt;/span&gt; 获取目录Array    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; 获取目录Array    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;param name=&quot;systemMenus&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;param name=&quot;parentdId&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;returns&amp;gt;&amp;lt;/returns&amp;gt;&lt;/span&gt;    &lt;span style=&quot;color: #0000ff;&quot;&gt;private&lt;/span&gt; JArray GetJArray(List&amp;lt;AbpMenus&amp;gt; systemMenus, &lt;span style=&quot;color: #0000ff;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; parentdId)    &#123;        JArray jArray &lt;/span&gt;= &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; JArray();        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;foreach&lt;/span&gt; (&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; menu &lt;span style=&quot;color: #0000ff;&quot;&gt;in&lt;/span&gt; systemMenus.Where(o =&amp;gt; o.ParentId ==&lt;span style=&quot;color: #000000;&quot;&gt; parentdId))        &#123;            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; jObject = &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; JObject();            jObject.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;, menu.Id);            jObject.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;text&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;, menu.MenuName);            jObject.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;icon&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;, menu.Icon);            &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;jObject.Add(&quot;state&quot;, menu.Icon);&lt;/span&gt;            &lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (systemMenus.Any(o =&amp;gt; o.ParentId ==&lt;span style=&quot;color: #000000;&quot;&gt; menu.Id))            &#123;                jObject.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;children&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;, GetJArray(systemMenus, menu.Id));            &#125;            jArray.Add(jObject);        &#125;        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; jArray;    &#125;    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;#endregion&lt;/span&gt;    &lt;span style=&quot;color: #0000ff;&quot;&gt;#endregion&lt;/span&gt;&lt;/pre&gt;</code></pre></div><p>&nbsp;</p><p>&nbsp;前端Index.cshtml&nbsp;&nbsp;<span style="color: #800000; font-family: 'Courier New'; font-size: 12px;">jstree去</span><span style="color: #800000; font-family: 'Courier New';"><span style="font-size: 12px;">https://github.com/vakata/jstree/zipball/3.3.8下载，下载后在mvc项目的wwwroot文件夹下添加jstree文件夹，下载文件的src里面内容全部赋值到jstree文件夹</span></span></p><p>注释掉table标签</p><p>添加<span style="color: #800000; font-family: 'Courier New'; font-size: 12px;">jstree1</span></p><p>例如：</p><div class="cnblogs_code"><pre>@section styles{    &lt;link href="~/jstree/themes/default/style.css" rel="stylesheet" /&gt;}                     <br /><br />       &lt;div id=<span style="color: #800000;">"</span><span style="color: #800000;">jstree1</span><span style="color: #800000;">"</span> style=<span style="color: #800000;">"</span><span style="color: #800000;">width:100%;</span><span style="color: #800000;">"</span>&gt;&lt;/div&gt;<p>@section scripts<br>{<br>    &lt;environment names=”Development”&gt;<br>        &lt;script src=”~/view-resources/Views/Menus/Index.js” asp-append-version=”true”&gt;&lt;/script&gt;<br>    &lt;/environment&gt;</p><pre><code>&amp;lt;environment names=&quot;Staging,Production&quot;&amp;gt;    &amp;lt;script src=&quot;~/view-resources/Views/Menus/Index.min.js&quot; asp-append-version=&quot;true&quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;/environment&amp;gt;&amp;lt;script type=&quot;application/javascript&quot; src=&quot;~/jstree/jstree.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script type=&quot;application/javascript&quot; src=&quot;~/jstree/jstree.contextmenu.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script type=&quot;text/javascript&quot;&amp;gt;    $(function () &#123;        var _menuService = abp.services.app.menus;        l = abp.localization.getSource(&#39;A_b_p&#39;);        $(&#39;#jstree1&#39;).jstree(&#123;            &quot;core&quot;: &#123;                &quot;data&quot;: function (node, callback) &#123;                    var filter = $(&#39;#MenusSearchForm&#39;).serializeFormToObject(true);                    this, _menuService.getTree(filter).done(function (result) &#123;                        callback.call(this, JSON.parse(result));                    &#125;);                &#125;,                &quot;themes&quot;: &#123;                    &quot;variant&quot;: &quot;large&quot;,//加大                    &quot;ellipsis&quot;: true //文字多时省略                &#125;,                &quot;check_callback&quot;: true,            &#125;,            &quot;plugins&quot;: [&quot;contextmenu&quot;, &quot;wholerow&quot;, &quot;themes&quot;],//&quot;checkbox&quot;            &quot;contextmenu&quot;: &#123;                select_node: false,                show_at_node: true,                &quot;items&quot;: &#123;                    &quot;create&quot;: &#123;                        &quot;label&quot;: &quot;新增子菜单&quot;,                        &quot;action&quot;: function (obj) &#123;                            var inst = jQuery.jstree.reference(obj.reference);                            var clickedNode = inst.get_node(obj.reference);                            if (parseInt(clickedNode.original.id) &amp;gt;= 0) &#123;                                $(&quot;#ParentId&quot;).val(clickedNode.original.id);                                $(&quot;#MenuCreateModal&quot;).modal();                            &#125; else &#123;                                abp.notify.info(&quot;父节点获取出错&quot;);                            &#125;                        &#125;,                    &#125;,                    &quot;rename&quot;: &#123;                        &quot;label&quot;: &quot;修改&quot;,                        &quot;action&quot;: function (obj) &#123;                            var inst = jQuery.jstree.reference(obj.reference);                            var clickedNode = inst.get_node(obj.reference);                            if (parseInt(clickedNode.original.id) &amp;gt;= 0) &#123;                                abp.ajax(&#123;                                    url: abp.appPath + &#39;Menus/EditModal?menuId=&#39; + clickedNode.original.id,                                    type: &#39;POST&#39;,                                    dataType: &#39;html&#39;,                                    success: function (content) &#123;                                        $(&quot;#MenuEditModal&quot;).modal();                                        $(&#39;#MenuEditModal div.modal-content&#39;).html(content);                                    &#125;,                                    error: function (e) &#123; &#125;                                &#125;);                            &#125; else &#123;                                abp.notify.info(&quot;菜单获取出错&quot;);                            &#125;                        &#125;                    &#125;,                    &quot;delete&quot;: &#123;                        &quot;label&quot;: &quot;更改菜单状态&quot;,                        &quot;action&quot;: function (obj) &#123;                            var inst = jQuery.jstree.reference(obj.reference);                            var clickedNode = inst.get_node(obj.reference);                            abp.message.confirm(                                abp.utils.formatString(&quot;是否&quot; + (clickedNode.original.state.disabled?&quot;启用&quot;:&quot;禁用&quot;) + &quot;当前菜单：&quot; + clickedNode.original.text + &quot;?&quot;),                                null,                                (isConfirmed) =&amp;gt; &#123;                                    if (isConfirmed) &#123;                                        _menuService                                            .delete(&#123;                                                id: clickedNode.original.id                                            &#125;)                                            .done(() =&amp;gt; &#123;                                                abp.notify.info(l(&#39;SuccessfullyDeleted&#39;));                                                location.reload();                                            &#125;);                                    &#125;                                &#125;                            );                        &#125;,                    &#125;                &#125;            &#125;        &#125;).on(&#39;select_node.jstree&#39;, function (event, data) &#123;            console.log(data.node);        &#125;).on(&#39;changed.jstree&#39;, function (event, data) &#123;            console.log(&quot;-----------changed.jstree&quot;);            console.log(&quot;action:&quot; + data.action);            console.log(data.node);        &#125;);    &#125;);&amp;lt;/script&amp;gt;</code></pre><p>}<br></pre></p><p>&nbsp;</p></div><p>&nbsp;预览一下吧</p><p><img src="/cnblogs/13096427/789895-20200613175433971-1845076483.png" class="lazyload placeholder" data-srcset="/cnblogs/13096427/789895-20200613175433971-1845076483.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" loading="lazy" /></p><p>&nbsp;</p><p>&nbsp;</p><h2>github地址</h2><p>本文github：<a href="https://github.com/wangpengzong/AbpLearn">https://github.com/wangpengzong/AbpLearn</a></p><p>下一篇开始动态权限</p><h2 style="display: none;">&nbsp;吐槽区域（写的不好、不对，欢迎吐槽）</h2>]]></content>
      
      
      
        <tags>
            
            <tag> netcore </tag>
            
            <tag> abp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>.net core3.1 abp动态菜单和动态权限（思路）  （二）</title>
      <link href="/2020/06/12/cnblogs/13089690/"/>
      <url>/2020/06/12/cnblogs/13089690/</url>
      
        <content type="html"><![CDATA[<p>ps：本文需要先把abp的源码下载一份来下，跟着一起找实现，更容易懂</p><p>在abp中，对于权限和菜单使用静态来管理，菜单的加载是在登陆页面的地方（具体是怎么知道的，浏览器按F12，然后去sources中去找）</p><p><img src="/cnblogs/13089690/789895-20200610195839215-1000464738.png" class="lazyload placeholder" data-srcset="/cnblogs/13089690/789895-20200610195839215-1000464738.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" loading="lazy" /></p><p>这个/AbpScripts/GetScripts是获取需要初始化的script，源自AbpScriptsController，GetScripts方法包括</p><div class="cnblogs_code"><pre>页面加载时的链接是：http://localhost:62114/AbpScripts/GetScripts?v=637274153555501055<br /><br />_multiTenancyScriptManager  //当前租户初始化  对应报文的 abp.multiTenancy<br /><br />_sessionScriptManager //当前session初始化 对应报文的 abp.session</pre><pre><em>_localizationScriptManager  //本地化的初始化 </em>对应报文的 abp.localization</pre><pre><em>_featuresScriptManager  //</em>对应报文的 abp.features</pre><pre><em>_authorizationScriptManager  //权限初始化  </em>对应报文的 abp.auth</pre><pre><em>_navigationScriptManager  //导航菜单初始化  </em>对应报文的 abp.nav</pre><pre><em>_settingScriptManager  //设置初始化  </em>对应报文的 abp.setting</pre><pre><em>_timingScriptManager  //</em>对应报文的 abp.clock</pre><pre><em>_customConfigScriptManager  //</em>对应报文的 abp.custom</pre></div><p>&nbsp;</p><p><img src="/cnblogs/13089690/789895-20200610200454121-120495896.png" class="lazyload placeholder" data-srcset="/cnblogs/13089690/789895-20200610200454121-120495896.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" loading="lazy" /></p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;好了，现在基本算是找到菜单和权限js获取的地方了，一般系统里面，权限是依赖于菜单和菜单按钮的，所以我们先不管权限，先把菜单做成动态加载的</p><p>从await _navigationScriptManager.GetScriptAsync()开始，一路F12，大概流程是</p><div class="cnblogs_code"><pre>(接口)INavigationScriptManager=&gt;(接口实现)NavigationScriptManager=&gt;(方法)GetScriptAsync=&gt;(调用)<span style="color: #0000ff;">await</span> _userNavigationManager.GetMenusAsync=&gt;</pre><pre>(接口)IUserNavigationManager=&gt;(接口实现)UserNavigationManager=&gt;(方法)GetMenuAsync=&gt;(调用)navigationManager.Menus=&gt;</pre><pre>(接口)INavigationManager=&gt;(接口实现)NavigationManager=&gt;(非静态构造函数为Menus属性赋值)NavigationManager</pre></div><p>&nbsp;到这里之后基本就到底了，我们看看NavigationManager的内容</p><div class="cnblogs_code"><pre>    <span style="color: #0000ff;">internal</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> NavigationManager : INavigationManager, ISingletonDependency    {        </span><span style="color: #0000ff;">public</span> IDictionary&lt;<span style="color: #0000ff;">string</span>, MenuDefinition&gt; Menus { <span style="color: #0000ff;">get</span>; <span style="color: #0000ff;">private</span> <span style="color: #0000ff;">set</span><span style="color: #000000;">; }  //属性<pre><code>    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; MenuDefinition MainMenu //属性    &#123;        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;get&lt;/span&gt; &#123; &lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt; Menus[&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;MainMenu&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;]; &#125;    &#125;    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;readonly&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; IIocResolver _iocResolver;      &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;readonly&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; INavigationConfiguration _configuration;    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; NavigationManager(IIocResolver iocResolver, INavigationConfiguration configuration) //非静态构造函数    &#123;        _iocResolver &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; iocResolver;        _configuration &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; configuration;        Menus &lt;/span&gt;= &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; Dictionary&amp;lt;&lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt;, MenuDefinition&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;                &#123;                    &#123;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;MainMenu&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; MenuDefinition(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;MainMenu&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; LocalizableString(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;MainMenu&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;, AbpConsts.LocalizationSourceName))&#125;                &#125;;    &#125;    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; Initialize()  //初始化方法    &#123;        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; context = &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; NavigationProviderContext(&lt;span style=&quot;color: #0000ff;&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;foreach&lt;/span&gt; (&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; providerType &lt;span style=&quot;color: #0000ff;&quot;&gt;in&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _configuration.Providers)        &#123;            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;using&lt;/span&gt; (&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; provider = _iocResolver.ResolveAsDisposable&amp;lt;NavigationProvider&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;(providerType))            &#123;                provider.Object.SetNavigation(context);  //中式英语翻译一下，应该是设置导航            &#125;        &#125;    &#125;&#125;&lt;/span&gt;&lt;/pre&gt;</code></pre></div><p>这个类里面就只有属性、需要注入的接口声明、非静态构造函数、初始化方法，我们到这里需要关注的是Menus这个属性，这个属性似乎将会包含我们需要生成的菜单内容</p><div class="cnblogs_code"><pre>Menus = <span style="color: #0000ff;">new</span> Dictionary&lt;<span style="color: #0000ff;">string</span>, MenuDefinition&gt;<span style="color: #000000;">                    {                        {</span><span style="color: #800000;">"</span><span style="color: #800000;">MainMenu</span><span style="color: #800000;">"</span>, <span style="color: #0000ff;">new</span> MenuDefinition(<span style="color: #800000;">"</span><span style="color: #800000;">MainMenu</span><span style="color: #800000;">"</span>, <span style="color: #ff0000;">new LocalizableString("MainMenu"</span><span style="color: #000000;"><span style="color: #ff0000;">, AbpConsts.LocalizationSourceName)</span>)}                    };</span></pre></div><p>这里是对Menus的赋值，实例化了一个Dictionary，前面的不用看，主要是看标红的这句话，从new LocalizableString("MainMenu", AbpConsts.LocalizationSourceName)里面获取到值</p><p>好了现在基本找到地方了，我们不知道LocalizableString是什么意思，但是我们可以百度一波</p><div class="cnblogs_code"><pre>ILocalizableString/LocalizableString:封装需要被本地化的string的信息，并提供Localize方法（调用ILocalizationManager的GetString方法）返回本地化的string. SourceName指定其从那个本地化资源读取本地化文本。<br /><br /></pre><p>&nbsp; LocalizableString("Questions", "")&nbsp;如果本地找不到资源,会报300</p></div><p>大概的意思是通过new LocalizableString，我们可以在本地化来源为AbpConsts.LocalizationSourceName的string里面寻找到Key为MainMenu的value（理解不对请喷）</p><p>&nbsp;</p><p>现在需要去找到那个地方对MainMenu进行了本地化操作，一般来说这个事情都是在程序加载的时候进行的，先对MainMenu进行读取，保存到本地，然后在<em>_navigationScriptManager读取，传输给前台</em></p><p><em>似乎不好找了，但是我们发现有一个类型MenuDefinition，F12一下，可以发现宝藏</em></p><div class="cnblogs_code"><pre><span style="color: #0000ff;">namespace</span><span style="color: #000000;"> Abp.Application.Navigation{    </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span>    <span style="color: #808080;">///</span><span style="color: #008000;"> Represents a navigation menu for an application.  //</span>表示应用程序的导航菜单</pre><pre><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span>    <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> MenuDefinition : IHasMenuItemDefinitions    {        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span>        <span style="color: #808080;">///</span><span style="color: #008000;"> Unique name of the menu in the application. Required.  //应用程序中菜单的唯一名称。&nbsp;必须        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span>        <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">string</span> Name { <span style="color: #0000ff;">get</span>; <span style="color: #0000ff;">private</span> <span style="color: #0000ff;">set</span><span style="color: #000000;">; }<pre><code>    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Display name of the menu. Required.  //&lt;/span&gt;菜单显示名称 必须&lt;/pre&gt;</code></pre><pre><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span>        <span style="color: #0000ff;">public</span> ILocalizableString DisplayName { <span style="color: #0000ff;">get</span>; <span style="color: #0000ff;">set</span><span style="color: #000000;">; }        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span>        <span style="color: #808080;">///</span><span style="color: #008000;"> Can be used to store a custom object related to this menu. Optional.  //</span>可用于存储与此菜单相关的自定义对象</pre><pre><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span>        <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">object</span> CustomData { <span style="color: #0000ff;">get</span>; <span style="color: #0000ff;">set</span><span style="color: #000000;">; }        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span>        <span style="color: #808080;">///</span><span style="color: #008000;"> Menu items (first level).   //</span>菜单项（第一级）</pre><pre><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span>        <span style="color: #0000ff;">public</span> List&lt;MenuItemDefinition&gt; Items { <span style="color: #0000ff;">get</span>; <span style="color: #0000ff;">set</span><span style="color: #000000;">; }        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span>        <span style="color: #808080;">///</span><span style="color: #008000;"> Creates a new </span><span style="color: #808080;">&lt;see cref="MenuDefinition"/&gt;</span><span style="color: #008000;"> object.        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span>        <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;param name="name"&gt;</span><span style="color: #008000;">Unique name of the menu</span><span style="color: #808080;">&lt;/param&gt;</span>        <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;param name="displayName"&gt;</span><span style="color: #008000;">Display name of the menu</span><span style="color: #808080;">&lt;/param&gt;</span>        <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;param name="customData"&gt;</span><span style="color: #008000;">Can be used to store a custom object related to this menu.</span><span style="color: #808080;">&lt;/param&gt;</span>        <span style="color: #0000ff;">public</span> MenuDefinition(<span style="color: #0000ff;">string</span> name, ILocalizableString displayName, <span style="color: #0000ff;">object</span> customData = <span style="color: #0000ff;">null</span><span style="color: #000000;">)        {            </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">string</span><span style="color: #000000;">.IsNullOrEmpty(name))            {                </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span> ArgumentNullException(<span style="color: #800000;">"</span><span style="color: #800000;">name</span><span style="color: #800000;">"</span>, <span style="color: #800000;">"</span><span style="color: #800000;">Menu name can not be empty or null.</span><span style="color: #800000;">"</span><span style="color: #000000;">);            }            </span><span style="color: #0000ff;">if</span> (displayName == <span style="color: #0000ff;">null</span><span style="color: #000000;">)            {                </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span> ArgumentNullException(<span style="color: #800000;">"</span><span style="color: #800000;">displayName</span><span style="color: #800000;">"</span>, <span style="color: #800000;">"</span><span style="color: #800000;">Display name of the menu can not be null.</span><span style="color: #800000;">"</span><span style="color: #000000;">);            }            Name </span>=<span style="color: #000000;"> name;            DisplayName </span>=<span style="color: #000000;"> displayName;            CustomData </span>=<span style="color: #000000;"> customData;            Items </span>= <span style="color: #0000ff;">new</span> List&lt;MenuItemDefinition&gt;<span style="color: #000000;">();        }        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span>        <span style="color: #808080;">///</span><span style="color: #008000;"> Adds a </span><span style="color: #808080;">&lt;see cref="MenuItemDefinition"/&gt;</span><span style="color: #008000;"> to </span><span style="color: #808080;">&lt;see cref="Items"/&gt;</span><span style="color: #008000;">.        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span>        <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;param name="menuItem"&gt;&lt;see cref="MenuItemDefinition"/&gt;</span><span style="color: #008000;"> to be added</span><span style="color: #808080;">&lt;/param&gt;</span>        <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;returns&gt;</span><span style="color: #008000;">This </span><span style="color: #808080;">&lt;see cref="MenuDefinition"/&gt;</span><span style="color: #008000;"> object</span><span style="color: #808080;">&lt;/returns&gt;</span>        <span style="color: #0000ff;">public</span><span style="color: #000000;"> MenuDefinition AddItem(MenuItemDefinition menuItem)        {            Items.Add(menuItem);            </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">this</span><span style="color: #000000;">;        }        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span>        <span style="color: #808080;">///</span><span style="color: #008000;"> Remove menu item with given name        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span>        <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;param name="name"&gt;&lt;/param&gt;</span>        <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> RemoveItem(<span style="color: #0000ff;">string</span><span style="color: #000000;"> name)        {            Items.RemoveAll(m </span>=&gt; m.Name ==<span style="color: #000000;"> name);        }    }}</span></pre></div><p>找到了菜单的类型了，那么我们去找保存的地方就好找了，我们其实可以根据AddItem这个方法去找，去查看哪个地方引用了</p><p>AddItem方法添加的是MenuItemDefinition类型的变量，那我们现在退出abp源码，去我们的AbpLearn项目中去全局搜索一下</p><p><img src="/cnblogs/13089690/789895-20200610220532137-1721821016.png" class="lazyload placeholder" data-srcset="/cnblogs/13089690/789895-20200610220532137-1721821016.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" loading="lazy" /></p><p>&nbsp;</p><p>&nbsp;</p><p>看来是同一个AbpLearnNavigationProvider类里面，双击过去看一下</p><p>&nbsp;</p><div class="cnblogs_code"><pre>    <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span>    <span style="color: #808080;">///</span><span style="color: #008000;"> This class defines menus for the application.    </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span>    <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> AbpLearnNavigationProvider : NavigationProvider    {        </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">override</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> SetNavigation(INavigationProviderContext context)        {            context.Manager.MainMenu                .AddItem(                    </span><span style="color: #0000ff;">new</span><span style="color: #000000;"> MenuItemDefinition(                        PageNames.Home,                        L(</span><span style="color: #800000;">"</span><span style="color: #800000;">HomePage</span><span style="color: #800000;">"</span><span style="color: #000000;">),                        url: </span><span style="color: #800000;">""</span><span style="color: #000000;">,                        icon: </span><span style="color: #800000;">"</span><span style="color: #800000;">fas fa-home</span><span style="color: #800000;">"</span><span style="color: #000000;">,                        requiresAuthentication: </span><span style="color: #0000ff;">true</span><span style="color: #000000;">                    )                ).AddItem(                    </span><span style="color: #0000ff;">new</span><span style="color: #000000;"> MenuItemDefinition(                        PageNames.Tenants,                        L(</span><span style="color: #800000;">"</span><span style="color: #800000;">Tenants</span><span style="color: #800000;">"</span><span style="color: #000000;">),                        url: </span><span style="color: #800000;">"</span><span style="color: #800000;">Tenants</span><span style="color: #800000;">"</span><span style="color: #000000;">,                        icon: </span><span style="color: #800000;">"</span><span style="color: #800000;">fas fa-building</span><span style="color: #800000;">"</span><span style="color: #000000;">,                        permissionDependency: </span><span style="color: #0000ff;">new</span><span style="color: #000000;"> SimplePermissionDependency(PermissionNames.Pages_Tenants)                    )                ).AddItem(                    </span><span style="color: #0000ff;">new</span><span style="color: #000000;"> MenuItemDefinition(                        PageNames.Users,                        L(</span><span style="color: #800000;">"</span><span style="color: #800000;">Users</span><span style="color: #800000;">"</span><span style="color: #000000;">),                        url: </span><span style="color: #800000;">"</span><span style="color: #800000;">Users</span><span style="color: #800000;">"</span><span style="color: #000000;">,                        icon: </span><span style="color: #800000;">"</span><span style="color: #800000;">fas fa-users</span><span style="color: #800000;">"</span><span style="color: #000000;">,                        permissionDependency: </span><span style="color: #0000ff;">new</span><span style="color: #000000;"> SimplePermissionDependency(PermissionNames.Pages_Users)                    )                ).AddItem(                    </span><span style="color: #0000ff;">new</span><span style="color: #000000;"> MenuItemDefinition(                        PageNames.Roles,                        L(</span><span style="color: #800000;">"</span><span style="color: #800000;">Roles</span><span style="color: #800000;">"</span><span style="color: #000000;">),                        url: </span><span style="color: #800000;">"</span><span style="color: #800000;">Roles</span><span style="color: #800000;">"</span><span style="color: #000000;">,                        icon: </span><span style="color: #800000;">"</span><span style="color: #800000;">fas fa-theater-masks</span><span style="color: #800000;">"</span><span style="color: #000000;">,                        permissionDependency: </span><span style="color: #0000ff;">new</span><span style="color: #000000;"> SimplePermissionDependency(PermissionNames.Pages_Roles)                            )                )                .AddItem(                    </span><span style="color: #0000ff;">new</span><span style="color: #000000;"> MenuItemDefinition(                        PageNames.About,                        L(</span><span style="color: #800000;">"</span><span style="color: #800000;">About</span><span style="color: #800000;">"</span><span style="color: #000000;">),                        url: </span><span style="color: #800000;">"</span><span style="color: #800000;">About</span><span style="color: #800000;">"</span><span style="color: #000000;">,                        icon: </span><span style="color: #800000;">"</span><span style="color: #800000;">fas fa-info-circle</span><span style="color: #800000;">"</span><span style="color: #000000;">                    )                ).AddItem( </span><span style="color: #008000;">//</span><span style="color: #008000;"> Menu items below is just for demonstration!</span>                    <span style="color: #0000ff;">new</span><span style="color: #000000;"> MenuItemDefinition(                        </span><span style="color: #800000;">"</span><span style="color: #800000;">MultiLevelMenu</span><span style="color: #800000;">"</span><span style="color: #000000;">,                        L(</span><span style="color: #800000;">"</span><span style="color: #800000;">MultiLevelMenu</span><span style="color: #800000;">"</span><span style="color: #000000;">),                        icon: </span><span style="color: #800000;">"</span><span style="color: #800000;">fas fa-circle</span><span style="color: #800000;">"</span><span style="color: #000000;">                    ).AddItem(                        </span><span style="color: #0000ff;">new</span><span style="color: #000000;"> MenuItemDefinition(                            </span><span style="color: #800000;">"</span><span style="color: #800000;">AspNetBoilerplate</span><span style="color: #800000;">"</span><span style="color: #000000;">,                            </span><span style="color: #0000ff;">new</span> FixedLocalizableString(<span style="color: #800000;">"</span><span style="color: #800000;">ASP.NET Boilerplate</span><span style="color: #800000;">"</span><span style="color: #000000;">),                            icon: </span><span style="color: #800000;">"</span><span style="color: #800000;">far fa-circle</span><span style="color: #800000;">"</span><span style="color: #000000;">                        ).AddItem(                            </span><span style="color: #0000ff;">new</span><span style="color: #000000;"> MenuItemDefinition(                                </span><span style="color: #800000;">"</span><span style="color: #800000;">AspNetBoilerplateHome</span><span style="color: #800000;">"</span><span style="color: #000000;">,                                </span><span style="color: #0000ff;">new</span> FixedLocalizableString(<span style="color: #800000;">"</span><span style="color: #800000;">Home</span><span style="color: #800000;">"</span><span style="color: #000000;">),                                url: </span><span style="color: #800000;">"</span><span style="color: #800000;">https://aspnetboilerplate.com?ref=abptmpl</span><span style="color: #800000;">"</span><span style="color: #000000;">,                                icon: </span><span style="color: #800000;">"</span><span style="color: #800000;">far fa-dot-circle</span><span style="color: #800000;">"</span><span style="color: #000000;">                            )                        ).AddItem(                            </span><span style="color: #0000ff;">new</span><span style="color: #000000;"> MenuItemDefinition(                                </span><span style="color: #800000;">"</span><span style="color: #800000;">AspNetBoilerplateTemplates</span><span style="color: #800000;">"</span><span style="color: #000000;">,                                </span><span style="color: #0000ff;">new</span> FixedLocalizableString(<span style="color: #800000;">"</span><span style="color: #800000;">Templates</span><span style="color: #800000;">"</span><span style="color: #000000;">),                                url: </span><span style="color: #800000;">"</span><span style="color: #800000;">https://aspnetboilerplate.com/Templates?ref=abptmpl</span><span style="color: #800000;">"</span><span style="color: #000000;">,                                icon: </span><span style="color: #800000;">"</span><span style="color: #800000;">far fa-dot-circle</span><span style="color: #800000;">"</span><span style="color: #000000;">                            )                        ).AddItem(                            </span><span style="color: #0000ff;">new</span><span style="color: #000000;"> MenuItemDefinition(                                </span><span style="color: #800000;">"</span><span style="color: #800000;">AspNetBoilerplateSamples</span><span style="color: #800000;">"</span><span style="color: #000000;">,                                </span><span style="color: #0000ff;">new</span> FixedLocalizableString(<span style="color: #800000;">"</span><span style="color: #800000;">Samples</span><span style="color: #800000;">"</span><span style="color: #000000;">),                                url: </span><span style="color: #800000;">"</span><span style="color: #800000;">https://aspnetboilerplate.com/Samples?ref=abptmpl</span><span style="color: #800000;">"</span><span style="color: #000000;">,                                icon: </span><span style="color: #800000;">"</span><span style="color: #800000;">far fa-dot-circle</span><span style="color: #800000;">"</span><span style="color: #000000;">                            )                        ).AddItem(                            </span><span style="color: #0000ff;">new</span><span style="color: #000000;"> MenuItemDefinition(                                </span><span style="color: #800000;">"</span><span style="color: #800000;">AspNetBoilerplateDocuments</span><span style="color: #800000;">"</span><span style="color: #000000;">,                                </span><span style="color: #0000ff;">new</span> FixedLocalizableString(<span style="color: #800000;">"</span><span style="color: #800000;">Documents</span><span style="color: #800000;">"</span><span style="color: #000000;">),                                url: </span><span style="color: #800000;">"</span><span style="color: #800000;">https://aspnetboilerplate.com/Pages/Documents?ref=abptmpl</span><span style="color: #800000;">"</span><span style="color: #000000;">,                                icon: </span><span style="color: #800000;">"</span><span style="color: #800000;">far fa-dot-circle</span><span style="color: #800000;">"</span><span style="color: #000000;">                            )                        )                    ).AddItem(                        </span><span style="color: #0000ff;">new</span><span style="color: #000000;"> MenuItemDefinition(                            </span><span style="color: #800000;">"</span><span style="color: #800000;">AspNetZero</span><span style="color: #800000;">"</span><span style="color: #000000;">,                            </span><span style="color: #0000ff;">new</span> FixedLocalizableString(<span style="color: #800000;">"</span><span style="color: #800000;">ASP.NET Zero</span><span style="color: #800000;">"</span><span style="color: #000000;">),                            icon: </span><span style="color: #800000;">"</span><span style="color: #800000;">far fa-circle</span><span style="color: #800000;">"</span><span style="color: #000000;">                        ).AddItem(                            </span><span style="color: #0000ff;">new</span><span style="color: #000000;"> MenuItemDefinition(                                </span><span style="color: #800000;">"</span><span style="color: #800000;">AspNetZeroHome</span><span style="color: #800000;">"</span><span style="color: #000000;">,                                </span><span style="color: #0000ff;">new</span> FixedLocalizableString(<span style="color: #800000;">"</span><span style="color: #800000;">Home</span><span style="color: #800000;">"</span><span style="color: #000000;">),                                url: </span><span style="color: #800000;">"</span><span style="color: #800000;">https://aspnetzero.com?ref=abptmpl</span><span style="color: #800000;">"</span><span style="color: #000000;">,                                icon: </span><span style="color: #800000;">"</span><span style="color: #800000;">far fa-dot-circle</span><span style="color: #800000;">"</span><span style="color: #000000;">                            )                        ).AddItem(                            </span><span style="color: #0000ff;">new</span><span style="color: #000000;"> MenuItemDefinition(                                </span><span style="color: #800000;">"</span><span style="color: #800000;">AspNetZeroFeatures</span><span style="color: #800000;">"</span><span style="color: #000000;">,                                </span><span style="color: #0000ff;">new</span> FixedLocalizableString(<span style="color: #800000;">"</span><span style="color: #800000;">Features</span><span style="color: #800000;">"</span><span style="color: #000000;">),                                url: </span><span style="color: #800000;">"</span><span style="color: #800000;">https://aspnetzero.com/Features?ref=abptmpl</span><span style="color: #800000;">"</span><span style="color: #000000;">,                                icon: </span><span style="color: #800000;">"</span><span style="color: #800000;">far fa-dot-circle</span><span style="color: #800000;">"</span><span style="color: #000000;">                            )                        ).AddItem(                            </span><span style="color: #0000ff;">new</span><span style="color: #000000;"> MenuItemDefinition(                                </span><span style="color: #800000;">"</span><span style="color: #800000;">AspNetZeroPricing</span><span style="color: #800000;">"</span><span style="color: #000000;">,                                </span><span style="color: #0000ff;">new</span> FixedLocalizableString(<span style="color: #800000;">"</span><span style="color: #800000;">Pricing</span><span style="color: #800000;">"</span><span style="color: #000000;">),                                url: </span><span style="color: #800000;">"</span><span style="color: #800000;">https://aspnetzero.com/Pricing?ref=abptmpl#pricing</span><span style="color: #800000;">"</span><span style="color: #000000;">,                                icon: </span><span style="color: #800000;">"</span><span style="color: #800000;">far fa-dot-circle</span><span style="color: #800000;">"</span><span style="color: #000000;">                            )                        ).AddItem(                            </span><span style="color: #0000ff;">new</span><span style="color: #000000;"> MenuItemDefinition(                                </span><span style="color: #800000;">"</span><span style="color: #800000;">AspNetZeroFaq</span><span style="color: #800000;">"</span><span style="color: #000000;">,                                </span><span style="color: #0000ff;">new</span> FixedLocalizableString(<span style="color: #800000;">"</span><span style="color: #800000;">Faq</span><span style="color: #800000;">"</span><span style="color: #000000;">),                                url: </span><span style="color: #800000;">"</span><span style="color: #800000;">https://aspnetzero.com/Faq?ref=abptmpl</span><span style="color: #800000;">"</span><span style="color: #000000;">,                                icon: </span><span style="color: #800000;">"</span><span style="color: #800000;">far fa-dot-circle</span><span style="color: #800000;">"</span><span style="color: #000000;">                            )                        ).AddItem(                            </span><span style="color: #0000ff;">new</span><span style="color: #000000;"> MenuItemDefinition(                                </span><span style="color: #800000;">"</span><span style="color: #800000;">AspNetZeroDocuments</span><span style="color: #800000;">"</span><span style="color: #000000;">,                                </span><span style="color: #0000ff;">new</span> FixedLocalizableString(<span style="color: #800000;">"</span><span style="color: #800000;">Documents</span><span style="color: #800000;">"</span><span style="color: #000000;">),                                url: </span><span style="color: #800000;">"</span><span style="color: #800000;">https://aspnetzero.com/Documents?ref=abptmpl</span><span style="color: #800000;">"</span><span style="color: #000000;">,                                icon: </span><span style="color: #800000;">"</span><span style="color: #800000;">far fa-dot-circle</span><span style="color: #800000;">"</span><span style="color: #000000;">                            )                        )                    )                );        }<pre><code>    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;static&lt;/span&gt; ILocalizableString L(&lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; name)    &#123;        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; LocalizableString(name, AbpLearnConsts.LocalizationSourceName);    &#125;&#125;&lt;/span&gt;&lt;/pre&gt;</code></pre></div><p>好了，现在我们找到菜单定义的地方了，那么我们如何去做动态菜单哪？</p><p>&nbsp;</p><p>首先我们想一下需要什么样的动态菜单？</p><p>1.从数据库加载，不从数据库加载怎么叫动态</p><p>2.可以根据不同Host（管理者）和Tenant（租户）加载不同的菜单，不可能管理者和租户看到的菜单全是一个样子的吧！</p><p>3.可以根据不同的角色或者用户加载不同的菜单（这个就牵扯到权限了，比如谁可以看到什么，不可以看到什么）</p><p>4.权限、按钮最好和菜单相绑定，这样便于控制</p><p>......</p><p>&nbsp;</p><p>根据以上几点，我们可以确定</p><p>1.必须要在用户登录之后加载出来的菜单才能符合条件</p><p>2.菜单需要建一个表（因为abp默认没有单独的菜单表），来进行存放</p><p>3.字段需要包含：菜单名，菜单与权限对应的名称（用于动态权限），菜单对应的Url，Icon，级联父Id，是否启用，排序，租户Id</p><p>4.需要对菜单进行编辑时，因为牵扯到多租户，我们需要对多租户定义一个标准的菜单，在添加租户时，自动将标准菜单复制保存一份到新租户中，所以我们需要对于菜单的进行区分，一般来说Host对应的数据行TenantId（int）都为null，我们可以将标准菜单的TenantId标为-1，已经分配保存的菜单TenantId为当前租户Id，这样便于区分和查询</p><p>&nbsp;</p><p>好了，让我们开始写动态菜单吧</p>]]></content>
      
      
      
        <tags>
            
            <tag> netcore </tag>
            
            <tag> abp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>.net core3.1 abp学习开始（一）</title>
      <link href="/2020/06/09/cnblogs/13081247/"/>
      <url>/2020/06/09/cnblogs/13081247/</url>
      
        <content type="html"><![CDATA[<p>vs版本 2019，链接数据库使用Navicat，数据库MySql</p><p>&nbsp;</p><p>abp的官网：<a href="https://aspnetboilerplate.com/">https://aspnetboilerplate.com/</a>，我们去Download这里下载一个模板，需要选好Target Version、输入项目名字，我这里使用abp的mvc版本、项目名为AbpLearn下载一份</p><p>当前下载下来是5.6版本</p><p><img src="/cnblogs/13081247/789895-20200609201430814-1116404017.png" class="lazyload placeholder" data-srcset="/cnblogs/13081247/789895-20200609201430814-1116404017.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" loading="lazy" /></p><p>&nbsp;解压后</p><p><img src="/cnblogs/13081247/789895-20200609201521232-1545417003.png" class="lazyload placeholder" data-srcset="/cnblogs/13081247/789895-20200609201521232-1545417003.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" loading="lazy" /></p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;abp的sln在aspnet-core文件夹下</p><p>打开文件夹，双击打开sln，第一次加载的时候可能有点慢，请耐心等待nuget包自动加载完毕</p><p><img src="/cnblogs/13081247/789895-20200609201648005-480300466.png" class="lazyload placeholder" data-srcset="/cnblogs/13081247/789895-20200609201648005-480300466.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" loading="lazy" /></p><div class="cnblogs_code"><pre>AbpLearn.Application：应用层，主要包括定义和前台进行交互的接口层，调用领域层中对应的接口，默认包括:验证、配置、多租户、角色、用户、Session的一些操作，是整个Web API对外部提供调用的核心接口</pre><pre>AbpLearn.Core：领域层，对现实业务进行抽象，通过调用ORM层的提供的接口来对当前的User、Role、Tenant等一系列的管理操作，并对外提供统一的Manager接口，从而供应用层进行相关的操作，另外还提供了诸如验证、配置、Feature、本地化等等一些列基础接口。<br /><br />AbpLearn.EntityFrameworkCore：ORM层，该层顾名思义是使用EntityFrameworkCore来和SQL Server数据库进行交互的核心逻辑，包括一些常规的各种CRUD操作，以及通过Model First模式创建数据库，为数据库提供种子数据等一系列操作。</pre><pre>AbpLearn.Migrator：提供基于控制台的数据库迁移工具</pre><pre>AbpLearn<em id="__mceDel">.Web.Core：这个部分主要是另外一种WebAPI的访问方式，和应用层这种直接的映射的方式不同，在当前项目中为了更好地体现REST 风格的API ，我们会在我们的类中继承自AbpController这个基类，然后在当前的Controller类中通过[Route("api/[controller]/[action]")]这种方式来进行映射关系，这种风格更加符合REST的风格要求，在后面实际的项目中也会尽可能的采用这种方式。</em></pre><pre><em id="__mceDel">AbpLearn</em><em id="__mceDel">.Web.Host：Swagger UI 集成Web API文档工具</em></pre><p>　<em id="__mceDel"><em id="__mceDel">AbpLearn</em><em id="__mceDel">.Web.Mvc：标准的Asp.Net Core MVC 项目，完整的前后端实现，这一部分将在后续进行一系列的分析和解读。</em></em></p><pre><em id="__mceDel">引用<a href="https://www.cnblogs.com/seekdream/p/9249568.html">https://www.cnblogs.com/seekdream/p/9249568.html</a></em></pre></div><p>&nbsp;</p><p>abp默认使用EF作为orm，想要添加数据库的表，需要先添加数据库和项目中的连接字符串，然后用update-database来生成，先不纠结update-database，按照流程来，在数据库服务器上添加一个空库，比如abplearn，</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;接下来就是修改数据库链接字符串了，</p><p>全局搜索&ldquo;ConnectionStrings&rdquo;，</p><p><img src="/cnblogs/13081247/789895-20200609213336194-886524168.png" class="lazyload placeholder" data-srcset="/cnblogs/13081247/789895-20200609213336194-886524168.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" loading="lazy" /></p><p>找到有类似</p><div class="cnblogs_code"><pre><span style="color: #800000;">"</span><span style="color: #800000;">Default</span><span style="color: #800000;">"</span>: <span style="color: #800000;">"</span><span style="color: #800000;">Server=localhost; Database=AbpLearnDb; Trusted_Connection=True;</span><span style="color: #800000;">"</span></pre></div><p>的地方，将ConnectionStrings的Server修改正确（数据库链接字符串怎么写请自行百度）</p><p>我这里选用mysql作为数据库</p><div class="cnblogs_code"><pre>链接字符串为： <span style="color: #800000;">"</span><span style="color: #800000;">Default</span><span style="color: #800000;">"</span>: <span style="color: #800000;">"</span><span style="color: #800000;">server=192.168.149.28;port=3306;database=abplearn;user=root;password=testpassword;CharSet=utf8;</span><span style="color: #800000;">"<br /></span></pre></div><p>数据库链接字符串设置好</p><div class="cnblogs_code"><pre>如果是mysql，需要将*.EntityFrameworkCore中原本的sqlserver这个nuget包卸载<br />然后搜索添加Pomelo.EntityFrameworkCore.MySql包，再将*.EntityFrameworkCore项目/EntityFrameworkCore/AbpLearnDbContextConfigurer.cs中的builder.UseSqlServer修改为builder.UseMySql</pre></div><p>将Migrations下面的文件全部删除掉，将*.EntityFrameworkCore设置为启动项目，然后在vs的头部找到 视图/其他窗口/程序包管理控制台，打开这个控制台大概出出现下图</p><p><img src="/cnblogs/13081247/789895-20200609212654759-830200327.png" class="lazyload placeholder" data-srcset="/cnblogs/13081247/789895-20200609212654759-830200327.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" loading="lazy" /></p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;默认项目最好也设置为*.EntityFrameworkCore，在PM&gt;后依次执行</p><div class="cnblogs_code"><pre>Add-Migration [name] //这个name随便命名即可</pre></div><p>如我执行Add-Migration newinit后，在Migrations文件夹下生成了</p><p><img src="/cnblogs/13081247/789895-20200609212852714-221170698.png" class="lazyload placeholder" data-srcset="/cnblogs/13081247/789895-20200609212852714-221170698.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" loading="lazy" /></p><p>&nbsp;</p><p>&nbsp;其中20200608140416_newinit（文件名是根据生成时间的，下划线前面会不同）文件大概是这样（如果用到的是mysql，但是生成的newinit文件中是SqlServer:ValueGenerationStrategy和SqlServerValueGenerationStrategy，则需要手动批量替换下为MySql:ValueGenerationStrategy和MySqlValueGenerationStrategy）</p><p><img src="/cnblogs/13081247/789895-20200609213009479-1523421599.png" class="lazyload placeholder" data-srcset="/cnblogs/13081247/789895-20200609213009479-1523421599.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" loading="lazy" /></p><p>&nbsp;</p><p>&nbsp;</p><p>然后在PM执行</p><div class="cnblogs_code"><pre>Update-Database  //如果数据库链接字符串都正确，将会在数据库中生成很多表</pre></div><p><img src="/cnblogs/13081247/789895-20200609213136622-1683985688.png" class="lazyload placeholder" data-srcset="/cnblogs/13081247/789895-20200609213136622-1683985688.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" loading="lazy" /></p><p>&nbsp;各个表的定义和字段意思请查看<a href="https://blog.csdn.net/mzl87/article/details/105256180/">https://blog.csdn.net/mzl87/article/details/105256180/</a>&nbsp;，或查看博客园防丢链接<a href="https://www.cnblogs.com/wangpengzong/diary/2020/06/09/13081234.html">https://www.cnblogs.com/wangpengzong/diary/2020/06/09/13081234.html</a></p><p>&nbsp;</p><p>此时，数据库中没有数据，我们运行一下项目，项目将执行*.EntityFrameworkCore项目/EntityFrameworkCore/Seed/SeedHelper.cs的SeedHostDb方法，生成默认的Host和一个默认的租户Default，并将对应Roles(角色)、Users(用户)、Permissions(权限)及其他表数据</p><p>但是此时，在浏览器中的样式会出现问题，这个是因为我们没有对abp的js和css文件进行初始化，初始化的地方在<span style="background-color: #ffffff;">libman.json，右击libman.json，点击&ldquo;还原客户端库&rdquo;后等待较长时间，vs将会从网上对引用的js和css下载下来放到对应文件夹下</span></p><p>还原成功后，再去浏览下mvc项目，现在就可以看到完整版的abp了</p><p><img src="/cnblogs/13081247/789895-20200609214928185-1737504330.png" class="lazyload placeholder" data-srcset="/cnblogs/13081247/789895-20200609214928185-1737504330.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" loading="lazy" /></p><p>&nbsp;</p><p>&nbsp;</p><p>明天开始分析并开始做从数据库加载的动态菜单、动态权限</p>]]></content>
      
      
      
        <tags>
            
            <tag> netcore </tag>
            
            <tag> abp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>api.versioning 版本控制 自动识别最高版本和多Area但同名Contoller问题解决办法</title>
      <link href="/2020/06/03/cnblogs/13040338/"/>
      <url>/2020/06/03/cnblogs/13040338/</url>
      
        <content type="html"><![CDATA[<div class="cnblogs_code"><pre>Microsoft.AspNetCore.Mvc.Versioning //引入程序集</pre></div><p>.net core 下面api的版本控制作用不需要多说，可以查阅<a href="https://www.cnblogs.com/dc20181010/p/11313738.html">https://www.cnblogs.com/dc20181010/p/11313738.html</a></p><p>普通的版本控制一般是通过链接、header此类方法进行控制，对ApiVersionReader进行设置，例如</p><div class="cnblogs_code"><pre>services.AddApiVersioning(o =&gt;<span style="color: #000000;"> {                //o.ReportApiVersions </span>= <span style="color: #0000ff;">true</span>;<span style="color: #008000;">//</span><span style="color: #008000;">返回版本可使用的版本</span>                o.ApiVersionReader = ApiVersionReader.Combine(<span style="color: #0000ff;">new</span> HeaderApiVersionReader(<span style="color: #800000;">"</span><span style="color: #800000;">api-version</span><span style="color: #800000;">"</span>), <span style="color: #0000ff;">new</span> QueryStringApiVersionReader(<span style="color: #800000;">"</span><span style="color: #800000;">api-version</span><span style="color: #800000;">"</span><span style="color: #000000;">));//通过</span>Header或QueryString<span>进行传值来判断api的版本<br />                //o.DefaultApiVersion </span>= <span style="color: #0000ff;">new</span> ApiVersion(<span style="color: #800080;">1</span>, <span style="color: #800080;">0</span>);<span style="color: #008000;">//</span><span style="color: #008000;">默认版本号</span> <br />       });</pre></div><p>或者使用<a href="https://www.cnblogs.com/tdfblog/p/asp-net-core-api-versioning.html">https://www.cnblogs.com/tdfblog/p/asp-net-core-api-versioning.html</a>这种方式</p><p>这两种方式都需要传递api的版本信息，如果不传递将会报错</p><div class="cnblogs_code"><pre>{<span style="color: #800000;">"</span><span style="color: #800000;">error</span><span style="color: #800000;">"</span>:{<span style="color: #800000;">"</span><span style="color: #800000;">code</span><span style="color: #800000;">"</span>:<span style="color: #800000;">"</span><span style="color: #800000;">ApiVersionUnspecified</span><span style="color: #800000;">"</span>,<span style="color: #800000;">"</span><span style="color: #800000;">message</span><span style="color: #800000;">"</span>:<span style="color: #800000;">"</span><span style="color: #800000;">An API version is required, but was not specified.</span><span style="color: #800000;">"</span>,<span style="color: #800000;">"</span><span style="color: #800000;">innerError</span><span style="color: #800000;">"</span>:<span style="color: #0000ff;">null</span>}}</pre></div><p>如果我们不想传递api的版本信息时，可以将</p><div class="cnblogs_code"><pre>o.AssumeDefaultVersionWhenUnspecified = true; //此选项将用于在没有版本的情况下提供请求<br />o.DefaultApiVersion = <span style="color: #0000ff;">new</span> ApiVersion(<span style="color: #800080;">1</span>, <span style="color: #800080;">0</span>); //设置默认Api版本是1.0</pre></div><p>打开，这个我们每次请求如果不传递版本信息也不会报错了，但我们的请求将会指向1.0版本，那么我想让默认版本指向我写的api里面的最高版本怎么做？</p><p>我们将默认版本修改为最高版本可以吗？</p><p>这里将会出现一个问题，我的api版本可能由于各种各样原因造成最高版本不一致的问题</p><p>所以我们不能采用指定默认版本是最高版本的方法来解决，这个最高版本还必须要是动态的，通过翻阅<a href="https://github.com/microsoft/aspnet-api-versioning/wiki/API-Version-Selector#current-implementation-api-selector">https://github.com/microsoft/aspnet-api-versioning/wiki/API-Version-Selector#current-implementation-api-selector</a>可以得知</p><div class="cnblogs_code"><pre>The CurrentImplementationApiVersionSelector selects the maximum API version available which does not have a version status. <br />If no match <span style="color: #0000ff;">is</span> found, it falls back to the configured DefaultApiVersion. For example, <span style="color: #0000ff;">if</span> the versions <span style="color: #800000;">"</span><span style="color: #800000;">1.0</span><span style="color: #800000;">"</span>, <span style="color: #800000;">"</span><span style="color: #800000;">2.0</span><span style="color: #800000;">"</span>, and <span style="color: #800000;">"</span><span style="color: #800000;">3.0-Alpha</span><span style="color: #800000;">"</span> are available, <br />then <span style="color: #800000;">"</span><span style="color: #800000;">2.0</span><span style="color: #800000;">"</span> will be selected because it<span style="color: #800000;">'</span><span style="color: #800000;">s the highest, implemented or released API version.</span><span style="color: #000000;">CurrentImplementationApiVersionSelector选择不具有版本状态的最大可用API版本。 如果找不到匹配项，它将回退到配置的DefaultApiVersion。<br /> 例如，如果提供版本&ldquo; </span><span style="color: #800080;">1.0</span>&rdquo;，&ldquo; <span style="color: #800080;">2.0</span>&rdquo;和&ldquo; <span style="color: #800080;">3.0</span>-Alpha&rdquo;，则将选择&ldquo; <span style="color: #800080;">2.0</span>&rdquo;，因为它是最高，已实施或已发布的API版本。<br /><br /></pre><pre><span class="pl-smi">services.<span class="pl-en">AddApiVersioning(    <span class="pl-smi">options <span class="pl-k">=&gt; <span class="pl-smi">options.<span class="pl-smi">ApiVersionSelector <span class="pl-k">=        <span class="pl-k">new <span class="pl-en">CurrentImplementationApiVersionSelector( <span class="pl-smi">options ) );</span></span></span></span></span></span></span></span></span></span></pre></div><p>通过这个版本选择器，我们可以将最大版本得出，修改上面services.AddApiVersioning</p><div class="cnblogs_code"><pre>services.AddApiVersioning(o =&gt;<span style="color: #000000;"> {                o.ReportApiVersions </span>= <span style="color: #0000ff;">true</span>;<span style="color: #008000;">//</span><span style="color: #008000;">返回版本可使用的版本                </span><span style="color: #008000;">//</span><span style="color: #008000;">o.ApiVersionReader = new UrlSegmentApiVersionReader();                </span><span style="color: #008000;">//</span><span style="color: #008000;">o.ApiVersionReader = ApiVersionReader.Combine(new HeaderApiVersionReader("api-version"), new QueryStringApiVersionReader("api-version"));                </span><span style="color: #008000;">//</span><span style="color: #008000;">o.ApiVersionReader = ApiVersionReader.Combine(new QueryStringApiVersionReader("api-version"));</span>                o.ApiVersionReader = ApiVersionReader.Combine(<span style="color: #0000ff;">new</span> HeaderApiVersionReader(<span style="color: #800000;">"</span><span style="color: #800000;">api-version</span><span style="color: #800000;">"</span>));<span style="color: #008000;">//</span><span style="color: #008000;">版本号以什么形式，什么字段传递</span>                o.AssumeDefaultVersionWhenUnspecified = <span style="color: #0000ff;">true</span><span style="color: #000000;">;//此选项将用于在没有版本的情况下提供请求                o.DefaultApiVersion </span>= <span style="color: #0000ff;">new</span> ApiVersion(<span style="color: #800080;">1</span>, <span style="color: #800080;">0</span>);<span style="color: #008000;">//</span><span style="color: #008000;">默认版本号</span>                o.ApiVersionSelector = <span style="color: #0000ff;">new</span> CurrentImplementationApiVersionSelector(o);<span style="color: #008000;">//</span><span style="color: #008000;">默认以当前最高版本进行访问</span>            });</pre></div><p>举个栗子</p><div class="cnblogs_code" onclick="cnblogs_code_show('f45c43c2-8f6c-4b66-97f6-bc7f3c5a853d')"><img id="code_img_closed_f45c43c2-8f6c-4b66-97f6-bc7f3c5a853d" class="code_img_closed lazyload placeholder" src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" class="lazyload placeholder" data-srcset="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /><img id="code_img_opened_f45c43c2-8f6c-4b66-97f6-bc7f3c5a853d" class="code_img_opened lazyload placeholder" style="display: none;" onclick="cnblogs_code_hide('f45c43c2-8f6c-4b66-97f6-bc7f3c5a853d',event)" src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" class="lazyload placeholder" data-srcset="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /><div id="cnblogs_code_open_f45c43c2-8f6c-4b66-97f6-bc7f3c5a853d" class="cnblogs_code_hide"><pre><span style="color: #0000ff;">namespace</span><span style="color: #000000;"> Default.v1.Controllers{    [ApiVersion(</span><span style="color: #800000;">"</span><span style="color: #800000;">1.0</span><span style="color: #800000;">"</span><span style="color: #000000;">)]    [Route(</span><span style="color: #800000;">"</span><span style="color: #800000;">[controller]/[action]</span><span style="color: #800000;">"</span><span style="color: #000000;">)]    [ApiController]    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> HomeController : Controller, IBaseController    {        </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">readonly</span> ILogger&lt;HomeController&gt;<span style="color: #000000;"> _logger;<pre><code>    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; HomeController (ILogger&amp;lt;HomeController&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; logger)    &#123;        _logger &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; logger;    &#125;    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; JsonResult GetJson()    &#123;        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt; Json(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;Home 1.0&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);    &#125;</code></pre><p>}</span></pre></p></div><span class="cnblogs_code_collapse">Default.v1.Controllers.Home</span></div><div class="cnblogs_code" onclick="cnblogs_code_show('5272f5a4-1e24-4413-bf10-5385ce07030b')"><img id="code_img_closed_5272f5a4-1e24-4413-bf10-5385ce07030b" class="code_img_closed lazyload placeholder" src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" class="lazyload placeholder" data-srcset="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /><img id="code_img_opened_5272f5a4-1e24-4413-bf10-5385ce07030b" class="code_img_opened lazyload placeholder" style="display: none;" onclick="cnblogs_code_hide('5272f5a4-1e24-4413-bf10-5385ce07030b',event)" src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" class="lazyload placeholder" data-srcset="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /><div id="cnblogs_code_open_5272f5a4-1e24-4413-bf10-5385ce07030b" class="cnblogs_code_hide"><pre><span style="color: #0000ff;">namespace</span><span style="color: #000000;"> Default.v2.Controllers{    [ApiVersion(</span><span style="color: #800000;">"</span><span style="color: #800000;">2.0</span><span style="color: #800000;">"</span><span style="color: #000000;">)]    [Route(</span><span style="color: #800000;">"</span><span style="color: #800000;">[controller]/[action]</span><span style="color: #800000;">"</span><span style="color: #000000;">)]    [ApiController]    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> HomeController : Controller, IBaseController    {        </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">readonly</span> ILogger&lt;HomeController&gt;<span style="color: #000000;"> _logger;<pre><code>    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; HomeController (ILogger&amp;lt;HomeController&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; logger)    &#123;        _logger &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; logger;    &#125;    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; JsonResult GetJson()    &#123;        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt; Json(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;Home 2.0&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);    &#125;</code></pre><p>}</span></pre></p></div><span class="cnblogs_code_collapse">Default.v2.Controllers.Home</span></div><div class="cnblogs_code" onclick="cnblogs_code_show('5b846224-e3c0-40ba-80b8-37be0968cea5')"><img id="code_img_closed_5b846224-e3c0-40ba-80b8-37be0968cea5" class="code_img_closed lazyload placeholder" src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" class="lazyload placeholder" data-srcset="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /><img id="code_img_opened_5b846224-e3c0-40ba-80b8-37be0968cea5" class="code_img_opened lazyload placeholder" style="display: none;" onclick="cnblogs_code_hide('5b846224-e3c0-40ba-80b8-37be0968cea5',event)" src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" class="lazyload placeholder" data-srcset="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /><div id="cnblogs_code_open_5b846224-e3c0-40ba-80b8-37be0968cea5" class="cnblogs_code_hide"><pre><span style="color: #0000ff;">namespace</span><span style="color: #000000;"> Default.v1.Controllers{    [ApiVersion(</span><span style="color: #800000;">"</span><span style="color: #800000;">1.0</span><span style="color: #800000;">"</span><span style="color: #000000;">)]    [Route(</span><span style="color: #800000;">"</span><span style="color: #800000;">[controller]/[action]</span><span style="color: #800000;">"</span><span style="color: #000000;">)]    [ApiController]    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> TestController : Controller, IBaseController    {        </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">readonly</span> ILogger&lt;HomeController&gt;<span style="color: #000000;"> _logger;<pre><code>    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; TestController (ILogger&amp;lt;HomeController&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; logger)    &#123;        _logger &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; logger;    &#125;    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; JsonResult GetJson()    &#123;        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt; Json(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;Test 1.0&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);    &#125;</code></pre><p>}</span></pre></p></div><span class="cnblogs_code_collapse">Default.v1.Controllers.Test</span></div><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;我们在</p><p>请求/home/getjson 时返回&ldquo;Home 2.0&rdquo;</p><p>请求/test/getjson 时返回&ldquo;Test 1.0&rdquo;</p><p>这样就可以动态的请求最高版本了</p><p>&nbsp;</p><p>但是还是会有问题的，比如，在我添加了Area和User区域下的HomeController，且User区域下的HomeController增加了1.0和3.0版本之后，神奇的一幕出现了</p><p>我的HomeController进不去了。。。</p><div class="cnblogs_code"><pre>{<span style="color: #800000;">"</span><span style="color: #800000;">error</span><span style="color: #800000;">"</span>:{<span style="color: #800000;">"</span><span style="color: #800000;">code</span><span style="color: #800000;">"</span>:<span style="color: #800000;">"</span><span style="color: #800000;">UnsupportedApiVersion</span><span style="color: #800000;">"</span>,<span style="color: #800000;">"</span><span style="color: #800000;">message</span><span style="color: #800000;">"</span>:<span style="color: #800000;">"</span><span style="color: #800000;">The HTTP resource that matches the request URI 'https://localhost:44311/home/getjson' is not supported.</span><span style="color: #800000;">"</span>,<span style="color: #800000;">"</span><span style="color: #800000;">innerError</span><span style="color: #800000;">"</span>:<span style="color: #0000ff;">null</span>}}</pre></div><p>这个时候去google都查不到原因。。。</p><p>查看api-supported-versions，返回的是1.0,2.0,3.0。。。我的api版本控制被污染了3.0版本从哪里来的哪？第一反应是从User区域来的</p><p>我现在在User区域下添加一个除了Home和Test以外Name的Controller就可以请求成功，这个让我怀疑到是不是api.versioning本身的问题，首先怀疑的是Controller的Name问题，源码拉取下来，从添加版本控制的地方(services.AddApiVersioning)开始找</p><p><img src="/cnblogs/13040338/789895-20200603213817384-989892636.png" class="lazyload placeholder" data-srcset="/cnblogs/13040338/789895-20200603213817384-989892636.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /></p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>最后终于在ApiVersionCollator中找到了蛛丝马迹</p><div class="cnblogs_code" onclick="cnblogs_code_show('650bc907-d7fe-4dc3-ad52-c580107dc73f')"><img id="code_img_closed_650bc907-d7fe-4dc3-ad52-c580107dc73f" class="code_img_closed lazyload placeholder" src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" class="lazyload placeholder" data-srcset="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /><img id="code_img_opened_650bc907-d7fe-4dc3-ad52-c580107dc73f" class="code_img_opened lazyload placeholder" style="display: none;" onclick="cnblogs_code_hide('650bc907-d7fe-4dc3-ad52-c580107dc73f',event)" src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" class="lazyload placeholder" data-srcset="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /><div id="cnblogs_code_open_650bc907-d7fe-4dc3-ad52-c580107dc73f" class="cnblogs_code_hide"><pre><span style="color: #808080;">///</span><span style="color: #008000; text-decoration: underline;">https://github.com/microsoft/aspnet-api-versioning/blob/master/src/Microsoft.AspNetCore.Mvc.Versioning/Versioning/ApiVersionCollator.cs</span><p><span style="color: #0000ff;">namespace</span><span style="color: #000000;"> Microsoft.AspNetCore.Mvc.Versioning<br>{<br>    </span><span style="color: #0000ff;">using</span><span style="color: #000000;"> Microsoft.AspNetCore.Mvc.Abstractions;<br>    </span><span style="color: #0000ff;">using</span><span style="color: #000000;"> Microsoft.AspNetCore.Mvc.Controllers;<br>    </span><span style="color: #0000ff;">using</span><span style="color: #000000;"> Microsoft.Extensions.Options;<br>    </span><span style="color: #0000ff;">using</span><span style="color: #000000;"> System;<br>    </span><span style="color: #0000ff;">using</span><span style="color: #000000;"> System.Collections.Generic;<br>    </span><span style="color: #0000ff;">using</span><span style="color: #000000;"> System.Linq;</p><pre><code>&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Represents an object that collates &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;see cref=&quot;ApiVersion&quot;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;API versions&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/see&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; per &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;see cref=&quot;ActionDescriptor&quot;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;action&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/see&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;[CLSCompliant( &lt;span style=&quot;color: #0000ff;&quot;&gt;false&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; )]&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; ApiVersionCollator : IActionDescriptorProvider&#123;    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;readonly&lt;/span&gt; IOptions&amp;lt;ApiVersioningOptions&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; options;    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Initializes a new instance of the &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;see cref=&quot;ApiVersionCollator&quot;/&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; class.    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;param name=&quot;options&quot;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;The current &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;see cref=&quot;ApiVersioningOptions&quot;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;API versioning options&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/see&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;    &lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; ApiVersionCollator( IOptions&amp;lt;ApiVersioningOptions&amp;gt; options ) =&amp;gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;this&lt;/span&gt;.options =&lt;span style=&quot;color: #000000;&quot;&gt; options;    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Gets the API versioning options associated with the collator.    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;The current &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;see cref=&quot;ApiVersioningOptions&quot;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;API versioning options&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/see&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;    &lt;span style=&quot;color: #0000ff;&quot;&gt;protected&lt;/span&gt; ApiVersioningOptions Options =&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; options.Value;    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;inheritdoc /&amp;gt;&lt;/span&gt;    &lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;int&lt;/span&gt; Order &#123; &lt;span style=&quot;color: #0000ff;&quot;&gt;get&lt;/span&gt;; &lt;span style=&quot;color: #0000ff;&quot;&gt;protected&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;set&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;; &#125;    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;inheritdoc /&amp;gt;&lt;/span&gt;    &lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;virtual&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; OnProvidersExecuted( ActionDescriptorProviderContext context )    &#123;        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( context == &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; )        &#123;            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;throw&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; ArgumentNullException( nameof( context ) );        &#125;        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;foreach&lt;/span&gt; ( &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; actions &lt;span style=&quot;color: #0000ff;&quot;&gt;in&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; GroupActionsByController( context.Results ) )        &#123;            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; collatedModel =&lt;span style=&quot;color: #000000;&quot;&gt; CollateModel( actions );            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;foreach&lt;/span&gt; ( &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; action &lt;span style=&quot;color: #0000ff;&quot;&gt;in&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; actions )            &#123;                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; model = action.GetProperty&amp;lt;ApiVersionModel&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;();                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( model != &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span style=&quot;color: #000000;&quot;&gt;model.IsApiVersionNeutral )                &#123;                    action.SetProperty( model.Aggregate( collatedModel ) );                &#125;            &#125;        &#125;    &#125;    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;inheritdoc /&amp;gt;&lt;/span&gt;    &lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;virtual&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; OnProvidersExecuting( ActionDescriptorProviderContext context ) &#123; &#125;    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Resolves and returns the logical controller name for the specified action.    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;param name=&quot;action&quot;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;The &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;see cref=&quot;ActionDescriptor&quot;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;action&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/see&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; to get the controller name from.&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;returns&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;The logical name of the associated controller.&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/returns&amp;gt;&lt;/span&gt;    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;remarks&amp;gt;&lt;/span&gt;    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;para&amp;gt;&lt;/span&gt;    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; The logical controller name is used to collate actions together and aggregate API versions. The    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; default implementation uses the &quot;controller&quot; route parameter and falls back to the    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;see cref=&quot;ControllerActionDescriptor.ControllerName&quot;/&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; property when available.    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/para&amp;gt;&lt;/span&gt;    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;para&amp;gt;&lt;/span&gt;    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; The default implementation will also trim trailing numbers in the controller name by convention. For example,    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; the type &quot;Values2Controller&quot; will have the controller name &quot;Values2&quot;, which will be trimmed to just &quot;Values&quot;.    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; This behavior can be changed by using the &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;see cref=&quot;ControllerNameAttribute&quot;/&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; or overriding the default    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; implementation.    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/para&amp;gt;&lt;/span&gt;    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/remarks&amp;gt;&lt;/span&gt;    &lt;span style=&quot;color: #0000ff;&quot;&gt;protected&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;virtual&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; GetControllerName( ActionDescriptor action )    &#123;        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( action == &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; )        &#123;            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;throw&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; ArgumentNullException( nameof( action ) );        &#125;        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( !action.RouteValues.TryGetValue( &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;controller&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #0000ff;&quot;&gt;out&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; key ) )        &#123;            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( action &lt;span style=&quot;color: #0000ff;&quot;&gt;is&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; ControllerActionDescriptor controllerAction )            &#123;                key &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; controllerAction.ControllerName;            &#125;        &#125;        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; TrimTrailingNumbers( key );    &#125;    IEnumerable&lt;/span&gt;&amp;lt;IEnumerable&amp;lt;ActionDescriptor&amp;gt;&amp;gt; GroupActionsByController( IEnumerable&amp;lt;ActionDescriptor&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; actions )    &#123;        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; groups = &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; Dictionary&amp;lt;&lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt;, List&amp;lt;ActionDescriptor&amp;gt;&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;( StringComparer.OrdinalIgnoreCase );        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;foreach&lt;/span&gt; ( &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; action &lt;span style=&quot;color: #0000ff;&quot;&gt;in&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; actions )        &#123;            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; key =&lt;span style=&quot;color: #000000;&quot;&gt; GetControllerName( action );            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( &lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;.IsNullOrEmpty( key ) )            &#123;                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;continue&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;;            &#125;            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( !groups.TryGetValue( key, &lt;span style=&quot;color: #0000ff;&quot;&gt;out&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; values ) )            &#123;                groups.Add( key, values &lt;/span&gt;= &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; List&amp;lt;ActionDescriptor&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;() );            &#125;            values.Add( action );        &#125;        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;foreach&lt;/span&gt; ( &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; value &lt;span style=&quot;color: #0000ff;&quot;&gt;in&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; groups.Values )        &#123;            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;yield&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; value;        &#125;    &#125;    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt; TrimTrailingNumbers( &lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt;?&lt;span style=&quot;color: #000000;&quot;&gt; name )    &#123;        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( &lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;.IsNullOrEmpty( name ) )        &#123;            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;.Empty;        &#125;        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; last = name!.Length - &lt;span style=&quot;color: #800080;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;;        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;for&lt;/span&gt; ( &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; i = last; i &amp;gt;= &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt;; i--&lt;span style=&quot;color: #000000;&quot;&gt; )        &#123;            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( !&lt;span style=&quot;color: #0000ff;&quot;&gt;char&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;.IsNumber( name[i] ) )            &#123;                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( i &amp;lt;&lt;span style=&quot;color: #000000;&quot;&gt; last )                &#123;                    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt; name.Substring( &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt;, i + &lt;span style=&quot;color: #800080;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; );                &#125;                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; name;            &#125;        &#125;        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; name;    &#125;    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;static&lt;/span&gt; ApiVersionModel CollateModel( IEnumerable&amp;lt;ActionDescriptor&amp;gt; actions ) =&amp;gt; actions.Select( a =&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; a.GetApiVersionModel() ).Aggregate();&#125;</code></pre><p>}</span></pre></p></div><span class="cnblogs_code_collapse">View Code</span></div><p>&nbsp;</p><p>其中GroupActionsByController将Controller按照Controller的名字进行分组，再看看内部，分组的时候将<span class="pl-en">GetControllerName( <span class="pl-smi">action )作为key，那么GetControllerName是干嘛的，</span></span></p><div class="cnblogs_code"><pre><span style="color: #0000ff;">protected</span> <span style="color: #0000ff;">virtual</span> <span style="color: #0000ff;">string</span><span style="color: #000000;"> GetControllerName( ActionDescriptor action )        {            </span><span style="color: #0000ff;">if</span> ( action == <span style="color: #0000ff;">null</span><span style="color: #000000;"> )            {                </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span><span style="color: #000000;"> ArgumentNullException( nameof( action ) );            }<pre><code>        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( !action.RouteValues.TryGetValue( &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;controller&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #0000ff;&quot;&gt;out&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; key ) )        &#123;            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( action &lt;span style=&quot;color: #0000ff;&quot;&gt;is&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; ControllerActionDescriptor controllerAction )            &#123;                key &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; controllerAction.ControllerName;            &#125;        &#125;        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; TrimTrailingNumbers( key );    &#125;&lt;/span&gt;&lt;/pre&gt;</code></pre></div><p>这个方法原本是没有问题的，但是牵扯到Area的时候就会出问题了。。它将根目录下的HomeController和User.HomeController视为同一类的Controller然后去做版本的属性注入，造成CurrentImplementationApiVersionSelector选择器选不到正确的版本，所以返回了上面的错误，我们将GetControllerName内部修改为</p><div class="cnblogs_code"><pre><span style="color: #0000ff;">protected</span> <span style="color: #0000ff;">virtual</span> <span style="color: #0000ff;">string</span><span style="color: #000000;"> GetControllerName( ActionDescriptor action )        {            </span><span style="color: #0000ff;">if</span> ( action == <span style="color: #0000ff;">null</span><span style="color: #000000;"> )            {                </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span><span style="color: #000000;"> ArgumentNullException( nameof( action ) );            }<pre><code>        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( !action.RouteValues.TryGetValue( &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;controller&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #0000ff;&quot;&gt;out&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; key ) )        &#123;            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( action &lt;span style=&quot;color: #0000ff;&quot;&gt;is&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; ControllerActionDescriptor controllerAction )            &#123;                key &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; controllerAction.ControllerName;            &#125;        &#125;        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( !action.RouteValues.TryGetValue( &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;area&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #0000ff;&quot;&gt;out&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; area ) )        &#123;        &#125;        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt; TrimTrailingNumbers( area +&lt;span style=&quot;color: #000000;&quot;&gt; key );    &#125;&lt;/span&gt;&lt;/pre&gt;</code></pre></div><p>这样就可以走通了</p><p>&nbsp;</p><p>我们有两种解决办法，一个是把源码拉取下来，方法修改掉，项目的依赖项替换为自己修改的Microsoft.AspNetCore.Mvc.Versioning，另一种办法是将services.AddApiVersioning重写。。。请相信我，拉取修改替换依赖比重写services.AddApiVersioning快且简便。。。</p><p>issue：<a href="https://github.com/microsoft/aspnet-api-versioning/issues/630">https://github.com/microsoft/aspnet-api-versioning/issues/630</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>.netcore 定制化项目开发的思考和实现</title>
      <link href="/2020/05/06/cnblogs/12833014/"/>
      <url>/2020/05/06/cnblogs/12833014/</url>
      
        <content type="html"><![CDATA[<p>今年年初进了一家新公司，进入之后一边维护老项目一边了解项目流程，为了接下来的项目重做积累点经验。</p><p>先说下老项目吧，.net fx 3.5+oracle......</p><p>在实际维护中逐渐发现，老项目有标准版、定制版两种，标准版就是一套代码，粗略计算了下，全部版本加起来有20+个版本，如果项目重做后还是依照这个模式去开发维护，估计距离猝死也不远了，并且不同版本代码的复用率极低（好吧，根本没有）。打个比方，我在标准版中发现了一个bug，需要去其他的20+版本里面都修改一遍，删库跑路了解一下。。。。</p><p>为了提升工资（偷懒），进公司没多久就在想办法，如何去提高不同项目的代码复用率，然后想起来了wtm、abp、simplcommerce这三种项目，似乎有不同项目中代码服用的地方。</p><p>wtm、abp类似，是将底层的部分controller、view封装在底层类库，然后项目最外层去使用；</p><p>simplcommerce是将所有的模块放在各个类库中，然后在主项目中集成；</p><p>（或许是我看的不够深入，欢迎指正）</p><p>这三种项目，对于我的不同项目提交代码复用率来说，不能直接起到作用，但是却提供了一种思路，<span style="color: #ff0000;">我们可以将原始的标准版作为一个类库，然后在不同的项目中引用这个类库，做到绝大部分的代码复用，少部分修改</span>。</p><p>&nbsp;</p><p>我们如果想在定制项目中对标准版某个controller的某个action进行修改该怎么办？</p><p>1.我首先想到的是在个性化项目中写一个同名的controller，然后这个controller继承自默认版本的对应controller，来达到重写的目的，但是这个惯性思维陷入误区了，mvc对于controller的控制不和普通的type继承一样，如果同名controller存在，则会报错。。。在运行时我们可以判断出是哪个action不同，但是无法通过emit来进行修改，所以这种办法不可以。</p><p>2.第一种办法不行，那么我们是否可以对于同名controller进行名称上的修改，比如homecontroller在Tailor.Custom1中修改未TailorCustom1homecontroller，然后利用路由进行重定向？结果发现路由重定向，要么自定义一个路由中间件（求大佬给解决办法，我不会。。），要么在请求进入的时候对请求进行重定向（这种重定向就是对HttpContext.Request.Path进行特殊判断和处理，符合条件的进行重定向，但是可能会有很大的问题）</p><p>3.使用版本控制的思路，这个似乎可以，我们将标准版default中所有的都作为版本1.0，然后定制化作为2.0，在请求进入的时候，将请求头添加一个version，如果mvc找不到这个version的controller或者action，会自动转到默认的1.0版本中</p><p>&nbsp;</p><p>那我们开始新建一个简化版的项目，大概的分组可以做这样</p><p><img src="/cnblogs/12833014/789895-20200505211512224-1873232722.png" class="lazyload placeholder" data-srcset="/cnblogs/12833014/789895-20200505211512224-1873232722.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /></p><p>native/default作为标准版web类库；</p><p>Tailor.Custom* 是定制化网站；</p><p>entity是实体、service是服务，实体和服务我们暂且不说，先说明下default这个标准web类库，这个类库就是上面所说的标准类库，让其他的Tailor.Custom1、Tailor.Custom1.Https、Tailor.Custom2.Https、Tailor.Custom3.Https（以下称定制项目）去引用，然后再各自的项目中可以个性化修改</p><p>标准web类库的csproj文件做适当的修改以更改成web类库</p><div class="cnblogs_code"><pre>&lt;Project Sdk=<span style="color: #800000;">"</span><span style="color: #ff0000;">Microsoft.NET.Sdk.Web</span><span style="color: #800000;">"</span>&gt;<p>  &lt;PropertyGroup Label=<span style="color: #800000;">“</span><span style="color: #800000;">Globals</span><span style="color: #800000;">“</span>&gt;<br>    &lt;SccProjectName&gt;SAK&lt;/SccProjectName&gt;<br>    &lt;SccProvider&gt;SAK&lt;/SccProvider&gt;<br>    &lt;SccAuxPath&gt;SAK&lt;/SccAuxPath&gt;<br>    &lt;SccLocalPath&gt;SAK&lt;/SccLocalPath&gt;<br>  &lt;/PropertyGroup&gt;</p><p>  &lt;PropertyGroup&gt;<br>    &lt;TargetFramework&gt;netcoreapp3.<span style="color: #800080;">1</span>&lt;/TargetFramework&gt;<br>    <span style="color: #ff0000;">&lt;OutputType&gt;Library&lt;/OutputType&gt;</span><br>  &lt;/PropertyGroup&gt;<span style="color: #000000;"><br>  …<br></span>&lt;/Project&gt;</pre></p></div><p>然后借鉴wtm中使用项目对web类库的引用，在标准web类库中添加FrameworkServiceExtension.cs文件</p><div class="cnblogs_code"><pre>        <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span> IServiceCollection AddFrameworkService(<span style="color: #0000ff;">this</span><span style="color: #000000;"> IServiceCollection services,            WebHostBuilderContext webHostBuilderContext </span>= <span style="color: #0000ff;">null</span><span style="color: #000000;">        )//在定制版本的Startup.ConfigureServices中添加services.AddFrameworkService();即可        {            CurrentDirectoryHelpers.SetCurrentDirectory();<pre><code>        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; configBuilder = &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; ConfigurationBuilder();        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (!File.Exists(Path.Combine(Directory.GetCurrentDirectory(), &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;appsettings.json&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)))        &#123;            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; binLocation = Assembly.GetEntryAssembly()?&lt;span style=&quot;color: #000000;&quot;&gt;.Location;            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (!&lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;.IsNullOrEmpty(binLocation))            &#123;                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; binPath = &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; FileInfo(binLocation).Directory?&lt;span style=&quot;color: #000000;&quot;&gt;.FullName;                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (File.Exists(Path.Combine(binPath, &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;appsettings.json&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)))                &#123;                    Directory.SetCurrentDirectory(binPath);                    configBuilder.SetBasePath(binPath)                        .AddJsonFile(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;appsettings.json&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, optional: &lt;span style=&quot;color: #0000ff;&quot;&gt;true&lt;/span&gt;, reloadOnChange: &lt;span style=&quot;color: #0000ff;&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)                        .AddEnvironmentVariables();                &#125;            &#125;        &#125;        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;        &#123;            configBuilder.SetBasePath(Directory.GetCurrentDirectory())                .AddJsonFile(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;appsettings.json&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, optional: &lt;span style=&quot;color: #0000ff;&quot;&gt;true&lt;/span&gt;, reloadOnChange: &lt;span style=&quot;color: #0000ff;&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)                .AddEnvironmentVariables();        &#125;        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (webHostBuilderContext != &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)        &#123;            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; env =&lt;span style=&quot;color: #000000;&quot;&gt; webHostBuilderContext.HostingEnvironment;            configBuilder                .AddJsonFile($&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;appsettings.&#123;env.EnvironmentName&#125;.json&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, optional: &lt;span style=&quot;color: #0000ff;&quot;&gt;true&lt;/span&gt;, reloadOnChange: &lt;span style=&quot;color: #0000ff;&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);        &#125;        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; config =&lt;span style=&quot;color: #000000;&quot;&gt; configBuilder.Build();        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; AppSettingProvider().Initial(config);&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;添加静态的配置全局配置文件&lt;/span&gt;        &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; gd =&lt;span style=&quot;color: #000000;&quot;&gt; AssemblyHelper.GetGlobalData();        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; currentNamespace =&lt;span style=&quot;color: #000000;&quot;&gt; MethodBase.GetCurrentMethod().DeclaringType.Namespace;        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;获取标准web类库的Assembly&lt;/span&gt;        &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; currentAssembly = gd.AllAssembly.Where(x =&amp;gt; x.ManifestModule.Name == $&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&#123;currentNamespace&#125;.dll&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;).FirstOrDefault();        StackTrace ss &lt;/span&gt;= &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; StackTrace(&lt;span style=&quot;color: #0000ff;&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);        MethodBase mb &lt;/span&gt;= ss.GetFrame(ss.FrameCount - &lt;span style=&quot;color: #800080;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;).GetMethod();        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; userNamespace = mb.DeclaringType.Namespace;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;调用标准web类库的定制版项目命名空间&lt;/span&gt;</code></pre><span style="color: #000000;">            services.AddMvc(options </span>=&gt;<span style="color: #000000;">            {                options.EnableEndpointRouting </span>= <span style="color: #0000ff;">false</span><span style="color: #000000;">;            });<pre><code>        services.AddRazorPages()&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;添加RazorPages&lt;/span&gt;</code></pre><p><span style="color: #000000;">                .AddRazorRuntimeCompilation()<br>            .ConfigureApplicationPartManager(m </span>=&gt;<span style="color: #000000;"><br>            {<br>                </span><span style="color: #008000;">//</span><span style="color: #008000;">将标准web类库的Controllers添加到定制版，即我们要运行的网站中</span><br>                <span style="color: #0000ff;">var</span> feature = <span style="color: #0000ff;">new</span><span style="color: #000000;"> ControllerFeature();</p><pre><code>            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (currentAssembly != &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)            &#123;                m.ApplicationParts.Add(&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; AssemblyPart(currentAssembly));            &#125;            m.PopulateFeature(feature);            services.AddSingleton(feature.Controllers.Select(t &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; t.AsType()).ToArray());        &#125;)        .AddControllersAsServices()        .AddViewLocalization(LanguageViewLocationExpanderFormat.Suffix);&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;添加多语言支持        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;services.Configure&amp;lt;MvcRazorRuntimeCompilationOptions&amp;gt;(options =&amp;gt;        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;&#123;        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;    if (currentAssembly != null)        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;    &#123;        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;        options.FileProviders.Add(        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;        new EmbeddedFileProvider(        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;            currentAssembly,        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;            currentNamespace &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; your external assembly&#39;s base namespace        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;        )        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;    );        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;    &#125;        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;&#125;);&lt;/span&gt;        services.AddSingleton&amp;lt;ILoginUserService, LoginUserService&amp;gt;();&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;添加需要引用的其他服务&lt;/span&gt;</code></pre><span style="color: #000000;">            services.AddMvc(options </span>=&gt;<span style="color: #000000;">            {                options.Conventions.Add(</span><span style="color: #0000ff;">new</span> ApiControllerVersionConvention());<span style="color: #008000;">//</span><span style="color: #008000;">添加版本控制时忽略添加的某些重要属性</span><span style="color: #000000;">            });<pre><code>        services.AddApiVersioning(o &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; &#123;            o.ReportApiVersions &lt;/span&gt;= &lt;span style=&quot;color: #0000ff;&quot;&gt;true&lt;/span&gt;;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;返回版本可使用的版本            &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;o.ApiVersionReader = new UrlSegmentApiVersionReader();            &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;o.ApiVersionReader = ApiVersionReader.Combine(new HeaderApiVersionReader(&quot;api-version&quot;), new QueryStringApiVersionReader(&quot;api-version&quot;));            &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;o.ApiVersionReader = ApiVersionReader.Combine(new QueryStringApiVersionReader(&quot;api-version&quot;));&lt;/span&gt;            o.ApiVersionReader = ApiVersionReader.Combine(&lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; HeaderApiVersionReader(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;api-version&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;));&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;版本号以什么形式，什么字段传递&lt;/span&gt;            o.AssumeDefaultVersionWhenUnspecified = &lt;span style=&quot;color: #0000ff;&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;;            o.DefaultApiVersion &lt;/span&gt;= &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; ApiVersion(&lt;span style=&quot;color: #800080;&quot;&gt;1&lt;/span&gt;, &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt;);&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;默认版本号&lt;/span&gt;            o.ApiVersionSelector = &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; CurrentImplementationApiVersionSelector(o);&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;默认以当前最高版本进行访问&lt;/span&gt;</code></pre><p><span style="color: #000000;">            });</p><pre><code>        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; services;    &#125;&lt;/span&gt;&lt;/pre&gt;</code></pre></div><div class="cnblogs_code"><pre>        <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span> IApplicationBuilder UseFrameworkService(<span style="color: #0000ff;">this</span> IApplicationBuilder app, Action&lt;IRouteBuilder&gt; customRoutes = <span style="color: #0000ff;">null</span><span style="color: #000000;">)//在定制版本的Startup.ConfigureServices中添加services.UseFrameworkService();即可<br />        {            app.UseExceptionHandler(</span><span style="color: #800000;">"</span><span style="color: #800000;">/Home/Error</span><span style="color: #800000;">"</span><span style="color: #000000;">);<pre><code>        app.UseStaticFiles();        app.UseAuthentication();        app.Use(&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;async&lt;/span&gt; (context, next) =&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;        &#123;            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;try&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;            &#123;                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; next.Invoke();            &#125;            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;catch&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; (ConnectionResetException) &#123; &#125;            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (context.Response.StatusCode == &lt;span style=&quot;color: #800080;&quot;&gt;404&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)            &#123;                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt; context.Response.WriteAsync(&lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;.Empty);            &#125;        &#125;);        app.UseMiddleware&lt;/span&gt;&amp;lt;CustomRewriteMiddleware&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;();        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (customRoutes != &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)        &#123;            app.UseMvc(customRoutes);        &#125;        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;        &#123;            app.UseMvc(routes &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;            &#123;                routes.MapRoute(                    name: &lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;areaRoute&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;,                    template: &lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&#123;area:exists&#125;/&#123;controller=Home&#125;/&#123;action=Index&#125;/&#123;id?&#125;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);                routes.MapRoute(                    name: &lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;default&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;,                    template: &lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&#123;controller=Home&#125;/&#123;action=Index&#125;/&#123;id?&#125;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);            &#125;);        &#125;        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; app;    &#125;&lt;/span&gt;&lt;/pre&gt;</code></pre></div><p>&nbsp;</p><p>我们在标准web类库中，将所有的Controller都添加上默认的版本号1.0</p><div class="cnblogs_code"><pre>    [ApiVersion(<span style="color: #800000;">"</span><span style="color: #800000;">1.0</span><span style="color: #800000;">"</span><span style="color: #000000;">)]    [Route(</span><span style="color: #800000;">"</span><span style="color: #800000;">[controller]/[action]</span><span style="color: #800000;">"</span><span style="color: #000000;">)]    [ApiController]或者Areas中的添加    [Area(</span><span style="color: #800000;">"</span><span style="color: #800000;">User</span><span style="color: #800000;">"</span>)]<span style="color: #008000;">//</span><span style="color: #008000;">User时Area的name</span>    [ApiVersion(<span style="color: #800000;">"</span><span style="color: #800000;">1.0</span><span style="color: #800000;">"</span><span style="color: #000000;">)]    [Route(</span><span style="color: #800000;">"</span><span style="color: #800000;">[area]/[controller]/[action]</span><span style="color: #800000;">"</span><span style="color: #000000;">)]    [ApiController]</span></pre></div><p>我们的定制版本中，需要重写的Controller添加上对应标准web类库里面对应名字的Controller，对应的<span style="font-family: 'Courier New'; font-size: 12px;">ApiVersion修改成大于1.0的版本号，新添加的Controller继承自对应的</span>标准web类库的对应Controller</p><div class="cnblogs_code"><pre><span style="color: #0000ff;">namespace</span><span style="color: #000000;"> Tailor.Custom3.Https.Controllers{    [ApiVersion(</span><span style="color: #800000;">"</span><span style="color: #800000;">2.0</span><span style="color: #800000;">"</span><span style="color: #000000;">)]    [Route(</span><span style="color: #800000;">"</span><span style="color: #800000;">[controller]/[action]</span><span style="color: #800000;">"</span><span style="color: #000000;">)]    [ApiController]    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> HomeController : Default.Controllers.HomeController    {        </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">readonly</span> ILogger&lt;HomeController&gt;<span style="color: #000000;"> _logger;        </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">readonly</span><span style="color: #000000;"> ILoginUserService _userService;<pre><code>    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; HomeController(ILogger&amp;lt;HomeController&amp;gt; logger, ILoginUserService userService) : &lt;span style=&quot;color: #0000ff;&quot;&gt;base&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;(logger, userService)    &#123;        _logger &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; logger;        _userService &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; userService;    &#125; &#125;</code></pre><p>}</span></pre></p></div><p>此时，我们如果需要对某些Action进行重写，则override对应Action，然后进行重写；//Tailor.Custom1.Https和Tailor.Custom3.Https</p><p>我们如果需要对某些cshtml进行重写，则在对应目录添加相同名字的cshtml，然后进行重写；//Tailor.Custom2.Https中只对cshtml进行重写，Tailor.Custom3.Https中对Controller和cshtml都进行重写</p><p>此时我们就可以写一个标准版web类库，定制项目进行局部更改，如发现标准版web类库出现bug，可以只修改一处，处处生成上传即可；再进一步，我们可以将生成的标准版web类库的dll文件上传到指定的服务器特定目录，其他服务器对此目录进行定时的加载或者判断版本再去加载，这样就可以省去很大的精力</p><p>&nbsp;</p><p>但是在实际的项目使用中发现，可能由于Microsoft.AspNetCore.Mvc.Versioning这个包本身的问题，当我们的标准web类库中Controller有重名，但是不是同一个Views或者Areas目录下时，我们的版本控制将会出现所有的同名Controller的可使用版本信息将会变成所有的控制版本。。。这个暂时可以利用不同Controller名字进行规避，详见：<a href="https://github.com/microsoft/aspnet-api-versioning/issues/630">https://github.com/microsoft/aspnet-api-versioning/issues/630</a>&nbsp;<span style="color: #ff0000;">【已修复】</span></p><p>具体实现代码地址：<a href="https://github.com/wangpengzong/Tailor" target="_blank">https://github.com/wangpengzong/Tailor</a></p><p>Native/Default是标准版网站类库</p><p>Tailor.Custom* 是定制化网站，可以在此路径下继承Native/Default的对应Controller，利用overvide对需要重写的action进行重写，不需要重写的不进行overvide即可，或者对cshtml进行重写，不需要重写的不在对应路径下增加cshtml文件即可</p><p>&nbsp;</p><p>&nbsp; &nbsp; &nbsp;&nbsp;</p>]]></content>
      
      
      
        <tags>
            
            <tag> netcore </tag>
            
            <tag> 定制化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>netcore 非注入全局获取配置文件</title>
      <link href="/2020/04/14/cnblogs/12700974/"/>
      <url>/2020/04/14/cnblogs/12700974/</url>
      
        <content type="html"><![CDATA[<p>在netcore开发中，最常见的就是注入，比如想获取appsettings.json的内容，我们就需要去注入，然后在controller里面去获取，但是我们如果想要在service中使用appsettings.json的内容，这样就是一个问题，并且每个controller去注入也是非常麻烦的事情</p><p>&nbsp;</p><p>下面的注入的（这种方法百度一下可以出来几百条相同的搜索结果。。。参见<a href="https://www.cnblogs.com/ideacore/p/6282926.html">https://www.cnblogs.com/ideacore/p/6282926.html</a>）</p><div class="cnblogs_code"><pre><span style="color: #000000;">services.AddOptions();services.Configure</span>&lt;AppSettings&gt;(Configuration.GetSection(<span style="color: #800000;">"</span><span style="color: #800000;">AppSettings</span><span style="color: #800000;">"</span>));</pre></div><p>然后获取使用</p><p><img src="/cnblogs/12700974/789895-20200414202950686-1257092366.png" class="lazyload placeholder" data-srcset="/cnblogs/12700974/789895-20200414202950686-1257092366.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /></p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>我想要在service类库里面使用，这时该如何使用哪？</p><p>直接上代码：</p><div class="cnblogs_code"><pre><span style="color: #000000;">{  </span><span style="color: #800000;">"</span><span style="color: #800000;">Logging</span><span style="color: #800000;">"</span><span style="color: #000000;">: {    </span><span style="color: #800000;">"</span><span style="color: #800000;">LogLevel</span><span style="color: #800000;">"</span><span style="color: #000000;">: {      </span><span style="color: #800000;">"</span><span style="color: #800000;">Default</span><span style="color: #800000;">"</span>: <span style="color: #800000;">"</span><span style="color: #800000;">Warning</span><span style="color: #800000;">"</span><span style="color: #000000;">    }  },  </span><span style="color: #800000;">"</span><span style="color: #800000;">AllowedHosts</span><span style="color: #800000;">"</span>: <span style="color: #800000;">"</span><span style="color: #800000;">*</span><span style="color: #800000;">"</span><span style="color: #000000;">,  </span><span style="color: #800000;">"</span><span style="color: #800000;">AppSettings</span><span style="color: #800000;">"</span><span style="color: #000000;">: {    </span><span style="color: #800000;">"</span><span style="color: #800000;">TestString</span><span style="color: #800000;">"</span>: <span style="color: #800000;">"</span><span style="color: #800000;">This is default environment</span><span style="color: #800000;">"</span><span style="color: #000000;">,    </span><span style="color: #800000;">"</span><span style="color: #800000;">ConfigVersion</span><span style="color: #800000;">"</span>: <span style="color: #800000;">"</span><span style="color: #800000;">local</span><span style="color: #800000;">"</span><span style="color: #000000;">,    </span><span style="color: #800000;">"</span><span style="color: #800000;">connectionString</span><span style="color: #800000;">"</span>: <span style="color: #800000;">"</span><span style="color: #800000;">connectionString</span><span style="color: #800000;">"</span><span style="color: #000000;">,    </span><span style="color: #800000;">"</span><span style="color: #800000;">RedisExchangeHosts</span><span style="color: #800000;">"</span>: <span style="color: #800000;">"</span><span style="color: #800000;">RedisExchangeHosts</span><span style="color: #800000;">"</span><span style="color: #000000;">  }}</span></pre></div><p>&nbsp;</p><div class="cnblogs_code"><pre>    <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> AppSettings    {        </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">string</span> TestString { <span style="color: #0000ff;">get</span>; <span style="color: #0000ff;">set</span><span style="color: #000000;">; }        </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">string</span> ConfigVersion { <span style="color: #0000ff;">get</span>; <span style="color: #0000ff;">set</span><span style="color: #000000;">; }        </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">string</span> connectionString { <span style="color: #0000ff;">get</span>; <span style="color: #0000ff;">set</span><span style="color: #000000;">; }        </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">string</span> RedisExchangeHosts { <span style="color: #0000ff;">get</span>; <span style="color: #0000ff;">set</span><span style="color: #000000;">; }        </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">string</span> UploadPath { <span style="color: #0000ff;">get</span>; <span style="color: #0000ff;">set</span><span style="color: #000000;">; }    }</span></pre></div><div class="cnblogs_code"><pre>        <span style="color: #0000ff;">public</span><span style="color: #000000;"> Startup(IConfiguration configuration, ILoggerFactory factory, IHostingEnvironment env)        {            EnvironmentName </span>=<span style="color: #000000;"> env.EnvironmentName;            Configuration </span>=<span style="color: #000000;"> configuration;            </span><span style="color: #008000;">//</span><span style="color: #008000;"> 将内置的日志组件设置为 NHibernate 的日志组件</span>            <span style="color: #0000ff;">var</span> builder = <span style="color: #0000ff;">new</span><span style="color: #000000;"> ConfigurationBuilder()                .SetBasePath(env.ContentRootPath)                .AddJsonFile(</span><span style="color: #800000;">"</span><span style="color: #800000;">appsettings.json</span><span style="color: #800000;">"</span>, optional: <span style="color: #0000ff;">true</span>, reloadOnChange: <span style="color: #0000ff;">true</span><span style="color: #000000;">)                .AddJsonFile($</span><span style="color: #800000;">"</span><span style="color: #800000;">appsettings.{env.EnvironmentName}.json</span><span style="color: #800000;">"</span>, optional: <span style="color: #0000ff;">true</span>)<span style="color: #008000;">//</span><span style="color: #008000;">增加环境配置文件，新建项目默认有</span><span style="color: #000000;">                .AddEnvironmentVariables();<pre><code>        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; AppSettingProvider().Initial(configuration);        Configuration &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; builder.Build();    &#125;&lt;/span&gt;&lt;/pre&gt;</code></pre></div><div class="cnblogs_code"><pre>    <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> AppSettingProvider    {        </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">static</span><span style="color: #000000;"> AppSettings _myappSettings;        </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span> AppSettings _appSettings { <span style="color: #0000ff;">get</span> { <span style="color: #0000ff;">return</span><span style="color: #000000;"> _myappSettings; } }<pre><code>    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; Initial(IConfiguration configuration)    &#123;        _myappSettings &lt;/span&gt;=  &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; AppSettings() &#123;            ConfigVersion &lt;/span&gt;= configuration[&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;AppSettings:ConfigVersion&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;],            connectionString &lt;/span&gt;= configuration[&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;AppSettings:connectionString&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;],            TestString &lt;/span&gt;= configuration[&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;AppSettings:TestString&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;],            RedisExchangeHosts &lt;/span&gt;= configuration[&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;AppSettings:RedisExchangeHosts&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;],            UploadPath &lt;/span&gt;= configuration[&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;AppSettings:UploadPath&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;]        &#125;;    &#125;&#125;&lt;/span&gt;&lt;/pre&gt;</code></pre></div><p>这样，我们在要使用的时候只需要AppSettingProvider._appSettings.xxxx即可，不需要进行重复的、实现</p><p>&nbsp;</p><p><span style="color: #ff0000;">有错误或者片面地方欢迎指正</span></p>]]></content>
      
      
      
        <tags>
            
            <tag> netcore </tag>
            
            <tag> appsettings.json </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux  nginx搭建与使用</title>
      <link href="/2020/03/20/cnblogs/12530605/"/>
      <url>/2020/03/20/cnblogs/12530605/</url>
      
        <content type="html"><![CDATA[<div id="nginxinstall">安装nginx</div><div class="cnblogs_code"><pre>yum -y install nginx</pre></div><pre><span><span>测试是否安装正确：<p></span></span></pre></p><div class="cnblogs_code"><pre>nginx -t</pre></div><pre><span><span><span>打印如下：</span></span></span></pre><div class="cnblogs_code"><pre>nginx: the configuration file /etc/nginx/nginx.conf syntax <span style="color: #0000ff;">is</span><span style="color: #000000;"> oknginx: configuration file </span>/etc/nginx/nginx.conf test <span style="color: #0000ff;">is</span> successful</pre></div><pre><span><span><span><span>CentOS7.0+<span> nginx实现停止、启动、重启</span></span></span></span></span></pre><div class="cnblogs_code"><pre><span style="color: #000000;">systemctl stop nginx.service;  systemctl start nginx.service;systemctl restart nginx.service;systemctl status nginx.service;</span></pre></div><pre><span><span><span><span><span>开机自启：</span></span></span></span></span></pre><div class="cnblogs_code"><pre>systemctl enable nginx.service</pre></div><pre><span><span><span><span><span>取消开机自启：</span></span></span></span></span></pre><div class="cnblogs_code"><pre>systemctl disable nginx.service</pre></div><pre><span><span><span><span><span><p>nginx配置的修改：<br>修改nginx.conf（位置在/etc/nginx/）文件，可将配置文件放在一个文件夹中，让nginx自己去读取自定义的配置文件，修改结果如下</span></span></span></span></span></pre></p><div class="cnblogs_code"><pre><span># For more information on configuration, see:#   * Official English Documentation: http://nginx.org/en/docs/#   * Official Russian Documentation: http://nginx.org/ru/docs/<span>user nginx;worker_processes auto;error_log /var/log/nginx/<span>error.log;pid /run/<span>nginx.pid;<h1 id="Load-dynamic-modules-See-usr-share-doc-nginx-README-dynamic"><a href="#Load-dynamic-modules-See-usr-share-doc-nginx-README-dynamic" class="headerlink" title="Load dynamic modules. See /usr/share/doc/nginx/README.dynamic."></a>Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.</h1><p>include /usr/share/nginx/modules/*.conf;</p><p>events {<br>    worker_connections 1024;<br>}</p><p>http {<br>    log_format  main  ‘$remote_addr - $remote_user [$time_local] “$request” ‘<br>                      ‘$status $body_bytes_sent “$http_referer” ‘<br>                      ‘“$http_user_agent” “$http_x_forwarded_for”‘;</p><pre><code>access_log  /var/log/nginx/access.log  main;sendfile            on;tcp_nopush          on;tcp_nodelay         on;keepalive_timeout   65;types_hash_max_size 2048;include             /etc/nginx/mime.types;default_type        application/octet-stream;# Load modular configuration files from the /etc/nginx/conf.d directory.# See http://nginx.org/en/docs/ngx_core_module.html#include# for more information.include /etc/nginx/conf.d/*.conf;</code></pre><p>}</span></span></span></span></pre></p></div><pre>include /etc/nginx/conf.d/*.conf;这一句的意思是从/etc/nginx/conf.d/文件夹中搜索所有*.conf的配置文件填充进配置中，例如我发布了一个网站，端口号是5000，如果不进行nginx映射，只能在linux的内网中进行访问，</pre><pre>无法在外网进行访问</pre><p>例如我在/etc/nginx/conf.d/中添加了myblog.conf，如下面，重启nginx后，80端口的http请求都会转向到内部的5000端口，这样自己的网站就可以访问了</p><div class="cnblogs_code"><pre><span>server {   listen 80<span>;   location /<span> {        proxy_pass http://localhost:5000;        proxy_http_version 1.1<span>;        proxy_set_header Upgrade $http_upgrade;        proxy_set_header Connection keep-<span>alive;           proxy_set_header Host $host;        proxy_cache_bypass $http_ipgrade;   }  }</span></span></span></span></span></pre></div><p>&nbsp;</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>linux docker .net core  从建立网站到预览</title>
      <link href="/2020/03/20/cnblogs/12525540/"/>
      <url>/2020/03/20/cnblogs/12525540/</url>
      
        <content type="html"><![CDATA[<p>docker的安装在网上一搜一大把，windows安装的就是exe双击，linux安装需要执行语句</p><p>ps：需要准备xftp、xshell、vs 2019、linux服务器、docker账号密码</p><p>例如：</p><div class="cnblogs_code"><pre><span style="color: #000000;">服务器刚买好时，最好执行一次yum update<br /><br />打开xshell，连接上linux服务器<br />安装、运行、配置docker</span><span style="color: #800080;">1</span><span style="color: #000000;">、安装dockeryum install </span>-<span style="color: #000000;">y docker</span><span style="color: #800080;">2</span><span style="color: #000000;">、查看docker是否安装成功yum list installed </span>|<span style="color: #000000;">grep docker</span><span style="color: #800080;">3</span><span style="color: #000000;">、启动docker服务(并设置开机自启)systemctl start docker.servicesystemctl enable docker.service</span><span style="color: #800080;">4</span><span style="color: #000000;">、查看docker服务状态systemctl status docker</span></pre></div><p>如果拉镜像慢可以开挂（daemon.json），百度一波一大把&nbsp;<a href="https://blog.csdn.net/ZZ2713634772/article/details/103980464">https://blog.csdn.net/ZZ2713634772/article/details/103980464</a></p><div class="cnblogs_code"><pre>vim/vi/nano /etc/docker/daemon.json //如果没有这个文件就去新建一个 <br /><br />修改之后进行保存  //保证<span class="hljs-string">"registry-mirrors":[<span class="hljs-string">""] 的格式正确，没有多余标点符号&lt;内部符号全用英文符号&gt;</span></span><br /><br />然后执行：<br />systemctl daemon-reload //重载配置<br />systemctl restart docker  //重启docker<br /><br />收集到的加速器地址：<br />https://docker.mirrors.ustc.edu.cn //中科大<br />https://reg-mirror.qiniu.com  //七牛<br />https://dockerhub.azk8s.cn<br /><a href="http://hub-mirror.c.163.com/" rel="nofollow">http://hub-mirror.c.163.com</a>  //网易<br /><a href="https://registry.docker-cn.com/" rel="nofollow">https://registry.docker-cn.com</a>  //国内<br /><a href="https://aa25jngun.mirror.aliyuncs.com/" rel="nofollow">https://aa25jngun.mirror.aliyuncs.com</a> //阿里云</pre></div><p>&nbsp;</p><p>&nbsp;</p><p>接下来可以自己试试打包一下网站，这里用.netcore 3.1举例</p><p>网站可以自己去新建，我这里以wtm生成的模板为例</p><p>进入<a href="https://wtmdoc.walkingtec.cn/setup">https://wtmdoc.walkingtec.cn/setup</a>，项目名填写：MyWtm</p><p><img src="/cnblogs/12525540/789895-20200319163629002-354206810.png" class="lazyload placeholder" data-srcset="/cnblogs/12525540/789895-20200319163629002-354206810.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" width="642" height="327" /></p><p>&nbsp;</p><p>点击下一步，版本选择.net core 3.1</p><p><img src="/cnblogs/12525540/789895-20200319163732934-1485815953.png" class="lazyload placeholder" data-srcset="/cnblogs/12525540/789895-20200319163732934-1485815953.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /></p><p>&nbsp;</p><p>点击开始配置，然后会生成一个压缩文件，在本地解压缩，双击.sln（下载时间不一样，可能目录也不一样，这个没问题的，只是一个演示）</p><p>右键点击MyWtm，添加=&gt;docker支持=&gt;linux（此时根据自己的docker运行系统选择不同版本，我这里选择linux）</p><p>然后会生成一个Dockerfile文件</p><p>&nbsp;</p><p>&nbsp;</p><p><img src="/cnblogs/12525540/789895-20200319164038644-1263763272.png" class="lazyload placeholder" data-srcset="/cnblogs/12525540/789895-20200319164038644-1263763272.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /></p><p>&nbsp;</p><p>打开Dockerfile文件，然后将中间的全部删掉，倒数第二句做一个修改</p><div class="cnblogs_code"><pre>#See https:<span style="color: #008000;">//</span><span style="color: #008000;">aka.ms/containerfastmode to understand how Visual Studio uses this Dockerfile to build your images for faster debugging.</span><span style="color: #000000;">FROM mcr.microsoft.com</span>/dotnet/core/aspnet:<span style="color: #800080;">3.1</span>-buster-slim AS <span style="color: #0000ff;">base</span><span style="color: #000000;">WORKDIR </span>/<span style="color: #000000;">appEXPOSE </span><span style="color: #800080;">80</span><span style="color: #000000;"><p>COPY </span>/ /<span style="color: #000000;">app</span></pre></p><pre><span style="color: #000000;">ENTRYPOINT [</span><span style="color: #800000;">"</span><span style="color: #800000;">dotnet</span><span style="color: #800000;">"</span>, <span style="color: #800000;">"</span><span style="color: #800000;">MyWtm.dll</span><span style="color: #800000;">"</span>]</pre></div><p>将Dockerfile文件属性改一下，改为始终复制</p><p><img src="/cnblogs/12525540/789895-20200321141834541-429866891.png" class="lazyload placeholder" data-srcset="/cnblogs/12525540/789895-20200321141834541-429866891.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /></p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>好了， 我们的网站已经做好了准备，下一步，点击发布=&gt;文件夹=&gt;创建配置文件，什么都不需要改</p><p><img src="/cnblogs/12525540/789895-20200319164325337-719717806.png" class="lazyload placeholder" data-srcset="/cnblogs/12525540/789895-20200319164325337-719717806.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /></p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;然后点击发布按钮</p><p>&nbsp;<img src="/cnblogs/12525540/789895-20200319164432955-318576517.png" class="lazyload placeholder" data-srcset="/cnblogs/12525540/789895-20200319164432955-318576517.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /></p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;点击复制下这个文件夹（如果复制出来没有带盘符，自己去加上）</p><p><img src="/cnblogs/12525540/789895-20200319164451725-1925277368.png" class="lazyload placeholder" data-srcset="/cnblogs/12525540/789895-20200319164451725-1925277368.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /></p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>打开xftp（自行下载），连接到自己的linux服务器，创建一个mywtm文件夹，将刚才的&ldquo;D:\xxx\MyWtm\MyWtm\bin\Release\netcoreapp3.1\publish\&rdquo;字符串粘贴进本地地址栏</p><p><img src="/cnblogs/12525540/789895-20200319164725210-1272652233.png" class="lazyload placeholder" data-srcset="/cnblogs/12525540/789895-20200319164725210-1272652233.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /></p><p>&nbsp;</p><p>然后左边文件夹publish全选上传，此时我们的文件工作全部做好了</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;现在打开xshell，连接上linux服务器</p><p>&nbsp;登陆自己的docker账号</p><div class="cnblogs_code"><pre>docker login</pre></div><p>按照提示输入dockerid和密码，出现successly就可以了</p><p>然后进入到自己的mywtm项目文件夹下（之前修改的Dockerfile文件倒数第二句，COPY / /app&nbsp; 第一个斜杠就是本目录，你也可以在上级目录(如publish)执行镜像创建，但是第一个斜杠前要加目录名称，例如COPY publish/ /app），比如我的是</p><div class="cnblogs_code"><pre>cd /root/docker/mywtm  #如果自己不在根目录下，可以先执行cd /</pre></div><p>现在开始，创建docker镜像，出现Successfully就可以了</p><div class="cnblogs_code"><pre>docker build -t [dockerid]/mywtm .</pre></div><p><img src="/cnblogs/12525540/789895-20200319173859759-522955515.png" class="lazyload placeholder" data-srcset="/cnblogs/12525540/789895-20200319173859759-522955515.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /></p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;然后启动容器</p><div class="cnblogs_code"><pre>docker run -d -p 8081:80 --name mywtm [dockerid]/mywtm</pre></div><p><img src="/cnblogs/12525540/789895-20200321142847608-345165120.png" class="lazyload placeholder" data-srcset="/cnblogs/12525540/789895-20200321142847608-345165120.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /></p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;此时我们可以使用curl来查看自己的网站是否运行成功：</p><div class="cnblogs_code"><pre>curl http:<span style="color: #008000;">//</span><span style="color: #008000;">localhost:8081  #出现html代码说明我们的网站已经发布到docker生成镜像，并且于linux映射成功,如果没有出现html也没有关系，在外网查看下就可以了</span></pre></div><p>&nbsp;此时，在外网一般是可以访问到的，ip+端口即可，如果不能访问到，去云服务器控制台安全组中开放端口即可（一般阿里云需要手动去开放）</p><p>&nbsp;经测试发现，腾讯云服务器docker映射后不需要配置安全组，阿里云服务器需要自己去手动配置</p><p>&nbsp;<img src="/cnblogs/12525540/789895-20200321144900449-1370390112.png" class="lazyload placeholder" data-srcset="/cnblogs/12525540/789895-20200321144900449-1370390112.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" width="915" height="562" /></p><p>&nbsp;</p><p>&nbsp;</p><p>推送到自己的docker仓库</p><div class="cnblogs_code"><pre>docker push [dockerid]/mywtm</pre></div><p><img src="/cnblogs/12525540/789895-20200319175139996-1452396882.png" class="lazyload placeholder" data-srcset="/cnblogs/12525540/789895-20200319175139996-1452396882.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /></p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>docker的其他操作：</p><p>停止容器：</p><div class="cnblogs_code"><pre>docker stop [容器id]</pre></div><p>删除容器</p><div class="cnblogs_code"><pre>docker rm [容器id]  #或者docker container rm [容器名]</pre></div><p>删除镜像</p><div class="cnblogs_code"><pre>docker rmi [镜像名称]</pre></div><p>查看运行的docker容器</p><div class="cnblogs_code"><pre>docker ps</pre></div><p>查看所有docker容器</p><div class="cnblogs_code"><pre>docker ps -a</pre></div><p>&nbsp;查看docker的日志</p><div class="cnblogs_code"><pre>docker logs --tail=<span style="color: #800000;">"</span><span style="color: #800000;">100</span><span style="color: #800000;">"</span> mywtm <span style="color: #008000;">//</span><span style="color: #008000;">查看最近100行日志</span><span style="color: #000000;">docker logs命令docker logs [options] 容器获取容器的日志。<p>名字    默认值    描述<br>&ndash;details        显示提供给日志的额外细节<br>&ndash;follow或</span>-<span style="color: #000000;">f        按日志输出<br>&ndash;since        从某个时间开始显示，例如2013</span>-<span style="color: #800080;">01</span>-02T13:<span style="color: #800080;">23</span>:<span style="color: #800080;">37</span><span style="color: #000000;"><br>&ndash;tail    all    从日志末尾多少行开始显示<br>&ndash;timestamps或</span>-<span style="color: #000000;">t        显示时间戳<br>&ndash;until        打印某个时间以前的日志，例如 </span><span style="color: #800080;">2013</span>-<span style="color: #800080;">01</span>-02T13:<span style="color: #800080;">23</span>:<span style="color: #800080;">37</span></pre></p></div><p>进入docker内部</p><div class="cnblogs_code"><pre>sudo docker exec -it containerID /bin/bash  //最后的路径是可以更改的</pre></div><p>&nbsp;</p><p>docker常见报错信息：</p><p>参见<a href="https://www.jianshu.com/p/605a7c0e1d0f">https://www.jianshu.com/p/605a7c0e1d0f</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> netcore </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux 学习 mysql安装到连接</title>
      <link href="/2020/03/14/cnblogs/12490995/"/>
      <url>/2020/03/14/cnblogs/12490995/</url>
      
        <content type="html"><![CDATA[<h1><span style="color: #ff0000;"><span style="font-size: 24px;">在Centos7.6 上安装mysql</span></span></h1><p>&nbsp;ps：一般mysql安装后会在/var/log/下面生成一个mysqld.log文件，如果遇到启动不了或者其他问题，基本都可以在这个log文件里面找到错误原因</p><h2><span style="font-size: 18pt; color: #ff0000;">1.下载mysql和安装</span></h2><div class="cnblogs_code"><h3><span id="Method1" style="color: #000000;">1.1 有梯子，可以使用下面的方法</span></h3><div class="cnblogs_code"><pre><span style="color: #000000;">二、先下载Linux下的Mysql包，打开Mysql官网https:</span><span style="color: #008000;">//</span><span style="color: #008000;">www.mysql.com/</span><span style="color: #000000;">点击DOWNLOAD，进入<p>https:</span><span style="color: #008000;">//</span><span style="color: #008000;"><a href="http://www.mysql.com/downloads/">www.mysql.com/downloads/</a><br /><img src="/cnblogs/12490995/789895-20200314103719008-486099808.png" class="lazyload placeholder" data-srcset="/cnblogs/12490995/789895-20200314103719008-486099808.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" width="732" height="297" /></span></pre></p><p>&nbsp;</p><pre></pre><p>&nbsp;</p><pre><span style="color: #008000;"><br /></span><span style="color: #000000;">到页面最底部，点击社区版 community(GPL)Downloads</span>&gt;&gt;<span style="color: #000000;">，进入<p>https:</span><span style="color: #008000;">//</span><span style="color: #008000;">dev.mysql.com/downloads/</span><br></pre><br><img src="/cnblogs/12490995/789895-20200314103659453-1423707822.png" class="lazyload placeholder" data-srcset="/cnblogs/12490995/789895-20200314103659453-1423707822.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" width="701" height="400" /></p><p>&nbsp;</p><p>&nbsp;</p><pre><span style="color: #000000;"><p>继续点击社区版服务器，进入<br /></span></pre></p><pre><span>https://dev.mysql.com/downloads/mysql/</span></pre><pre><span style="color: #000000;"><br /><img src="/cnblogs/12490995/789895-20200314103608996-226690568.png" class="lazyload placeholder" data-srcset="/cnblogs/12490995/789895-20200314103608996-226690568.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" width="771" height="409" /></span></pre><pre><span style="color: #000000;">三、选择版本及系统，点击右侧的Download，进入页面<img src="/cnblogs/12490995/789895-20200314103531976-1657277194.png" class="lazyload placeholder" data-srcset="/cnblogs/12490995/789895-20200314103531976-1657277194.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" width="808" height="527" /></span></pre><p>&nbsp;</p><pre></pre><p>&nbsp;</p><pre><span style="color: #000000;">四、最后开始下载<p><img src="/cnblogs/12490995/789895-20200314103515432-233460820.png" class="lazyload placeholder" data-srcset="/cnblogs/12490995/789895-20200314103515432-233460820.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" width="831" height="477" /></span></pre></p><p>&nbsp;</p><pre></pre><p>&nbsp;</p><pre><span style="color: #000000;">五、下载完成后的包列表，选择版本不同，后面的版本号可能不同，这个没有关系<img src="/cnblogs/12490995/789895-20200314103742076-1506683442.png" class="lazyload placeholder" data-srcset="/cnblogs/12490995/789895-20200314103742076-1506683442.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /></span></pre><pre><span style="color: #000000;">陈列如下<p>mysql</span>-community-client-<span style="color: #800080;">8.0</span>.<span style="color: #800080;">16</span>-<span style="color: #800080;">2</span><span style="color: #000000;">.el7.x86_64.rpm<br>mysql</span>-community-common-<span style="color: #800080;">8.0</span>.<span style="color: #800080;">16</span>-<span style="color: #800080;">2</span><span style="color: #000000;">.el7.x86_64.rpm<br>mysql</span>-community-devel-<span style="color: #800080;">8.0</span>.<span style="color: #800080;">16</span>-<span style="color: #800080;">2</span><span style="color: #000000;">.el7.x86_64.rpm<br>mysql</span>-community-embedded-compat-<span style="color: #800080;">8.0</span>.<span style="color: #800080;">16</span>-<span style="color: #800080;">2</span><span style="color: #000000;">.el7.x86_64.rpm<br>mysql</span>-community-libs-<span style="color: #800080;">8.0</span>.<span style="color: #800080;">16</span>-<span style="color: #800080;">2</span><span style="color: #000000;">.el7.x86_64.rpm<br>mysql</span>-community-libs-compat-<span style="color: #800080;">8.0</span>.<span style="color: #800080;">16</span>-<span style="color: #800080;">2</span><span style="color: #000000;">.el7.x86_64.rpm<br>mysql</span>-community-server-<span style="color: #800080;">8.0</span>.<span style="color: #800080;">16</span>-<span style="color: #800080;">2</span><span style="color: #000000;">.el7.x86_64.rpm<br>mysql</span>-community-test-<span style="color: #800080;">8.0</span>.<span style="color: #800080;">16</span>-<span style="color: #800080;">2</span>.el7.x86_64.rpm<br /><br />此方法来自<a href="https://www.cnblogs.com/lukefan/p/10406522.html">https://www.cnblogs.com/lukefan/p/10406522.html</a></pre></p></div><pre></pre><h3><span id="Method2" style="color: #000000;">1.2 没有梯子，请使用下面的方法<br /></span></h3><div class="cnblogs_code"><pre><span style="color: #000000;">一、获取mysql YUM源   <p>打开网址：https:</span><span style="color: #008000;">//</span><span style="color: #008000;">dev.mysql.com/downloads/repo/yum/,选择对应linux版本</span><br></pre><br><img src="/cnblogs/12490995/789895-20200314103935434-15938096.png" class="lazyload placeholder" data-srcset="/cnblogs/12490995/789895-20200314103935434-15938096.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" width="805" height="372" /></p><p>&nbsp;</p><p>&nbsp;</p><pre><span style="color: #000000;"><p>点击&ldquo;No thanks, just start my download.&rdquo;，进行下载</p><p><img src="/cnblogs/12490995/789895-20200314104005087-1747405802.png" class="lazyload placeholder" data-srcset="/cnblogs/12490995/789895-20200314104005087-1747405802.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" width="791" height="574" /></span></pre></p><p>&nbsp;</p><pre></pre><p>&nbsp;</p><pre><span style="color: #000000;"><p>将下载地址复制，得到rpm包的地址</p><p><img src="/cnblogs/12490995/789895-20200314104017330-12695127.png" class="lazyload placeholder" data-srcset="/cnblogs/12490995/789895-20200314104017330-12695127.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" width="683" height="368" /><br /><br />此方法来源<a href="https://www.cnblogs.com/lemon-feng/p/11233227.html">https://www.cnblogs.com/lemon-feng/p/11233227.html</a></span></pre></p></div><pre></pre><h3>这两种方法的区别是是否要在服务器上下载后面的安装包，按照后面的方法，服务器下载时网速渣的要命（感谢长城），但是可以断点，下次继续下载</h3></div><p>在后续安装的时候，可以按照选择的不同办法进行安装，其实都是大同小异，在安装完成之后，建议采用下面的办法进行初始化和配置</p><h2><span id="Set1" style="color: #ff0000; font-size: 18pt;"><span style="color: #ff0000; font-size: 18pt;">2.初始化和配置<br /></span></span></h2><div class="cnblogs_code"><pre>顺序执行以下语句</pre><div class="cnblogs_code"><pre>mysqld</pre></div><div class="cnblogs_code"><pre>mysqld --initialize --user=mysql</pre></div><div class="cnblogs_code"><pre>mysqld --initialize --lower-<span style="color: #0000ff;">case</span>-table-names=<span style="color: #800080;">1 #此设置是设置大小写是否敏感，可前往<a href="https://blog.csdn.net/jesseyoung/article/details/40617031">https://blog.csdn.net/jesseyoung/article/details/40617031</a>查看是否需要设置<br />#ps：<span style="color: #ff0000;">在mysql8中，大小写敏感设置需要在初始化的时候进行设置，后面在配置中进行更改是无效的，所以慎重选择，不然就需要重装。。。。</span></span></pre></div></div><div class="cnblogs_code"><pre>查看初始密码：</pre><div class="cnblogs_code"><pre>cat /<span style="color: #0000ff;">var</span>/log/mysqld.log  #或者 <strong>cat /var/log/mysqld.log | grep password 或者文件系统进入/var/log/mysqld.log进行查看<br /><br /><img src="/cnblogs/12490995/789895-20200314111035435-454576915.png" class="lazyload placeholder" data-srcset="/cnblogs/12490995/789895-20200314111035435-454576915.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /></strong></pre></div><p>&nbsp;启动mysql服务：</p><div class="cnblogs_code"><pre>service mysqld start</pre></div><p>查看一下服务状态是否启动：</p><div class="cnblogs_code"><pre>service mysqld status</pre></div><p>登入数据库：</p><div class="cnblogs_code"><pre>mysql -uroot -p</pre></div><p><img src="/cnblogs/12490995/789895-20200314111255378-1900099054.png" class="lazyload placeholder" data-srcset="/cnblogs/12490995/789895-20200314111255378-1900099054.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /></p><p>&nbsp;</p><p>&nbsp;输入或者复制进刚才的随机密码</p><p><img src="/cnblogs/12490995/789895-20200314111330497-1914185865.png" class="lazyload placeholder" data-srcset="/cnblogs/12490995/789895-20200314111330497-1914185865.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /></p><p>&nbsp;</p><p>&nbsp;下面会出现一个输入命令的地方</p><p><img src="/cnblogs/12490995/789895-20200314111407787-1937103574.png" class="lazyload placeholder" data-srcset="/cnblogs/12490995/789895-20200314111407787-1937103574.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /></p><p>值得注意的是，在mysql中，每一个执行语句后面要加上一个英文分号，不然不会执行，如果忘记加了，可以在下面的"&gt;"后面输入英文分号然后回车，例如</p><p><img src="/cnblogs/12490995/789895-20200314111742266-166098681.png" class="lazyload placeholder" data-srcset="/cnblogs/12490995/789895-20200314111742266-166098681.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /></p><p>&nbsp;</p><p>&nbsp;</p><h3><span id="Set2" style="color: #ff0000;">设置远程访问授权</span></h3><div class="cnblogs_code"><pre></pre><pre>mysql -u root -p         //登录数据库,如果已经登入，不需要再执行<p>use mysql                  //进入mysql数据库,如果已经进入，不需要再执行</pre></p><pre>select Host,User from user; //查看可以访问数据库的ip</pre><pre><span style="color: #000000;">select 'host' from user where user='root';<br /><br />update user set host = '%' where user ='root';  //将默认的localhost更新为%，%是默认全部可以访问，localhost只是本地可访问，还可以指定公网ipgrant all privileges on </span>*.* to <span style="color: #800000;">'</span><span style="color: #800000;">root</span><span style="color: #800000;">'</span>@<span style="color: #800000;">'</span><span style="color: #800000;">%</span><span style="color: #800000;">'</span><span style="color: #000000;"> with grant option;flush privileges;</span></pre></div><p><strong>输入exit退出，<span style="color: #ff0000;">打开</span></strong><span style="color: #ff0000;"><strong>防火墙开放</strong><strong>3306</strong><strong>端口，此步骤不在mysql里面执行</strong></span></p><p>如果没有开启防火墙，则输入：systemctl start firewalld&nbsp; 开启</p><p><img src="/cnblogs/12490995/1730174-20190723172447650-1888406330.png" class="lazyload placeholder" data-srcset="/cnblogs/12490995/1730174-20190723172447650-1888406330.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /></p><p><strong>输入下面命令，开放</strong><strong>3306</strong><strong>端口</strong></p><p>firewall-cmd --zone=public --add-port=3306/tcp --permanent</p><p>firewall-cmd --reload</p><p><img src="/cnblogs/12490995/789895-20200314111825524-170131346.png" class="lazyload placeholder" data-srcset="/cnblogs/12490995/789895-20200314111825524-170131346.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /></p><p>&nbsp;</p><p>&nbsp;<span style="color: #ff0000;"><strong>配置默认编码为</strong><strong>UTF-8<strong>，此步骤不在mysql里面执行</strong></strong></span></p><p>修改/etc/my.cnf配置文件，在[mysqld]下添加编码配置，如下所示：</p><p>（这个步骤可以使用vim或者xftp进行修改）</p><p align="left">character_set_server=utf8</p><p>init_connect='SET NAMES utf8'</p><p>&nbsp;<img src="/cnblogs/12490995/1730174-20190723172533547-1436305325.png" class="lazyload placeholder" data-srcset="/cnblogs/12490995/1730174-20190723172533547-1436305325.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /></p><p><strong>编辑保存完重启mysql服务: systemctl restart mysqld</strong></p><p><strong><img src="/cnblogs/12490995/1730174-20190723172615004-1777913221.png" class="lazyload placeholder" data-srcset="/cnblogs/12490995/1730174-20190723172615004-1777913221.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /></strong></p><p>查看下编码：mysql&gt; show variables like '%character%';</p><p><img src="/cnblogs/12490995/1730174-20190723172640897-1725389911.png" class="lazyload placeholder" data-srcset="/cnblogs/12490995/1730174-20190723172640897-1725389911.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /></p><p>&nbsp;</p><p>此时，外部如果还是不能连接上数据库（可查看<a href="https://www.cnblogs.com/zzqit/p/10095597.html">https://www.cnblogs.com/zzqit/p/10095597.html</a>），首先查看<strong>安全规则组，看是否打开了3306端口</strong></p><p><strong><img src="/cnblogs/12490995/789895-20200314112146960-1975346260.png" class="lazyload placeholder" data-srcset="/cnblogs/12490995/789895-20200314112146960-1975346260.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" width="830" height="362" /></strong></p><p>&nbsp;</p><h3>更改密码</h3><p>更改密码，其实就是更改上面user对应的密码，举例：</p><div class="cnblogs_code"><pre>ALTER USER <span style="color: #800000;">'</span><span style="color: #800000;">root</span><span style="color: #800000;">'</span>@<span style="color: #800000;">'</span><span style="color: #800000;">localhost</span><span style="color: #800000;">'</span> IDENTIFIED WITH mysql_native_password BY <span style="color: #800000;">'</span><span style="color: #800000;">你的密码</span><span style="color: #800000;">'</span>;</pre></div><p>这一句话，里面root对应上面的user列，localhost对应host列</p><p>&nbsp;<img src="/cnblogs/12490995/789895-20200315144745201-372259132.png" class="lazyload placeholder" data-srcset="/cnblogs/12490995/789895-20200315144745201-372259132.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /></p><p>&nbsp;</p><p>&nbsp;如果我这句话写成：ALTER USER 'root'@'%' IDENTIFIED WITH mysql_native_password BY 'TiLaMiSu13213#13';</p><p>就会报以下错误：ERROR 1396 (HY000): Operation ALTER USER failed for 'root'@'%'</p><p><img src="/cnblogs/12490995/789895-20200315144855769-1157086710.png" class="lazyload placeholder" data-srcset="/cnblogs/12490995/789895-20200315144855769-1157086710.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /></p><p>&nbsp;</p><p>&nbsp;，意思就是找不到对应的user和host，无法进行密码设置，所以这个地方要对应起来才可以</p><p>我们如果想更改远程连接rootr的密码，就把上面这句话改成</p><div class="cnblogs_code"><pre>ALTER USER <span style="color: #800000;">'</span><span style="color: #800000;">rootr</span><span style="color: #800000;">'</span>@<span style="color: #800000;">'</span><span style="color: #800000;">%</span><span style="color: #800000;">'</span> IDENTIFIED WITH mysql_native_password BY <span style="color: #800000;">'</span><span style="color: #800000;">你的密码</span><span style="color: #800000;">'</span>;</pre></div><p><span style="color: #ff0000;">这个地方需要自己去设置修改，别直接复制粘贴</span></p><p>&nbsp;</p><p id="Set4">设置开机启动：<br />在/usr/lib/systemd/system/文件夹下创建一个mysql.service，然后进行编辑</p><pre><span>#ExecStart 目录可在执行which mysqld 进行查询，注意不要少d</span></pre><img src="/cnblogs/12490995/789895-20200315140044551-1148857260.png" class="lazyload placeholder" data-srcset="/cnblogs/12490995/789895-20200315140044551-1148857260.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /><p>&nbsp;</p><p>&nbsp;</p><div class="cnblogs_code"><pre><span style="color: #000000;">[Unit]Description</span>=<span style="color: #000000;">MySQL ServerDocumentation</span>=man:mysqld(<span style="color: #800080;">8</span><span style="color: #000000;">)Documentation</span>=http:<span style="color: #008000;">//</span><span style="color: #008000;">dev.mysql.com/doc/refman/en/using-systemd.html</span>After=<span style="color: #000000;">network.targetAfter</span>=<span style="color: #000000;">syslog.target <p>[Install]<br>WantedBy</span>=multi-<span style="color: #000000;">user.target</p><p>[Service]<br>User</span>=<span style="color: #000000;">root<br>Group</span>=<span style="color: #000000;">mysql<br>ExecStart</span>=/usr/sbin/mysqld –defaults-file=/etc/<span style="color: #000000;">my.cnf <br /></span><span>LimitNOFILE </span>= <span style="color: #800080;">5000</span></pre></p></div><p>保存后，然后依次执行</p><div class="cnblogs_code"><pre></pre><pre><span>systemctl daemon-reload #重新加载服务配置文件</span></pre><pre><span style="color: #000000;">systemctl start mysql #启动mysql<br /><br />systemctl enable mysqld  #设置开机启动<br />systemctl status mysql #查看mysql的状态<br /></span></pre></div><p>&nbsp;</p></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>linux 安装redis及问题收集</title>
      <link href="/2020/03/06/cnblogs/12430453/"/>
      <url>/2020/03/06/cnblogs/12430453/</url>
      
        <content type="html"><![CDATA[<p>contos 7 下安装redis教程可参照<a href="https://www.cnblogs.com/hxun/p/11075755.html">https://www.cnblogs.com/hxun/p/11075755.html</a><br /><br />值得注意的是在第6步方法一（所以建议使用方法二），如果直接使用xftp添加redis文件，并保存后，在执行</p><pre>service redis start时会出现以下错误，</pre><p><img src="/cnblogs/12430453/789895-20200306195120995-807700091.png" class="lazyload placeholder" data-srcset="/cnblogs/12430453/789895-20200306195120995-807700091.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /></p><p>&nbsp;</p><p>&nbsp;解决办法在<a href="https://blog.csdn.net/xzm5708796/article/details/88344074">https://blog.csdn.net/xzm5708796/article/details/88344074</a>，就是在/etc/init.d/文件夹下执行以下语句即可</p><div class="cnblogs_code"><pre>sed -i <span style="color: #800000;">'</span><span style="color: #800000;">s/\r//g</span><span style="color: #800000;">'</span> redis #redis是/etc/init.d/文件夹下的文件名，如果生成的文件是其他名字，请自行更改</pre></div><p>&nbsp;</p><p>下面是原文</p><p>最近一直忙于项目上的要求，在编写各种自动化安装的脚本，正好有一个需求是在之前的项目上编写过的，目前只需要拿来修改下即可。<br />之前的shell脚本是在服务器上编写的，后来又已复制的方式存在在了电脑上，以txt文件的形式存放的。于是复制到了编辑工具中，进行了相应项的修改。修改完毕后，拿到服务器上测试，结果执行sh XXX.sh后就一直提示</p><p><img src="/cnblogs/12430453/789895-20200306195431746-1019534379.png" class="lazyload placeholder" data-srcset="/cnblogs/12430453/789895-20200306195431746-1019534379.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /></p><p>很是奇怪？？？？脚本检查了没有错误的，为什么会有这个提示呢。<br />使用vi 命令打开检查下脚本<br />vi XXX.sh</p><p><img src="/cnblogs/12430453/789895-20200306195442560-1506252793.png" class="lazyload placeholder" data-srcset="/cnblogs/12430453/789895-20200306195442560-1506252793.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /></p><p>&nbsp;</p><p>&nbsp;</p><p>还是没什么问题呢？脚本中没有错误，也没有什么特殊的地方？？？？怎么回事呢？？？？</p><p>突然想到了这个脚本是从txt文件中粘贴出来的，会不会是格式的问题？？脚本在存在在txt中，在进行粘贴后可能会出现格式的问题，这个之前是很常见的问题！！！<br />于是抱着这个问题查找的态度。我们再次执行下vim命令，不过需要加参数了！！！！！</p><p>vim -b XXX.sh<br />1<br />我ca，果然如此，在复制进来后，怎么每行后面都多了&ldquo;&rdquo;&ldquo;^M&rdquo;这个玩意！！！！kengdie!!!<br />注：关于vi命令的详细使用方法及参数，我们后续再基础命令系列里会将</p><p><img src="/cnblogs/12430453/789895-20200306195506353-591684384.png" class="lazyload placeholder" data-srcset="/cnblogs/12430453/789895-20200306195506353-591684384.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /></p><p>&nbsp;</p><p>&nbsp;</p><p>几百行的代码，如果手动处理要处理到什么时候？要天荒地老了吧。</p><p>好，这里我们来进行快速处理！</p><p>sed -i 's/\r//g' javaInstall.sh<br /><img src="/cnblogs/12430453/789895-20200306195519061-1807506073.png" class="lazyload placeholder" data-srcset="/cnblogs/12430453/789895-20200306195519061-1807506073.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /></p><p>&nbsp;</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>linux学习（小白篇）</title>
      <link href="/2020/03/02/cnblogs/12397911/"/>
      <url>/2020/03/02/cnblogs/12397911/</url>
      
        <content type="html"><![CDATA[<div class="cnblogs_code"><pre>当前服务器：centos <span style="color: #800080;">7</span><span style="color: #000000;"><p>shell命令框：xshell</p><p>文件预览及上传：xftp （界面化软件，非常好用）</p><p>数据库连接：navicat</span></pre></p></div><p>&nbsp;</p><p>此文是在学习linux时做一个指令合集，方便自己查阅</p><div class="cnblogs_code"><pre><span style="color: #000000;">进文件夹：cd xxx返回最上级文件夹：cd </span>/<span style="color: #000000;">查看当前文件夹的所有文件：ls<br />访问linux本地的网站端口：curl http://localhost:[端口号]<br /><br />前期准备：<a href="#netcoreinstall">安装netcore环境</a>(点击直接跳转)，参照<a href="https://www.cnblogs.com/v587yy/p/12148087.html">https://www.cnblogs.com/v587yy/p/12148087.html</a><br />netcore网站发布后可使用xftp上传到linux服务器，进入网站所在文件夹之后netcore网站可使用dotnet xxx.dll运行，运行后想要在外网访问，需要搭建<a href="https://www.cnblogs.com/wangpengzong/p/12530605.html" target="_blank">nginx</a>(点击直接跳转)</span></pre></div><div class="cnblogs_code"><pre>1.查看所有进程：ps -<span style="color: #000000;">ef<p></span>2.查看特定进程：ps -ef |<span style="color: #000000;">grep redis</p><p>ps:将某个进程显示出来<br></span>-<span style="color: #000000;">A 　显示所有程序。<br></span>-e 　此参数的效果和指定”A”<span style="color: #000000;">参数相同。<br></span>-<span style="color: #000000;">f 　显示UID,PPIP,C与STIME栏位。<br>grep命令是查找<br>中间的</span>|<span style="color: #000000;">是管道命令 是指ps命令与grep同时执行</p><p>这条命令的意思是显示有关redis有关的进程<br /><br />3.查看端口：netstat -ntulp  #查看哪些端口被打开</span>：<span>netstat -anp</span></pre></p><pre><em><span style="color: #000000;"><br />4.查看特定端口：netstat -ntulp | grep 80<br />5.关闭端口号：iptables -A INPUT -p tcp --drop [端口号]-j DROP<br />6.打开端口号：打开端口号：iptables -I INPUT -ptcp --dport</span></em>[端口号]<em id="__mceDel"><em id="__mceDel"><span>-j ACCEPT <br /><br /></span><span>7.kill[参数][进程号] <br />kill </span>-9 4394<span> kill<br />就是给某个进程id发送了一个信号。默认发送的信号是SIGTERM，而kill </span>-9发送的信号是SIGKILL，即exit。<br />exit信号不会被系统阻塞，所以kill -9能顺利杀掉进程。当然你也可以使用kill发送其他信号给进程。</em></em></pre><pre><em id="__mceDel"><em id="__mceDel"><br />摘自<a href="https://www.cnblogs.com/yiyangl/p/11130577.html">https://www.cnblogs.com/yiyangl/p/11130577.html<br /></a><a href="https://baijiahao.baidu.com/s?id=1610751947194251627&amp;wfr=spider&amp;for=pc">https://baijiahao.baidu.com/s?id=1610751947194251627&amp;wfr=spider&amp;for=pc</a><a href="https://www.cnblogs.com/yiyangl/p/11130577.html"><br /></a></em></em></pre></div><div class="cnblogs_code"><pre><span style="color: #000000;">创建服务定义文件：<p>sudo nano </span>/etc/systemd/system/kestrel-<span style="color: #000000;">hellomvc.service<br>以下是应用的示例服务文件：</span></pre></p><div class="cnblogs_code"><pre><span style="color: #000000;">[Unit]Description</span>=<span style="color: #000000;">Example .NET Web API App running on Ubuntu <p>[Service]<br>WorkingDirectory</span>=/var/aspnetcore/hellomvc<br>ExecStart=/usr/bin/dotnet /<span style="color: #0000ff;">var</span>/aspnetcore/hellomvc/hellomvc.dll<br>Restart=<span style="color: #000000;">always</p><h1 id="Restart-service-after-10-seconds-if-the-dotnet-service-crashes"><a href="#Restart-service-after-10-seconds-if-the-dotnet-service-crashes" class="headerlink" title="Restart service after 10 seconds if the dotnet service crashes:"></a>Restart service after </span>10 seconds <span style="color: #0000ff;">if</span><span style="color: #000000;"> the dotnet service crashes:</h1><p>RestartSec</span>=10<span style="color: #000000;"><br>SyslogIdentifier</span>=dotnet-<span style="color: #000000;">example<br>User</span>=<span style="color: #000000;">xxx<br>Environment</span>=ASPNETCORE_ENVIRONMENT=<span style="color: #000000;">Development</p><p>[Install]<br>WantedBy</span>=multi-user.target</pre></p></div><pre></pre><pre><span style="color: #000000;">保存文件并启用服务。<p>systemctl enable kestrel</span>-<span style="color: #000000;">hellomvc.service<br>启动服务并验证其是否正在运行。</p><p>systemctl start kestrel</span>-<span style="color: #000000;">hellomvc.service<br>systemctl status kestrel</span>-<span style="color: #000000;">hellomvc.service<br>您需要使用应用 dll 的路径将工作目录（ 路径到您的应用和Exec Start）设置为文件夹。默认情况下，这就足够了。<br /><br />摘自<a href="https://blog.csdn.net/wojiaosha123/article/details/98784936">https://blog.csdn.net/wojiaosha123/article/details/98784936</a></span></pre></p></div><p>&nbsp;</p><div class="cnblogs_code"><div id="netcoreinstall">centos安装.net core 环境</div><pre><span style="color: #000000;">sudo yum update注册Microsoft签名密钥，每个机器只要注册一次就可以sudo rpm </span>-Uvh https:<span style="color: #008000;">//</span><span style="color: #008000;">packages.microsoft.com/config/rhel/7/packages-microsoft-prod.rpm</span><span style="color: #000000;">安装.Net Core SDK ，这里根据项目环境，需要安装2.2版的。不同的开发环境选择对应的运行时版本sudo yum install dotnet</span>-sdk-2.2<span style="color: #000000;"><p>完成后，通过命令，可以看出.net core的版本</p><p>dotnet </span>–<span style="color: #000000;">version</p><p>摘自https:</span><span style="color: #008000;">//</span><span style="color: #008000;"><a href="http://www.cnblogs.com/v587yy/p/12148087.html">www.cnblogs.com/v587yy/p/12148087.html</a></span></pre></p></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>NetCore.SignalR.Demo演示</title>
      <link href="/2019/07/12/cnblogs/11175665/"/>
      <url>/2019/07/12/cnblogs/11175665/</url>
      
        <content type="html"><![CDATA[<p>项目github，点击<a title="NetCore.SignalR.Demo" href="https://github.com/wangpengzong/NetCore.SignalR.Demo" target="_blank">https://github.com/wangpengzong/NetCore.SignalR.Demo</a></p><p>&nbsp;</p><p>1.打开服务端Server（\SignalR.Server\bin\Debug\netcoreapp2.2\win10-x64\SignalR.Server.exe）</p><p>&nbsp;</p><p>2.打开客户端，开5个标签页，分别是</p><p><span style="font-family: 宋体;">两个</span>http://localhost:63891/test/index&nbsp; &nbsp; &nbsp;groupid：1，用户1，identifier = "00000000-0000-0000-0000-000000000000"</p><p><span style="font-family: 宋体;">一个</span>http://localhost:63891/test/index1&nbsp;&nbsp;&nbsp;groupid：1，用户2，identifier = "11111111-1111-1111-1111-111111111111"</p><p><span style="font-family: 宋体;">一个</span>http://localhost:63891/test/index2&nbsp;&nbsp;&nbsp;groupid：2，用户3，identifier = "33333333-3333-3333-3333-333333333333"</p><p><span style="font-family: 宋体;">一个</span>http://localhost:63891/test/index3&nbsp;&nbsp;&nbsp;groupid：3，用户4，identifier = "44444444-4444-4444-4444-444444444444"</p><p>&nbsp;<img src="/cnblogs/11175665/789895-20190712135006227-2107371641.png" class="lazyload placeholder" data-srcset="/cnblogs/11175665/789895-20190712135006227-2107371641.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" width="965" height="573" /></p><p>&nbsp;</p><p>Javascript调用：</p><p><span style="font-family: 宋体;">在</span>test/index中的user框，输入00000000-0000-0000-0000-000000000000<span style="font-family: 宋体;">，</span>message输入hi，点击sendmessage，就可以在全部的标签页看到以上页面，此时调用的是</p><p>document.getElementById("sendButton").addEventListener("click", event =&gt; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const user = document.getElementById("userInput").value;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const message = document.getElementById("messageInput").value;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;connection.invoke("SendMessageToAll", { From: user, Content: message }).catch(err =&gt; console.error(err.toString()));</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event.preventDefault();</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}); &nbsp;&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>.net 客户端调用</p><p>再打开一个标签页，输入<a href="http://localhost:63891/test/SendMessageToAll"><span style="text-decoration: underline;">http://localhost:63891/test/SendMessageToAll</span></a></p><p>&nbsp;<img src="/cnblogs/11175665/789895-20190712135205933-637885315.png" class="lazyload placeholder" data-srcset="/cnblogs/11175665/789895-20190712135205933-637885315.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" width="1109" height="663" /></p><p>&nbsp;</p><p>&nbsp;</p><p>这个和上面的say hi都是调用SendMessageToAll方法，发送给所有人</p><p>&nbsp;</p><p>将此标签页输入<a href="http://localhost:63891/test/SendMessageToAll"><span style="text-decoration: underline;">http://localhost:63891/test/</span>SendMessageToUser</a>，调用SendMessageToUser方法，此时前两个页面显示00000000-0000-0000-0000-000000000000 says SendMessageTo1<span style="font-family: 宋体;">，这个是发给用户</span>1</p><p>&nbsp;<img src="/cnblogs/11175665/789895-20190712135227098-2050240776.png" class="lazyload placeholder" data-srcset="/cnblogs/11175665/789895-20190712135227098-2050240776.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" width="1096" height="666" /></p><p>&nbsp;</p><p>将此标签页输入<a href="http://localhost:63891/test/SendMessageToAll"><span style="text-decoration: underline;">http://localhost:63891/test/</span>SendMessageToGroup1</a>，调用SendMessageToMyGroup方法，此时前三个页面显示00000000-0000-0000-0000-000000000000 says SendMessageToGroup1<span style="font-family: 宋体;">，这个是发给组</span>1</p><p>&nbsp;<img src="/cnblogs/11175665/789895-20190712135246919-1887689710.png" class="lazyload placeholder" data-srcset="/cnblogs/11175665/789895-20190712135246919-1887689710.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" width="1087" height="657" /></p><p>&nbsp;</p><p>将此标签页输入<a href="http://localhost:63891/test/SendMessageToAll"><span style="text-decoration: underline;">http://localhost:63891/test/</span>SendMessageToGroup1and2</a>，调用SendMessageToMyGroup方法，此时前四个页面显示00000000-0000-0000-0000-000000000000 says SendMessageToGroup1<span style="font-family: 宋体;">，这个是发给组</span>1和组2</p><p>&nbsp;<img src="/cnblogs/11175665/789895-20190712135307144-1229518040.png" class="lazyload placeholder" data-srcset="/cnblogs/11175665/789895-20190712135307144-1229518040.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" width="1078" height="658" /></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>html标签从.net framework转移到.net standard(.net core 2.2)时遇到的坑及填坑</title>
      <link href="/2019/06/28/cnblogs/11103547/"/>
      <url>/2019/06/28/cnblogs/11103547/</url>
      
        <content type="html"><![CDATA[<p>在原来的.net framework mvc中html的标签可以使用下面的方法</p><div class="cnblogs_code"><pre><span style="color: #008080;"> 1</span> &lt;<span style="color: #0000ff;">select</span> <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">form-control</span><span style="color: #800000;">"</span> id=<span style="color: #800000;">"</span><span style="color: #800000;">categoryinfoid</span><span style="color: #800000;">"</span> name=<span style="color: #800000;">"</span><span style="color: #800000;">categoryinfoid</span><span style="color: #800000;">"</span>&gt;<span style="color: #008080;"> 2</span>                                     &lt;option value=<span style="color: #800000;">"</span><span style="color: #800000;">0</span><span style="color: #800000;">"</span>&gt;选择&lt;/option&gt;<span style="color: #008080;"> 3</span>                                     &lt;option value=<span style="color: #800000;">"</span><span style="color: #800000;">22</span><span style="color: #800000;">"</span> @(categoryinfoid == <span style="color: #800080;">22</span> ? <span style="color: #800000;">"</span><span style="color: #800000;">selected=selected</span><span style="color: #800000;">"</span> : <span style="color: #800000;">""</span>)&gt;内双&lt;/option&gt;<span style="color: #008080;"> 4</span>                                     &lt;option value=<span style="color: #800000;">"</span><span style="color: #800000;">23</span><span style="color: #800000;">"</span> @(categoryinfoid == <span style="color: #800080;">23</span> ? <span style="color: #800000;">"</span><span style="color: #800000;">selected=selected</span><span style="color: #800000;">"</span> : <span style="color: #800000;">""</span>)&gt;内三&lt;/option&gt;<span style="color: #008080;"> 5</span>                                     &lt;option value=<span style="color: #800000;">"</span><span style="color: #800000;">24</span><span style="color: #800000;">"</span> @(categoryinfoid == <span style="color: #800080;">24</span> ? <span style="color: #800000;">"</span><span style="color: #800000;">selected=selected</span><span style="color: #800000;">"</span> : <span style="color: #800000;">""</span>)&gt;内四&lt;/option&gt;<span style="color: #008080;"> 6</span>                                     &lt;option value=<span style="color: #800000;">"</span><span style="color: #800000;">32</span><span style="color: #800000;">"</span> @(categoryinfoid == <span style="color: #800080;">32</span> ? <span style="color: #800000;">"</span><span style="color: #800000;">selected=selected</span><span style="color: #800000;">"</span> : <span style="color: #800000;">""</span>)&gt;海双&lt;/option&gt;<span style="color: #008080;"> 7</span>                                     &lt;option value=<span style="color: #800000;">"</span><span style="color: #800000;">33</span><span style="color: #800000;">"</span> @(categoryinfoid == <span style="color: #800080;">33</span> ? <span style="color: #800000;">"</span><span style="color: #800000;">selected=selected</span><span style="color: #800000;">"</span> : <span style="color: #800000;">""</span>)&gt;海三&lt;/option&gt;<span style="color: #008080;"> 8</span>                                     &lt;option value=<span style="color: #800000;">"</span><span style="color: #800000;">34</span><span style="color: #800000;">"</span> @(categoryinfoid == <span style="color: #800080;">34</span> ? <span style="color: #800000;">"</span><span style="color: #800000;">selected=selected</span><span style="color: #800000;">"</span> : <span style="color: #800000;">""</span>)&gt;海四&lt;/option&gt;<span style="color: #008080;"> 9</span>                                     &lt;option value=<span style="color: #800000;">"</span><span style="color: #800000;">42</span><span style="color: #800000;">"</span> @(categoryinfoid == <span style="color: #800080;">42</span> ? <span style="color: #800000;">"</span><span style="color: #800000;">selected=selected</span><span style="color: #800000;">"</span> : <span style="color: #800000;">""</span>)&gt;阳双&lt;/option&gt;<span style="color: #008080;">10</span>                                     &lt;option value=<span style="color: #800000;">"</span><span style="color: #800000;">43</span><span style="color: #800000;">"</span> @(categoryinfoid == <span style="color: #800080;">43</span> ? <span style="color: #800000;">"</span><span style="color: #800000;">selected=selected</span><span style="color: #800000;">"</span> : <span style="color: #800000;">""</span>)&gt;阳三&lt;/option&gt;<span style="color: #008080;">11</span>                                     &lt;option value=<span style="color: #800000;">"</span><span style="color: #800000;">44</span><span style="color: #800000;">"</span> @(categoryinfoid == <span style="color: #800080;">44</span> ? <span style="color: #800000;">"</span><span style="color: #800000;">selected=selected</span><span style="color: #800000;">"</span> : <span style="color: #800000;">""</span>)&gt;阳四&lt;/option&gt;<span style="color: #008080;">12</span>                                     &lt;option value=<span style="color: #800000;">"</span><span style="color: #800000;">52</span><span style="color: #800000;">"</span> @(categoryinfoid == <span style="color: #800080;">52</span> ? <span style="color: #800000;">"</span><span style="color: #800000;">selected=selected</span><span style="color: #800000;">"</span> : <span style="color: #800000;">""</span>)&gt;套双&lt;/option&gt;<span style="color: #008080;">13</span>                                     &lt;option value=<span style="color: #800000;">"</span><span style="color: #800000;">53</span><span style="color: #800000;">"</span> @(categoryinfoid == <span style="color: #800080;">53</span> ? <span style="color: #800000;">"</span><span style="color: #800000;">selected=selected</span><span style="color: #800000;">"</span> : <span style="color: #800000;">""</span>)&gt;套三&lt;/option&gt;<span style="color: #008080;">14</span>                                     &lt;option value=<span style="color: #800000;">"</span><span style="color: #800000;">54</span><span style="color: #800000;">"</span> @(categoryinfoid == <span style="color: #800080;">54</span> ? <span style="color: #800000;">"</span><span style="color: #800000;">selected=selected</span><span style="color: #800000;">"</span> : <span style="color: #800000;">""</span>)&gt;套四&lt;/option&gt;<span style="color: #008080;">15</span>                                 &lt;/<span style="color: #0000ff;">select</span>&gt;</pre></div><p>此时html标签里面属性与值的对应要求不是很高，但是在.net core 2.2中，html标签里面属性与值的必须要对应要求，上面得这种情况会报错</p><div class="cnblogs_code"><pre>The tag helper <span style="color: #800000;">'</span><span style="color: #800000;">option</span><span style="color: #800000;">'</span> must not have C# <span style="color: #0000ff;">in</span> the element<span style="color: #800000;">'</span><span style="color: #800000;">s attribute declaration area.</span></pre></div><p>标记帮助器"选项"在元素的属性声明区域中不得包含 C# 语句。</p><p>编辑器会认为，@(&ldquo;...&rdquo;)不是一个属性。</p><p>解决办法很奇特，看代码：</p><div class="cnblogs_code"><pre><span style="color: #008080;"> 1</span> &lt;<span style="color: #0000ff;">select</span> <span style="color: #0000ff;">class</span>=<span style="color: #800000;">"</span><span style="color: #800000;">form-control</span><span style="color: #800000;">"</span> id=<span style="color: #800000;">"</span><span style="color: #800000;">categoryinfoid</span><span style="color: #800000;">"</span> name=<span style="color: #800000;">"</span><span style="color: #800000;">categoryinfoid</span><span style="color: #800000;">"</span>&gt;<span style="color: #008080;"> 2</span>                                     &lt;option value=<span style="color: #800000;">"</span><span style="color: #800000;">0</span><span style="color: #800000;">"</span>&gt;选择&lt;/option&gt;<span style="color: #008080;"> 3</span>                                     &lt;!option value=<span style="color: #800000;">"</span><span style="color: #800000;">22</span><span style="color: #800000;">"</span> @(categoryinfoid==<span style="color: #800080;">22</span> ? <span style="color: #800000;">"</span><span style="color: #800000;">selected=selected</span><span style="color: #800000;">"</span> : <span style="color: #800000;">""</span> )&gt;内双&lt;/!option&gt;<span style="color: #008080;"> 4</span>                                     &lt;!option value=<span style="color: #800000;">"</span><span style="color: #800000;">23</span><span style="color: #800000;">"</span> @(categoryinfoid==<span style="color: #800080;">23</span> ? <span style="color: #800000;">"</span><span style="color: #800000;">selected=selected</span><span style="color: #800000;">"</span> : <span style="color: #800000;">""</span> )&gt;内三&lt;/!option&gt;<span style="color: #008080;"> 5</span>                                     &lt;!option value=<span style="color: #800000;">"</span><span style="color: #800000;">24</span><span style="color: #800000;">"</span> @(categoryinfoid==<span style="color: #800080;">24</span> ? <span style="color: #800000;">"</span><span style="color: #800000;">selected=selected</span><span style="color: #800000;">"</span> : <span style="color: #800000;">""</span> )&gt;内四&lt;/!option&gt;<span style="color: #008080;"> 6</span>                                     &lt;!option value=<span style="color: #800000;">"</span><span style="color: #800000;">32</span><span style="color: #800000;">"</span> @(categoryinfoid==<span style="color: #800080;">32</span> ? <span style="color: #800000;">"</span><span style="color: #800000;">selected=selected</span><span style="color: #800000;">"</span> : <span style="color: #800000;">""</span> )&gt;海双&lt;/!option&gt;<span style="color: #008080;"> 7</span>                                     &lt;!option value=<span style="color: #800000;">"</span><span style="color: #800000;">33</span><span style="color: #800000;">"</span> @(categoryinfoid==<span style="color: #800080;">33</span> ? <span style="color: #800000;">"</span><span style="color: #800000;">selected=selected</span><span style="color: #800000;">"</span> : <span style="color: #800000;">""</span> )&gt;海三&lt;/!option&gt;<span style="color: #008080;"> 8</span>                                     &lt;!option value=<span style="color: #800000;">"</span><span style="color: #800000;">34</span><span style="color: #800000;">"</span> @(categoryinfoid==<span style="color: #800080;">34</span> ? <span style="color: #800000;">"</span><span style="color: #800000;">selected=selected</span><span style="color: #800000;">"</span> : <span style="color: #800000;">""</span> )&gt;海四&lt;/!option&gt;<span style="color: #008080;"> 9</span>                                     &lt;!option value=<span style="color: #800000;">"</span><span style="color: #800000;">42</span><span style="color: #800000;">"</span> @(categoryinfoid==<span style="color: #800080;">42</span> ? <span style="color: #800000;">"</span><span style="color: #800000;">selected=selected</span><span style="color: #800000;">"</span> : <span style="color: #800000;">""</span> )&gt;阳双&lt;/!option&gt;<span style="color: #008080;">10</span>                                     &lt;!option value=<span style="color: #800000;">"</span><span style="color: #800000;">43</span><span style="color: #800000;">"</span> @(categoryinfoid==<span style="color: #800080;">43</span> ? <span style="color: #800000;">"</span><span style="color: #800000;">selected=selected</span><span style="color: #800000;">"</span> : <span style="color: #800000;">""</span> )&gt;阳三&lt;/!option&gt;<span style="color: #008080;">11</span>                                     &lt;!option value=<span style="color: #800000;">"</span><span style="color: #800000;">44</span><span style="color: #800000;">"</span> @(categoryinfoid==<span style="color: #800080;">44</span> ? <span style="color: #800000;">"</span><span style="color: #800000;">selected=selected</span><span style="color: #800000;">"</span> : <span style="color: #800000;">""</span> )&gt;阳四&lt;/!option&gt;<span style="color: #008080;">12</span>                                     &lt;!option value=<span style="color: #800000;">"</span><span style="color: #800000;">52</span><span style="color: #800000;">"</span> @(categoryinfoid==<span style="color: #800080;">52</span> ? <span style="color: #800000;">"</span><span style="color: #800000;">selected=selected</span><span style="color: #800000;">"</span> : <span style="color: #800000;">""</span> )&gt;套双&lt;/!option&gt;<span style="color: #008080;">13</span>                                     &lt;!option value=<span style="color: #800000;">"</span><span style="color: #800000;">53</span><span style="color: #800000;">"</span> @(categoryinfoid==<span style="color: #800080;">53</span> ? <span style="color: #800000;">"</span><span style="color: #800000;">selected=selected</span><span style="color: #800000;">"</span> : <span style="color: #800000;">""</span> )&gt;套三&lt;/!option&gt;<span style="color: #008080;">14</span>                                     &lt;!option value=<span style="color: #800000;">"</span><span style="color: #800000;">54</span><span style="color: #800000;">"</span> @(categoryinfoid==<span style="color: #800080;">54</span> ? <span style="color: #800000;">"</span><span style="color: #800000;">selected=selected</span><span style="color: #800000;">"</span> : <span style="color: #800000;">""</span> )&gt;套四&lt;/!option&gt;<span style="color: #008080;">15</span>                                 &lt;/<span style="color: #0000ff;">select</span>&gt;</pre></div><p>每个要使用@(&ldquo;...&rdquo;)的标签前面加一个&ldquo;!&rdquo;号就OK了，不明觉厉</p>]]></content>
      
      
      
        <tags>
            
            <tag> .Net Core 2.2 </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NHiberante从.net framework转移到.net standard(.net core 2.2)时遇到的坑及填坑</title>
      <link href="/2019/06/28/cnblogs/11103355/"/>
      <url>/2019/06/28/cnblogs/11103355/</url>
      
        <content type="html"><![CDATA[<p><span style="color: #ff0000;"><span style="color: #000000;">在.net&nbsp;framework中的创建session代码先贴一个</span></span></p><p>&nbsp;</p><div class="cnblogs_code"><pre><span style="color: #008080;"> 1</span>     <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> SessionBuilder</span><span style="color: #008080;"> 2</span> <span style="color: #000000;">    {</span><span style="color: #008080;"> 3</span>         <span style="color: #0000ff;">private</span> <span style="color: #0000ff;">static</span> ISessionFactory _sessionFactory = <span style="color: #0000ff;">null</span><span style="color: #000000;">;</span><span style="color: #008080;"> 4</span> <span style="color: #008080;"> 5</span>         <span style="color: #0000ff;">public</span><span style="color: #000000;"> SessionBuilder()</span><span style="color: #008080;"> 6</span> <span style="color: #000000;">        {</span><span style="color: #008080;"> 7</span>             <span style="color: #0000ff;">if</span> (_sessionFactory == <span style="color: #0000ff;">null</span><span style="color: #000000;">)</span><span style="color: #008080;"> 8</span> <span style="color: #000000;">            {</span><span style="color: #008080;"> 9</span>                 <span style="color: #008000;">//</span><span style="color: #008000;">创建ISessionFactory</span><span style="color: #008080;">10</span>                 _sessionFactory =<span style="color: #000000;"> GetSessionFactory();</span><span style="color: #008080;">11</span> <span style="color: #000000;">            }</span><span style="color: #008080;">12</span> <span style="color: #000000;">        }</span><span style="color: #008080;">13</span> <span style="color: #008080;">14</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span><span style="color: #008080;">15</span>         <span style="color: #808080;">///</span><span style="color: #008000;"> 创建ISessionFactory</span><span style="color: #008080;">16</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span><span style="color: #008080;">17</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;returns&gt;&lt;/returns&gt;</span><span style="color: #008080;">18</span>         <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span><span style="color: #000000;"> ISessionFactory GetSessionFactory()</span><span style="color: #008080;">19</span> <span style="color: #000000;">        {</span><span style="color: #008080;">20</span> <span style="color: #000000;">            //HibernatingRhinos.Profiler.Appender.NHibernate.NHibernateProfiler.Initialize();</span><span style="color: #008080;">21</span> <span style="color: #008080;">22</span>             <span style="color: #0000ff;">var</span> mappers = <span style="color: #0000ff;">new</span><span style="color: #000000;"> ModelMapper();</span><span style="color: #008080;">23</span> <span style="color: #000000;">            mappers.AddMappings(Assembly.GetExecutingAssembly().GetExportedTypes());</span><span style="color: #008080;">24</span> <span style="color: #008080;">25</span>             <span style="color: #0000ff;">var</span> cfg = <span style="color: #0000ff;">new</span><span style="color: #000000;"> Configuration().Configure();</span><span style="color: #008080;">26</span>             cfg.AddDeserializedMapping(mappers.CompileMappingForAllExplicitlyAddedEntities(), <span style="color: #800000;">""</span><span style="color: #000000;">);</span><span style="color: #008080;">27</span> <span style="color: #008080;">28</span>             <span style="color: #0000ff;">return</span><span style="color: #000000;"> cfg.BuildSessionFactory();</span><span style="color: #008080;">29</span> <span style="color: #000000;">        }</span><span style="color: #008080;">30</span> <span style="color: #008080;">31</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span><span style="color: #008080;">32</span>         <span style="color: #808080;">///</span><span style="color: #008000;"> 打开ISession</span><span style="color: #008080;">33</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span><span style="color: #008080;">34</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;returns&gt;&lt;/returns&gt;</span><span style="color: #008080;">35</span>         <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span><span style="color: #000000;"> ISession GetSession()</span><span style="color: #008080;">36</span> <span style="color: #000000;">        {</span><span style="color: #008080;">37</span>             <span style="color: #0000ff;">if</span> (_sessionFactory == <span style="color: #0000ff;">null</span> ||<span style="color: #000000;"> _sessionFactory.IsClosed)</span><span style="color: #008080;">38</span> <span style="color: #000000;">            {</span><span style="color: #008080;">39</span>                 <span style="color: #008000;">//</span><span style="color: #008000;">创建ISessionFactory</span><span style="color: #008080;">40</span>                 _sessionFactory =<span style="color: #000000;"> GetSessionFactory();</span><span style="color: #008080;">41</span> <span style="color: #000000;">            }</span><span style="color: #008080;">42</span> <span style="color: #000000;">        }</span><span style="color: #008080;">43</span> <span style="color: #008080;">44</span> <span style="color: #008080;">45</span>         <span style="color: #0000ff;">#region</span> 打开一个新的Session<span style="color: #008080;">46</span>         <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span><span style="color: #000000;"> ISession OpenSession()</span><span style="color: #008080;">47</span> <span style="color: #000000;">        {</span><span style="color: #008080;">48</span>             <span style="color: #0000ff;">return</span><span style="color: #000000;"> _sessionFactory.OpenSession();</span><span style="color: #008080;">49</span><span style="color: #008080;">50</span> <span style="color: #000000;">        }</span><span style="color: #008080;">51</span>         <span style="color: #0000ff;">#endregion</span><span style="color: #008080;">52</span> <span style="color: #008080;">53</span>     }</pre></div><p>与数据库的交互时，需要先在web.config配置（数据库为sql server）</p><div class="cnblogs_code"><pre>&lt;configuration&gt;  &lt;configSections&gt;    &lt;section name=<span style="color: #800000;">"</span><span style="color: #800000;">hibernate-configuration</span><span style="color: #800000;">"</span> type=<span style="color: #800000;">"</span><span style="color: #800000;">NHibernate.Cfg.ConfigurationSectionHandler, NHibernate</span><span style="color: #800000;">"</span> /&gt;  &lt;/configSections&gt;  &lt;!--NHibernate配置开始--&gt;  &lt;hibernate-configuration xmlns=<span style="color: #800000;">"</span><span style="color: #800000;">urn:nhibernate-configuration-2.2</span><span style="color: #800000;">"</span>&gt;    &lt;session-factory&gt;      &lt;property name=<span style="color: #800000;">"</span><span style="color: #800000;">connection.provider</span><span style="color: #800000;">"</span>&gt;NHibernate.Connection.DriverConnectionProvider&lt;/property&gt;      &lt;property name=<span style="color: #800000;">"</span><span style="color: #800000;">connection.driver_class</span><span style="color: #800000;">"</span>&gt;NHibernate.Driver.SqlClientDriver&lt;/property&gt;      &lt;property name=<span style="color: #800000;">"</span><span style="color: #800000;">dialect</span><span style="color: #800000;">"</span>&gt;NHibernate.Dialect.MsSql2012Dialect&lt;/property&gt;      &lt;property name=<span style="color: #800000;">"</span><span style="color: #800000;">show_sql</span><span style="color: #800000;">"</span>&gt;<span style="color: #0000ff;">false</span>&lt;/property&gt;      &lt;property name=<span style="color: #800000;">"</span><span style="color: #800000;">connection.connection_string_name</span><span style="color: #800000;">"</span>&gt;ylsdai&lt;/property&gt;      &lt;property name=<span style="color: #800000;">"</span><span style="color: #800000;">adonet.batch_size</span><span style="color: #800000;">"</span>&gt;<span style="color: #800080;">30</span>&lt;/property&gt;      &lt;property name=<span style="color: #800000;">"</span><span style="color: #800000;">generate_statistics</span><span style="color: #800000;">"</span>&gt;<span style="color: #0000ff;">false</span>&lt;/property&gt;      &lt;property name=<span style="color: #800000;">"</span><span style="color: #800000;">format_sql</span><span style="color: #800000;">"</span>&gt;<span style="color: #0000ff;">true</span>&lt;/property&gt;      &lt;property name=<span style="color: #800000;">"</span><span style="color: #800000;">command_timeout</span><span style="color: #800000;">"</span>&gt;<span style="color: #800080;">60</span>&lt;/property&gt;      &lt;property name=<span style="color: #800000;">"</span><span style="color: #800000;">current_session_context_class</span><span style="color: #800000;">"</span>&gt;web&lt;/property&gt;      &lt;!--&lt;property name=<span style="color: #800000;">"</span><span style="color: #800000;">cache.provider_class</span><span style="color: #800000;">"</span>&gt;NHibernate.Caches.SysCache2.SysCacheProvider,NHibernate.Caches.SysCache2&lt;/property&gt;      &lt;property name=<span style="color: #800000;">"</span><span style="color: #800000;">cache.default_expiration</span><span style="color: #800000;">"</span>&gt;<span style="color: #800080;">120</span>&lt;/property&gt;      &lt;property name=<span style="color: #800000;">"</span><span style="color: #800000;">cache.use_second_level_cache</span><span style="color: #800000;">"</span>&gt;<span style="color: #0000ff;">true</span>&lt;/property&gt;      &lt;property name=<span style="color: #800000;">"</span><span style="color: #800000;">cache.use_query_cache</span><span style="color: #800000;">"</span>&gt;<span style="color: #0000ff;">true</span>&lt;/property&gt;--&gt;    &lt;/session-factory&gt;  &lt;/hibernate-configuration&gt;  &lt;!--NHibernate配置结束--&gt;  &lt;connectionStrings&gt;    &lt;!--test_db--&gt;    &lt;!--&lt;add name=<span style="color: #800000;">"</span><span style="color: #800000;">ylsdai</span><span style="color: #800000;">"</span> connectionString=<span style="color: #800000;">"</span><span style="color: #800000;">data source=0.0.0.1,111;database=test_db;uid=sa;pwd=123456</span><span style="color: #800000;">"</span> providerName=<span style="color: #800000;">"</span><span style="color: #800000;">System.Data.SqlClient</span><span style="color: #800000;">"</span> /&gt;  &lt;/connectionStrings&gt;&lt;/configuration&gt;</pre></div><p>映射类</p><div class="cnblogs_code"><pre><span style="color: #0000ff;">using</span><span style="color: #000000;"> NHibernate.Mapping.ByCode;</span><span style="color: #0000ff;">using</span><span style="color: #000000;"> NHibernate.Mapping.ByCode.Conformist;<p></span><span style="color: #0000ff;">namespace</span><span style="color: #000000;"> ClassMapping<br>{<br>    </span><span style="color: #0000ff;">#region</span> CityMap<br>    <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> CityMap : ClassMapping&lt;City&gt;<span style="color: #000000;"><br>    {<br>        </span><span style="color: #0000ff;">public</span><span style="color: #000000;"> CityMap()<br>        {</p><pre><code>        SelectBeforeUpdate(&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);        DynamicUpdate(&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;Cache(p =&amp;gt; p.Usage(CacheUsage.ReadWrite));&lt;/span&gt;        Id(p =&amp;gt; p.CityId, map =&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; map.Generator(Generators.Native));        Property(p &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; p.OldCityId);        Property(p &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; p.ParentId);        Property(p &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; p.CityName);        Property(p &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; p.EnCityName);        Property(p &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; p.CityImgUrl);        Property(p &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; p.LatLng);        Property(p &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; p.Keywords);        Property(p &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; p.IsRecommend);        Property(p &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; p.IsDepart);        Property(p &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; p.AreaId);        Property(p &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; p.CityContent);    &#125;&#125;&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;#endregion&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;</code></pre><p>}</span></pre></p></div><p>&nbsp;</p><p>将实体写好，就可以进行实现了</p><p>&nbsp;</p><p>但是在迁移到.net core的时候遇到的问题：</p><p>1. 创建Session，使用.net&nbsp;framework的方法将不可用</p><p>2.config中对于NHiberante的配置也读取不到</p><p>3.基于问题1，映射类也无法进行实现</p><p>好在是在.net core中有一个辅助的开源框架<a href="http://fluentnhibernate.org/">Fluent NHibernate</a>，它可以帮我解决上面遇到的问题，但是在具体使用时也踩了不少坑</p><p>1.网上的文档基本都是映射类在xml中的，但是当实际项目在.cs文件中时，大量的文件映射从.cs文件迁到到.xml文件将变得特别繁琐</p><p>最后的解决办法，创建session方法中GetSessionFactory方法做以下修改</p><div class="cnblogs_code"><pre>        <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span>        <span style="color: #808080;">///</span><span style="color: #008000;"> 创建ISessionFactory        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span>        <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;returns&gt;&lt;/returns&gt;</span>        <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span><span style="color: #000000;"> ISessionFactory GetSessionFactory()        {            </span><span style="color: #0000ff;">var</span> assemblyName = Assembly.Load(<span style="color: #800000;">"</span><span style="color: #800000;">ClassMapping</span><span style="color: #800000;">"</span><span style="color: #000000;">);<pre><code>        NHibernate.Cfg.Configuration setCfg(NHibernate.Cfg.Configuration c)        &#123;            c.Properties.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;show_sql&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);            c.Properties.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;adonet.batch_size&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;1000&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);            c.Properties.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;generate_statistics&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;false&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);            c.Properties.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;format_sql&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);            c.Properties.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;command_timeout&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;60&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);            c.Properties.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;current_session_context_class&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;web&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; c;        &#125;        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; Fluently.Configure().Database(</code></pre><p>FluentNHibernate.Cfg.Db.MsSqlConfiguration.MsSql2012.ConnectionString(</span><span style="color: #800000;">“</span><span style="color: #800000;">Server=0.0.0.1,111;Database=test_db;Uid=sa;Pwd=123456;</span><span style="color: #800000;">“</span><span style="color: #000000;">))<br>                        .Mappings(m </span>=&gt;<span style="color: #000000;"> m.FluentMappings.AddFromAssembly(assemblyName))<br>                        .ExposeConfiguration(c </span>=&gt; <span style="color: #0000ff;">new</span> SchemaUpdate(c).Execute(<span style="color: #0000ff;">true</span>, <span style="color: #0000ff;">false</span><span style="color: #000000;">))<br>                        .ExposeConfiguration(c </span>=&gt;<span style="color: #000000;"> setCfg(c))<br>                        </span><span style="color: #008000;">//</span><span style="color: #008000;">.ExposeConfiguration(f =&gt; f.SetInterceptor(new SqlStatementInterceptor()))</span><br><span style="color: #000000;">                        .BuildSessionFactory();</p><pre><code>    &#125;&lt;/span&gt;&lt;/pre&gt;</code></pre></div><p>其中映射类的引入在</p><p>.Mappings(m =&gt; m.FluentMappings.AddFromAssembly(assemblyName))</p><p>这句话，是将命名空间引入，所以具体映射类可以重新新建一个项目，名字就叫做ClassMapping，具体的映射类做以下修改</p><div class="cnblogs_code"><pre><span style="color: #008080;"> 1</span> <span style="color: #0000ff;">using</span><span style="color: #000000;"> Entity;</span><span style="color: #008080;"> 2</span> <span style="color: #0000ff;">using</span><span style="color: #000000;"> FluentNHibernate.Mapping;</span><span style="color: #008080;"> 3</span> <span style="color: #008080;"> 4</span> <span style="color: #0000ff;">namespace</span><span style="color: #000000;"> ClassMapping</span><span style="color: #008080;"> 5</span> <span style="color: #000000;">{</span><span style="color: #008080;"> 6</span>     <span style="color: #0000ff;">#region</span> CityMap<span style="color: #008080;"> 7</span>     <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> CityMap : ClassMap&lt;City&gt;<span style="color: #008080;"> 8</span> <span style="color: #000000;">    {</span><span style="color: #008080;"> 9</span>         <span style="color: #0000ff;">public</span><span style="color: #000000;"> CityMap()</span><span style="color: #008080;">10</span> <span style="color: #000000;">        {</span><span style="color: #008080;">11</span>             Table(<span style="color: #800000;">"</span><span style="color: #800000;">City</span><span style="color: #800000;">"</span><span style="color: #000000;">);</span><span style="color: #008080;">12</span> <span style="color: #008080;">13</span>             <span style="color: #008000;">//</span><span style="color: #008000;">SelectBeforeUpdate(true);</span><span style="color: #008080;">14</span>             <span style="color: #008000;">//</span><span style="color: #008000;">DynamicUpdate(true);</span><span style="color: #008080;">15</span>             <span style="color: #008000;">//</span><span style="color: #008000;">Cache(p =&gt; p.Usage(CacheUsage.ReadWrite));</span><span style="color: #008080;">16</span>             Id(p =&gt;<span style="color: #000000;"> p.CityId);</span><span style="color: #008080;">17</span>             Map(p =&gt;<span style="color: #000000;"> p.OldCityId);</span><span style="color: #008080;">18</span>             Map(p =&gt;<span style="color: #000000;"> p.ParentId);</span><span style="color: #008080;">19</span>             Map(p =&gt;<span style="color: #000000;"> p.CityName);</span><span style="color: #008080;">20</span>             Map(p =&gt;<span style="color: #000000;"> p.EnCityName);</span><span style="color: #008080;">21</span>             Map(p =&gt;<span style="color: #000000;"> p.CityImgUrl);</span><span style="color: #008080;">22</span>             Map(p =&gt;<span style="color: #000000;"> p.LatLng);</span><span style="color: #008080;">23</span>             Map(p =&gt;<span style="color: #000000;"> p.Keywords);</span><span style="color: #008080;">24</span>             Map(p =&gt;<span style="color: #000000;"> p.IsRecommend);</span><span style="color: #008080;">25</span>             Map(p =&gt;<span style="color: #000000;"> p.IsDepart);</span><span style="color: #008080;">26</span>             Map(p =&gt;<span style="color: #000000;"> p.AreaId);</span><span style="color: #008080;">27</span>             Map(p =&gt;<span style="color: #000000;"> p.CityContent);</span><span style="color: #008080;">28</span> <span style="color: #000000;">        }</span><span style="color: #008080;">29</span> <span style="color: #000000;">    }</span><span style="color: #008080;">30</span>     <span style="color: #0000ff;">#endregion</span><span style="color: #008080;">31</span> <span style="color: #008080;">32</span> }</pre></div><p>&nbsp;</p><p>在迁移过程中会碰到映射关系的迁移</p><p>以前的版本中为</p><div class="cnblogs_code"><pre>            OneToOne(p =&gt; p.City, map =&gt;<span style="color: #000000;">            {                map.Cascade(Cascade.All);                map.Lazy(LazyRelation.Proxy);            });</span><span style="color: #008000;">//</span><span style="color: #008000;">一对一</span><span style="color: #000000;">            ManyToOne(p </span>=&gt; p.Province, map =&gt; map.Column(<span style="color: #800000;">"</span><span style="color: #800000;">ProvinceId</span><span style="color: #800000;">"</span>));<span style="color: #008000;">//</span><span style="color: #008000;">多对一</span><span style="color: #000000;">            Bag(p </span>=&gt; p.Counties, map =&gt;<span style="color: #000000;">            {                map.Key(k </span>=&gt; k.Column(<span style="color: #800000;">"</span><span style="color: #800000;">CountyId</span><span style="color: #800000;">"</span><span style="color: #000000;">));                map.OrderBy(k </span>=&gt;<span style="color: #000000;"> k.SortId);            }, rel </span>=&gt; rel.OneToMany());<span style="color: #008000;">//</span><span style="color: #008000;">一对多</span></pre></div><p>.net core版本中对应为</p><div class="cnblogs_code"><pre>HasOne(p =&gt; p.City).Cascade.All().LazyLoad();<span style="color: #008000;">//</span><span style="color: #008000;">一对一<p></span><span style="color: #008000;">//</span><span style="color: #008000;">References&lt;Province&gt;(r =&gt; r.Province).Column(“ProvinceId”).ForeignKey(“ProvinceId”).Cascade.None();</span><span style="color: #008000;">//</span><span style="color: #008000;">多对一，在实际运用中会出现问题</span><br><span style="color: #000000;"><br>HasMany(p </span>=&gt; p.Counties).KeyColumn(<span style="color: #800000;">“</span><span style="color: #800000;">CountyId</span><span style="color: #800000;">“</span>).OrderBy(<span style="color: #800000;">“</span><span style="color: #800000;">CountyId</span><span style="color: #800000;">“</span>).LazyLoad();<span style="color: #008000;">//</span><span style="color: #008000;">一对多</span></pre></p></div><p>&nbsp;</p><p>city实体</p><div class="cnblogs_code"><pre><span style="color: #008080;"> 1</span> <span style="color: #000000;">    [Serializable]</span><span style="color: #008080;"> 2</span>     <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> City : BaseEntity</span><span style="color: #008080;"> 3</span> <span style="color: #000000;">    {</span><span style="color: #008080;"> 4</span>          <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span><span style="color: #008080;"> 5</span>          <span style="color: #808080;">///</span><span style="color: #008000;"> CityId</span><span style="color: #008080;"> 6</span>          <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span><span style="color: #008080;"> 7</span>         <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">virtual</span> <span style="color: #0000ff;">int</span> CityId { <span style="color: #0000ff;">get</span>; <span style="color: #0000ff;">set</span><span style="color: #000000;">; }</span><span style="color: #008080;"> 8</span> <span style="color: #008080;"> 9</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span><span style="color: #008080;">10</span>         <span style="color: #808080;">///</span><span style="color: #008000;"> Version</span><span style="color: #008080;">11</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span><span style="color: #008080;">12</span>         <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">virtual</span> <span style="color: #0000ff;">int</span> Version { <span style="color: #0000ff;">get</span>; <span style="color: #0000ff;">set</span><span style="color: #000000;">; }</span><span style="color: #008080;">13</span> <span style="color: #008080;">14</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span><span style="color: #008080;">15</span>         <span style="color: #808080;">///</span><span style="color: #008000;"> OldCityId</span><span style="color: #008080;">16</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span><span style="color: #008080;">17</span>         <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">virtual</span> <span style="color: #0000ff;">int</span> OldCityId { <span style="color: #0000ff;">get</span>; <span style="color: #0000ff;">set</span><span style="color: #000000;">; } </span><span style="color: #008080;">18</span> <span style="color: #008080;">19</span>          <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span><span style="color: #008080;">20</span>          <span style="color: #808080;">///</span><span style="color: #008000;"> ParentId</span><span style="color: #008080;">21</span>          <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span><span style="color: #008080;">22</span>         <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">virtual</span> <span style="color: #0000ff;">int</span> ParentId { <span style="color: #0000ff;">get</span>; <span style="color: #0000ff;">set</span><span style="color: #000000;">; } </span><span style="color: #008080;">23</span> <span style="color: #008080;">24</span>          <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span><span style="color: #008080;">25</span>          <span style="color: #808080;">///</span><span style="color: #008000;"> 城市名称</span><span style="color: #008080;">26</span>          <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span><span style="color: #008080;">27</span>         <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">virtual</span> <span style="color: #0000ff;">string</span> CityName { <span style="color: #0000ff;">get</span>; <span style="color: #0000ff;">set</span><span style="color: #000000;">; } </span><span style="color: #008080;">28</span> <span style="color: #008080;">29</span>          <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span><span style="color: #008080;">30</span>          <span style="color: #808080;">///</span><span style="color: #008000;"> 城市英文名称</span><span style="color: #008080;">31</span>          <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span><span style="color: #008080;">32</span>         <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">virtual</span> <span style="color: #0000ff;">string</span> EnCityName { <span style="color: #0000ff;">get</span>; <span style="color: #0000ff;">set</span><span style="color: #000000;">; } </span><span style="color: #008080;">33</span> <span style="color: #008080;">34</span>          <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span><span style="color: #008080;">35</span>          <span style="color: #808080;">///</span><span style="color: #008000;"> CityImgUrl</span><span style="color: #008080;">36</span>          <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span><span style="color: #008080;">37</span>         <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">virtual</span> <span style="color: #0000ff;">string</span> CityImgUrl { <span style="color: #0000ff;">get</span>; <span style="color: #0000ff;">set</span><span style="color: #000000;">; } </span><span style="color: #008080;">38</span> <span style="color: #008080;">39</span>          <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span><span style="color: #008080;">40</span>          <span style="color: #808080;">///</span><span style="color: #008000;"> 经纬度</span><span style="color: #008080;">41</span>          <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span><span style="color: #008080;">42</span>         <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">virtual</span> <span style="color: #0000ff;">string</span> LatLng { <span style="color: #0000ff;">get</span>; <span style="color: #0000ff;">set</span><span style="color: #000000;">; } </span><span style="color: #008080;">43</span> <span style="color: #008080;">44</span>          <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span><span style="color: #008080;">45</span>          <span style="color: #808080;">///</span><span style="color: #008000;"> 关键字</span><span style="color: #008080;">46</span>          <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span><span style="color: #008080;">47</span>         <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">virtual</span> <span style="color: #0000ff;">string</span> Keywords { <span style="color: #0000ff;">get</span>; <span style="color: #0000ff;">set</span><span style="color: #000000;">; }</span><span style="color: #008080;">48</span> <span style="color: #008080;">49</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span><span style="color: #008080;">50</span>         <span style="color: #808080;">///</span><span style="color: #008000;"> 是否推荐</span><span style="color: #008080;">51</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span><span style="color: #008080;">52</span>         <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">virtual</span> <span style="color: #0000ff;">bool</span> IsRecommend { <span style="color: #0000ff;">get</span>; <span style="color: #0000ff;">set</span><span style="color: #000000;">; }</span><span style="color: #008080;">53</span> <span style="color: #008080;">54</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span><span style="color: #008080;">55</span>         <span style="color: #808080;">///</span><span style="color: #008000;"> IsDepart</span><span style="color: #008080;">56</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span><span style="color: #008080;">57</span>         <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">virtual</span> <span style="color: #0000ff;">bool</span> IsDepart { <span style="color: #0000ff;">get</span>; <span style="color: #0000ff;">set</span><span style="color: #000000;">; } </span><span style="color: #008080;">58</span> <span style="color: #008080;">59</span>          <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span><span style="color: #008080;">60</span>          <span style="color: #808080;">///</span><span style="color: #008000;"> 航区</span><span style="color: #008080;">61</span>          <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span><span style="color: #008080;">62</span>         <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">virtual</span> <span style="color: #0000ff;">int</span> AreaId { <span style="color: #0000ff;">get</span>; <span style="color: #0000ff;">set</span><span style="color: #000000;">; } </span><span style="color: #008080;">63</span> <span style="color: #008080;">64</span>          <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span><span style="color: #008080;">65</span>          <span style="color: #808080;">///</span><span style="color: #008000;"> 城市介绍</span><span style="color: #008080;">66</span>          <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span><span style="color: #008080;">67</span>         <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">virtual</span> <span style="color: #0000ff;">string</span> CityContent { <span style="color: #0000ff;">get</span>; <span style="color: #0000ff;">set</span><span style="color: #000000;">; } </span><span style="color: #008080;">68</span> <span style="color: #008080;">69</span>     }</pre></div><p>&nbsp;</p><p>下面是操作session，进行数据库调用的方法</p><div class="cnblogs_code"><pre><span style="color: #008080;">  1</span>     <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span><span style="color: #008080;">  2</span>     <span style="color: #808080;">///</span><span style="color: #008000;"> Hibernate操作Helper </span><span style="color: #008080;">  3</span>     <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span><span style="color: #008080;">  4</span>     <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;typeparam name="T"&gt;&lt;/typeparam&gt;</span><span style="color: #008080;">  5</span>     <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> DbHelper&lt;T&gt; <span style="color: #0000ff;">where</span><span style="color: #000000;"> T : BaseEntity</span><span style="color: #008080;">  6</span> <span style="color: #000000;">    {</span><span style="color: #008080;">  7</span>         <span style="color: #0000ff;">private</span> <span style="color: #0000ff;">readonly</span> ISession _session =<span style="color: #000000;"> SessionBuilder.GetSession();</span><span style="color: #008080;">  8</span>         <span style="color: #008000;">//</span><span style="color: #008000;">protected static readonly ILog Log = LogManager.GetLogger(MethodBase.GetCurrentMethod().DeclaringType);</span><span style="color: #008080;">  9</span> <span style="color: #008080;"> 10</span>         <span style="color: #0000ff;">public</span><span style="color: #000000;"> DbHelper() { }</span><span style="color: #008080;"> 11</span> <span style="color: #008080;"> 12</span>         <span style="color: #0000ff;">public</span><span style="color: #000000;"> DbHelper(ISession session)</span><span style="color: #008080;"> 13</span> <span style="color: #000000;">        {</span><span style="color: #008080;"> 14</span>             _session =<span style="color: #000000;"> session;</span><span style="color: #008080;"> 15</span> <span style="color: #000000;">        }</span><span style="color: #008080;"> 16</span> <span style="color: #008080;"> 17</span>         <span style="color: #0000ff;">#region</span> 获取一个实体<span style="color: #008080;"> 18</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span><span style="color: #008080;"> 19</span>         <span style="color: #808080;">///</span><span style="color: #008000;"> 获取一个实体（一级缓存）</span><span style="color: #008080;"> 20</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span><span style="color: #008080;"> 21</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;param name="id"&gt;&lt;/param&gt;</span><span style="color: #008080;"> 22</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;returns&gt;&lt;/returns&gt;</span><span style="color: #008080;"> 23</span>         <span style="color: #0000ff;">public</span> T Load(<span style="color: #0000ff;">int</span><span style="color: #000000;"> id)</span><span style="color: #008080;"> 24</span> <span style="color: #000000;">        {</span><span style="color: #008080;"> 25</span>             <span style="color: #0000ff;">return</span> _session.Load&lt;T&gt;<span style="color: #000000;">(id);</span><span style="color: #008080;"> 26</span> <span style="color: #000000;">        }</span><span style="color: #008080;"> 27</span> <span style="color: #008080;"> 28</span>         <span style="color: #0000ff;">#endregion</span><span style="color: #008080;"> 29</span> <span style="color: #008080;"> 30</span>         <span style="color: #0000ff;">#region</span> 获取一个实体（缓存）<span style="color: #008080;"> 31</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span><span style="color: #008080;"> 32</span>         <span style="color: #808080;">///</span><span style="color: #008000;"> 获取一个实体（二级缓存）</span><span style="color: #008080;"> 33</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span><span style="color: #008080;"> 34</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;param name="id"&gt;&lt;/param&gt;</span><span style="color: #008080;"> 35</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;returns&gt;&lt;/returns&gt;</span><span style="color: #008080;"> 36</span>         <span style="color: #0000ff;">public</span> T Get(<span style="color: #0000ff;">int</span><span style="color: #000000;"> id)</span><span style="color: #008080;"> 37</span> <span style="color: #000000;">        {</span><span style="color: #008080;"> 38</span>             <span style="color: #0000ff;">return</span> _session.Get&lt;T&gt;<span style="color: #000000;">(id);</span><span style="color: #008080;"> 39</span> <span style="color: #000000;">        }</span><span style="color: #008080;"> 40</span>         <span style="color: #0000ff;">#endregion</span><span style="color: #008080;"> 41</span> <span style="color: #008080;"> 42</span>         <span style="color: #0000ff;">#region</span> 销毁一个实体<span style="color: #008080;"> 43</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span><span style="color: #008080;"> 44</span>         <span style="color: #808080;">///</span><span style="color: #008000;"> 销毁一个实体</span><span style="color: #008080;"> 45</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span><span style="color: #008080;"> 46</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;param name="obj"&gt;&lt;/param&gt;</span><span style="color: #008080;"> 47</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;returns&gt;&lt;/returns&gt;</span><span style="color: #008080;"> 48</span>         <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> Evict(<span style="color: #0000ff;">object</span><span style="color: #000000;"> obj)</span><span style="color: #008080;"> 49</span> <span style="color: #000000;">        {</span><span style="color: #008080;"> 50</span> <span style="color: #000000;">            _session.Evict(obj);</span><span style="color: #008080;"> 51</span> <span style="color: #000000;">        }</span><span style="color: #008080;"> 52</span>         <span style="color: #0000ff;">#endregion</span><span style="color: #008080;"> 53</span> <span style="color: #008080;"> 54</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span><span style="color: #008080;"> 55</span>         <span style="color: #808080;">///</span><span style="color: #008000;"> 根据SQL语句获取</span><span style="color: #008080;"> 56</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span><span style="color: #008080;"> 57</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;param name="sql"&gt;&lt;/param&gt;</span><span style="color: #008080;"> 58</span>         <span style="color: #0000ff;">public</span> ISQLQuery CreateSqlQuery(<span style="color: #0000ff;">string</span><span style="color: #000000;"> sql)</span><span style="color: #008080;"> 59</span> <span style="color: #000000;">        {</span><span style="color: #008080;"> 60</span>             <span style="color: #0000ff;">return</span><span style="color: #000000;"> _session.CreateSQLQuery(sql);</span><span style="color: #008080;"> 61</span> <span style="color: #000000;">        }</span><span style="color: #008080;"> 62</span> <span style="color: #008080;"> 63</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span><span style="color: #008080;"> 64</span>         <span style="color: #808080;">///</span><span style="color: #008000;"> 获取集合</span><span style="color: #008080;"> 65</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span><span style="color: #008080;"> 66</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;param name="hql"&gt;&lt;/param&gt;</span><span style="color: #008080;"> 67</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;returns&gt;&lt;/returns&gt;</span><span style="color: #008080;"> 68</span>         <span style="color: #0000ff;">public</span> ICriteria GetCriteria(<span style="color: #0000ff;">string</span><span style="color: #000000;"> hql)</span><span style="color: #008080;"> 69</span> <span style="color: #000000;">        {</span><span style="color: #008080;"> 70</span>             <span style="color: #0000ff;">return</span><span style="color: #000000;"> _session.CreateCriteria(hql);</span><span style="color: #008080;"> 71</span> <span style="color: #000000;">        }</span><span style="color: #008080;"> 72</span> <span style="color: #008080;"> 73</span>         <span style="color: #0000ff;">#region</span> 获取全部数据<span style="color: #008080;"> 74</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span><span style="color: #008080;"> 75</span>         <span style="color: #808080;">///</span><span style="color: #008000;"> 获取全部数据</span><span style="color: #008080;"> 76</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span><span style="color: #008080;"> 77</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;param name="cacheable"&gt;</span><span style="color: #008000;">是否缓存</span><span style="color: #808080;">&lt;/param&gt;</span><span style="color: #008080;"> 78</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;returns&gt;&lt;/returns&gt;</span><span style="color: #008080;"> 79</span>         <span style="color: #0000ff;">public</span> IEnumerable&lt;T&gt; GetAll(<span style="color: #0000ff;">bool</span><span style="color: #000000;"> cacheable)</span><span style="color: #008080;"> 80</span> <span style="color: #000000;">        {</span><span style="color: #008080;"> 81</span>             <span style="color: #0000ff;">var</span> ic = _session.CreateCriteria(<span style="color: #0000ff;">typeof</span><span style="color: #000000;">(T));</span><span style="color: #008080;"> 82</span>             IEnumerable&lt;T&gt; list = ic.SetCacheable(cacheable).List&lt;T&gt;() ?? <span style="color: #0000ff;">new</span> List&lt;T&gt;<span style="color: #000000;">();</span><span style="color: #008080;"> 83</span>             <span style="color: #0000ff;">return</span><span style="color: #000000;"> list;</span><span style="color: #008080;"> 84</span> <span style="color: #000000;">        }</span><span style="color: #008080;"> 85</span>         <span style="color: #0000ff;">#endregion</span><span style="color: #008080;"> 86</span> <span style="color: #008080;"> 87</span>         <span style="color: #0000ff;">#region</span> 插入或者更新数据<span style="color: #008080;"> 88</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span><span style="color: #008080;"> 89</span>         <span style="color: #808080;">///</span><span style="color: #008000;"> 插入数据</span><span style="color: #008080;"> 90</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span><span style="color: #008080;"> 91</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;param name="entity"&gt;&lt;/param&gt;</span><span style="color: #008080;"> 92</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;returns&gt;&lt;/returns&gt;</span><span style="color: #008080;"> 93</span>         <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">int</span><span style="color: #000000;"> Save(T entity)</span><span style="color: #008080;"> 94</span> <span style="color: #000000;">        {</span><span style="color: #008080;"> 95</span>             <span style="color: #0000ff;">var</span> id = <span style="color: #800080;">0</span><span style="color: #000000;">;</span><span style="color: #008080;"> 96</span>             <span style="color: #0000ff;">var</span> session = <span style="color: #0000ff;">this</span><span style="color: #000000;">._session;</span><span style="color: #008080;"> 97</span>             ITransaction tan =<span style="color: #000000;"> session.BeginTransaction();</span><span style="color: #008080;"> 98</span> <span style="color: #008080;"> 99</span>             <span style="color: #0000ff;">try</span><span style="color: #008080;">100</span> <span style="color: #000000;">            {</span><span style="color: #008080;">101</span>                 entity =<span style="color: #000000;"> session.Merge(entity);</span><span style="color: #008080;">102</span> <span style="color: #000000;">            }</span><span style="color: #008080;">103</span>             <span style="color: #0000ff;">catch</span><span style="color: #000000;"> (Exception e)</span><span style="color: #008080;">104</span> <span style="color: #000000;">            {</span><span style="color: #008080;">105</span>                 <span style="color: #008000;">//</span><span style="color: #008000;">Log.DebugFormat($"Save124，Exception：{e.Message}，entity:{JsonConvert.SerializeObject(entity)}");</span><span style="color: #008080;">106</span> <span style="color: #000000;">            }</span><span style="color: #008080;">107</span> <span style="color: #008080;">108</span>             <span style="color: #0000ff;">try</span><span style="color: #008080;">109</span> <span style="color: #000000;">            {</span><span style="color: #008080;">110</span> <span style="color: #000000;">                tan.Begin();</span><span style="color: #008080;">111</span>                 id = (<span style="color: #0000ff;">int</span><span style="color: #000000;">)session.Save(entity);</span><span style="color: #008080;">112</span> <span style="color: #000000;">                session.Flush();</span><span style="color: #008080;">113</span> <span style="color: #000000;">                tan.Commit();</span><span style="color: #008080;">114</span> <span style="color: #000000;">            }</span><span style="color: #008080;">115</span>             <span style="color: #0000ff;">catch</span><span style="color: #000000;"> (Exception e)</span><span style="color: #008080;">116</span> <span style="color: #000000;">            {</span><span style="color: #008080;">117</span>                 <span style="color: #008000;">//</span><span style="color: #008000;">Log.DebugFormat($"Save136，Exception：{e.Message}，entity:{JsonConvert.SerializeObject(entity)}");</span><span style="color: #008080;">118</span> <span style="color: #000000;">                tan.Rollback();</span><span style="color: #008080;">119</span>                 <span style="color: #0000ff;">throw</span><span style="color: #000000;">;</span><span style="color: #008080;">120</span> <span style="color: #000000;">            }</span><span style="color: #008080;">121</span> <span style="color: #008080;">122</span>             <span style="color: #0000ff;">return</span><span style="color: #000000;"> id;</span><span style="color: #008080;">123</span> <span style="color: #000000;">        }</span><span style="color: #008080;">124</span>         <span style="color: #0000ff;">#endregion</span><span style="color: #008080;">125</span> <span style="color: #008080;">126</span>         <span style="color: #0000ff;">#region</span> 更新数据<span style="color: #008080;">127</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span><span style="color: #008080;">128</span>         <span style="color: #808080;">///</span><span style="color: #008000;"> 更新数据</span><span style="color: #008080;">129</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span><span style="color: #008080;">130</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;param name="entity"&gt;&lt;/param&gt;</span><span style="color: #008080;">131</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;returns&gt;&lt;/returns&gt;</span><span style="color: #008080;">132</span>         <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">int</span><span style="color: #000000;"> Update(T entity)</span><span style="color: #008080;">133</span> <span style="color: #000000;">        {</span><span style="color: #008080;">134</span>             <span style="color: #0000ff;">int</span> result = <span style="color: #800080;">0</span><span style="color: #000000;">;</span><span style="color: #008080;">135</span>             ITransaction tan =<span style="color: #000000;"> _session.BeginTransaction();</span><span style="color: #008080;">136</span>             <span style="color: #0000ff;">var</span> session = <span style="color: #0000ff;">this</span><span style="color: #000000;">._session;</span><span style="color: #008080;">137</span>             <span style="color: #008000;">//</span><span style="color: #008000;">entity = (T)_session.Merge(entity);</span><span style="color: #008080;">138</span>             <span style="color: #0000ff;">try</span><span style="color: #008080;">139</span> <span style="color: #000000;">            {</span><span style="color: #008080;">140</span>                 entity =<span style="color: #000000;"> session.Merge(entity);</span><span style="color: #008080;">141</span> <span style="color: #000000;">            }</span><span style="color: #008080;">142</span>             <span style="color: #0000ff;">catch</span><span style="color: #000000;"> (Exception e)</span><span style="color: #008080;">143</span> <span style="color: #000000;">            {</span><span style="color: #008080;">144</span>                 <span style="color: #008000;">//</span><span style="color: #008000;">Log.DebugFormat($"Update163，Exception：{e.Message}，entity:{JsonConvert.SerializeObject(entity)}");</span><span style="color: #008080;">145</span> <span style="color: #000000;">            }</span><span style="color: #008080;">146</span>             <span style="color: #0000ff;">try</span><span style="color: #008080;">147</span> <span style="color: #000000;">            {</span><span style="color: #008080;">148</span> <span style="color: #000000;">                tan.Begin();</span><span style="color: #008080;">149</span> <span style="color: #000000;">                _session.Update(entity);</span><span style="color: #008080;">150</span> <span style="color: #000000;">                _session.Flush();</span><span style="color: #008080;">151</span> <span style="color: #000000;">                tan.Commit();</span><span style="color: #008080;">152</span>                 result++<span style="color: #000000;">;</span><span style="color: #008080;">153</span> <span style="color: #000000;">            }</span><span style="color: #008080;">154</span>             <span style="color: #0000ff;">catch</span><span style="color: #000000;"> (Exception e)</span><span style="color: #008080;">155</span> <span style="color: #000000;">            {</span><span style="color: #008080;">156</span>                 <span style="color: #008000;">//</span><span style="color: #008000;">Log.DebugFormat($"Update175，Exception：{e.Message}，entity:{JsonConvert.SerializeObject(entity)}");</span><span style="color: #008080;">157</span> <span style="color: #000000;">                tan.Rollback();</span><span style="color: #008080;">158</span>                 <span style="color: #0000ff;">throw</span><span style="color: #000000;">;</span><span style="color: #008080;">159</span> <span style="color: #000000;">            }</span><span style="color: #008080;">160</span>             <span style="color: #0000ff;">return</span><span style="color: #000000;"> result;</span><span style="color: #008080;">161</span> <span style="color: #000000;">        }</span><span style="color: #008080;">162</span>         <span style="color: #0000ff;">#endregion</span><span style="color: #008080;">163</span> <span style="color: #008080;">164</span>         <span style="color: #0000ff;">#region</span> 删除一条数据<span style="color: #008080;">165</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span><span style="color: #008080;">166</span>         <span style="color: #808080;">///</span><span style="color: #008000;"> 删除一条数据</span><span style="color: #008080;">167</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span><span style="color: #008080;">168</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;param name="id"&gt;&lt;/param&gt;</span><span style="color: #008080;">169</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;returns&gt;&lt;/returns&gt;</span><span style="color: #008080;">170</span>         <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">int</span> DeleteModelById(<span style="color: #0000ff;">int</span><span style="color: #000000;"> id)</span><span style="color: #008080;">171</span> <span style="color: #000000;">        {</span><span style="color: #008080;">172</span>             <span style="color: #0000ff;">int</span> result = <span style="color: #800080;">0</span><span style="color: #000000;">;</span><span style="color: #008080;">173</span>             <span style="color: #0000ff;">object</span> item =<span style="color: #000000;"> Get(id);</span><span style="color: #008080;">174</span>             <span style="color: #008000;">//</span><span style="color: #008000;">ITransaction tan = _session.BeginTransaction();</span><span style="color: #008080;">175</span>             <span style="color: #0000ff;">try</span><span style="color: #008080;">176</span> <span style="color: #000000;">            {</span><span style="color: #008080;">177</span>                 <span style="color: #008000;">//</span><span style="color: #008000;">tan.Begin();</span><span style="color: #008080;">178</span> <span style="color: #000000;">                _session.Delete(item);</span><span style="color: #008080;">179</span> <span style="color: #000000;">                _session.Flush();</span><span style="color: #008080;">180</span>                 <span style="color: #008000;">//</span><span style="color: #008000;">tan.Commit();</span><span style="color: #008080;">181</span>                 result++<span style="color: #000000;">;</span><span style="color: #008080;">182</span> <span style="color: #000000;">            }</span><span style="color: #008080;">183</span>             <span style="color: #0000ff;">catch</span><span style="color: #000000;"> (Exception)</span><span style="color: #008080;">184</span> <span style="color: #000000;">            {</span><span style="color: #008080;">185</span>                 <span style="color: #008000;">//</span><span style="color: #008000;">tan.Rollback();</span><span style="color: #008080;">186</span>                 <span style="color: #0000ff;">throw</span><span style="color: #000000;">;</span><span style="color: #008080;">187</span> <span style="color: #000000;">            }</span><span style="color: #008080;">188</span> <span style="color: #008080;">189</span>             <span style="color: #0000ff;">return</span><span style="color: #000000;"> result;</span><span style="color: #008080;">190</span> <span style="color: #000000;">        }</span><span style="color: #008080;">191</span>         <span style="color: #0000ff;">#endregion</span><span style="color: #008080;">192</span> <span style="color: #008080;">193</span>         <span style="color: #0000ff;">#region</span> 删除一个实体对象<span style="color: #008080;">194</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span><span style="color: #008080;">195</span>         <span style="color: #808080;">///</span><span style="color: #008000;"> 删除一个实体对象</span><span style="color: #008080;">196</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span><span style="color: #008080;">197</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;param name="entity"&gt;&lt;/param&gt;</span><span style="color: #008080;">198</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;returns&gt;&lt;/returns&gt;</span><span style="color: #008080;">199</span>         <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">int</span><span style="color: #000000;"> DeleteModel(BaseEntity entity)</span><span style="color: #008080;">200</span> <span style="color: #000000;">        {</span><span style="color: #008080;">201</span>             <span style="color: #0000ff;">var</span> result = <span style="color: #800080;">0</span><span style="color: #000000;">;</span><span style="color: #008080;">202</span>             <span style="color: #008000;">//</span><span style="color: #008000;">ITransaction tan = _session.BeginTransaction();</span><span style="color: #008080;">203</span>             <span style="color: #0000ff;">try</span><span style="color: #008080;">204</span> <span style="color: #000000;">            {</span><span style="color: #008080;">205</span>                 <span style="color: #008000;">//</span><span style="color: #008000;">tan.Begin();</span><span style="color: #008080;">206</span> <span style="color: #000000;">                _session.Delete(entity);</span><span style="color: #008080;">207</span> <span style="color: #000000;">                _session.Flush();</span><span style="color: #008080;">208</span>                 <span style="color: #008000;">//</span><span style="color: #008000;">tan.Commit();</span><span style="color: #008080;">209</span>                 result++<span style="color: #000000;">;</span><span style="color: #008080;">210</span> <span style="color: #000000;">            }</span><span style="color: #008080;">211</span>             <span style="color: #0000ff;">catch</span><span style="color: #000000;"> (Exception)</span><span style="color: #008080;">212</span> <span style="color: #000000;">            {</span><span style="color: #008080;">213</span>                 <span style="color: #008000;">//</span><span style="color: #008000;">tan.Rollback();</span><span style="color: #008080;">214</span>                 <span style="color: #0000ff;">throw</span><span style="color: #000000;">;</span><span style="color: #008080;">215</span> <span style="color: #000000;">            }</span><span style="color: #008080;">216</span>             <span style="color: #0000ff;">return</span><span style="color: #000000;"> result;</span><span style="color: #008080;">217</span> <span style="color: #000000;">        }</span><span style="color: #008080;">218</span>         <span style="color: #0000ff;">#endregion</span><span style="color: #008080;">219</span> <span style="color: #008080;">220</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span><span style="color: #008080;">221</span>         <span style="color: #808080;">///</span><span style="color: #008000;"> 根据SQL语句删除</span><span style="color: #008080;">222</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span><span style="color: #008080;">223</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;param name="sql"&gt;&lt;/param&gt;</span><span style="color: #008080;">224</span>         <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> DeleteList(<span style="color: #0000ff;">string</span><span style="color: #000000;"> sql)</span><span style="color: #008080;">225</span> <span style="color: #000000;">        {</span><span style="color: #008080;">226</span> <span style="color: #000000;">            _session.CreateSQLQuery(sql).UniqueResult();</span><span style="color: #008080;">227</span> <span style="color: #000000;">        }</span><span style="color: #008080;">228</span> <span style="color: #008080;">229</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span><span style="color: #008080;">230</span>         <span style="color: #808080;">///</span><span style="color: #008000;"> 删除泛型集合</span><span style="color: #008080;">231</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span><span style="color: #008080;">232</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;param name="models"&gt;&lt;/param&gt;</span><span style="color: #008080;">233</span>         <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> DeleteList(IList&lt;T&gt;<span style="color: #000000;"> models)</span><span style="color: #008080;">234</span> <span style="color: #000000;">        {</span><span style="color: #008080;">235</span>             <span style="color: #0000ff;">foreach</span> (<span style="color: #0000ff;">var</span> model <span style="color: #0000ff;">in</span><span style="color: #000000;"> models)</span><span style="color: #008080;">236</span> <span style="color: #000000;">            {</span><span style="color: #008080;">237</span> <span style="color: #000000;">                DeleteModel(model);</span><span style="color: #008080;">238</span> <span style="color: #000000;">            }</span><span style="color: #008080;">239</span> <span style="color: #000000;">        }</span><span style="color: #008080;">240</span> <span style="color: #008080;">241</span>         <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">bool</span> IsExist(Expression&lt;Func&lt;T, <span style="color: #0000ff;">bool</span>&gt;&gt;<span style="color: #000000;"> keyWhere)</span><span style="color: #008080;">242</span> <span style="color: #000000;">        {</span><span style="color: #008080;">243</span>             <span style="color: #0000ff;">var</span> ss = _session.QueryOver&lt;T&gt;<span style="color: #000000;">().Where(keyWhere);</span><span style="color: #008080;">244</span>             <span style="color: #0000ff;">return</span> ss.RowCount() &gt; <span style="color: #800080;">0</span><span style="color: #000000;">;</span><span style="color: #008080;">245</span> <span style="color: #000000;">        }</span><span style="color: #008080;">246</span> <span style="color: #008080;">247</span>         <span style="color: #0000ff;">#region</span> GetQuery<span style="color: #008080;">248</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span><span style="color: #008080;">249</span>         <span style="color: #808080;">///</span><span style="color: #008000;"> GetQuery</span><span style="color: #008080;">250</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span><span style="color: #008080;">251</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;returns&gt;&lt;/returns&gt;</span><span style="color: #008080;">252</span>         <span style="color: #0000ff;">public</span> IQueryable&lt;T&gt;<span style="color: #000000;"> GetQuery()</span><span style="color: #008080;">253</span> <span style="color: #000000;">        {</span><span style="color: #008080;">254</span>             <span style="color: #0000ff;">try</span><span style="color: #008080;">255</span> <span style="color: #000000;">            {</span><span style="color: #008080;">256</span>                 <span style="color: #0000ff;">return</span> _session.Query&lt;T&gt;<span style="color: #000000;">();</span><span style="color: #008080;">257</span> <span style="color: #000000;">            }</span><span style="color: #008080;">258</span>             <span style="color: #0000ff;">catch</span><span style="color: #000000;"> (Exception e)</span><span style="color: #008080;">259</span> <span style="color: #000000;">            {</span><span style="color: #008080;">260</span>                 <span style="color: #0000ff;">var</span> session =<span style="color: #000000;"> SessionBuilder.GetSession();</span><span style="color: #008080;">261</span>                 <span style="color: #0000ff;">return</span> session.Query&lt;T&gt;<span style="color: #000000;">();</span><span style="color: #008080;">262</span> <span style="color: #000000;">            }</span><span style="color: #008080;">263</span> <span style="color: #000000;">        }</span><span style="color: #008080;">264</span>         <span style="color: #0000ff;">#endregion</span><span style="color: #008080;">265</span> <span style="color: #008080;">266</span>         <span style="color: #0000ff;">#region</span> GetQueryOver<span style="color: #008080;">267</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span><span style="color: #008080;">268</span>         <span style="color: #808080;">///</span><span style="color: #008000;"> GetQueryOver</span><span style="color: #008080;">269</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span><span style="color: #008080;">270</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;returns&gt;&lt;/returns&gt;</span><span style="color: #008080;">271</span>         <span style="color: #0000ff;">public</span> IQueryOver&lt;T, T&gt; GetQueryOver(Expression&lt;Func&lt;T, <span style="color: #0000ff;">bool</span>&gt;&gt;<span style="color: #000000;"> keyWhere)</span><span style="color: #008080;">272</span> <span style="color: #000000;">        {</span><span style="color: #008080;">273</span>             <span style="color: #0000ff;">return</span> _session.QueryOver&lt;T&gt;<span style="color: #000000;">().Where(keyWhere);</span><span style="color: #008080;">274</span> <span style="color: #000000;">        }</span><span style="color: #008080;">275</span> <span style="color: #008080;">276</span>         <span style="color: #0000ff;">#endregion</span><span style="color: #008080;">277</span> <span style="color: #008080;">278</span>         <span style="color: #0000ff;">#region</span> GetQueryOver<span style="color: #008080;">279</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span><span style="color: #008080;">280</span>         <span style="color: #808080;">///</span><span style="color: #008000;"> GetQueryOver</span><span style="color: #008080;">281</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span><span style="color: #008080;">282</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;returns&gt;&lt;/returns&gt;</span><span style="color: #008080;">283</span>         <span style="color: #0000ff;">public</span> IQueryOver&lt;T, T&gt;<span style="color: #000000;"> GetQueryOver()</span><span style="color: #008080;">284</span> <span style="color: #000000;">        {</span><span style="color: #008080;">285</span>             <span style="color: #0000ff;">return</span> _session.QueryOver&lt;T&gt;<span style="color: #000000;">();</span><span style="color: #008080;">286</span> <span style="color: #000000;">        }</span><span style="color: #008080;">287</span>         <span style="color: #0000ff;">#endregion</span><span style="color: #008080;">288</span> <span style="color: #008080;">289</span>         <span style="color: #0000ff;">#region</span> 获取集合ByHql<span style="color: #008080;">290</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span><span style="color: #008080;">291</span>         <span style="color: #808080;">///</span><span style="color: #008000;"> 获取集合ByHql</span><span style="color: #008080;">292</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span><span style="color: #008080;">293</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;param name="strHql"&gt;&lt;/param&gt;</span><span style="color: #008080;">294</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;returns&gt;&lt;/returns&gt;</span><span style="color: #008080;">295</span>         <span style="color: #0000ff;">public</span> IQuery GetQueryByHql(<span style="color: #0000ff;">string</span><span style="color: #000000;"> strHql)</span><span style="color: #008080;">296</span> <span style="color: #000000;">        {</span><span style="color: #008080;">297</span>             <span style="color: #0000ff;">return</span><span style="color: #000000;"> _session.CreateQuery(strHql);</span><span style="color: #008080;">298</span> <span style="color: #000000;">        }</span><span style="color: #008080;">299</span>         <span style="color: #0000ff;">#endregion</span><span style="color: #008080;">300</span> <span style="color: #008080;">301</span>         <span style="color: #0000ff;">#region</span> 获取集合BySql<span style="color: #008080;">302</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span><span style="color: #008080;">303</span>         <span style="color: #808080;">///</span><span style="color: #008000;"> 获取集合BySql</span><span style="color: #008080;">304</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span><span style="color: #008080;">305</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;param name="strSql"&gt;&lt;/param&gt;</span><span style="color: #008080;">306</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;returns&gt;&lt;/returns&gt;</span><span style="color: #008080;">307</span>         <span style="color: #0000ff;">public</span> IQuery GetQueryBySql(<span style="color: #0000ff;">string</span><span style="color: #000000;"> strSql)</span><span style="color: #008080;">308</span> <span style="color: #000000;">        {</span><span style="color: #008080;">309</span>             <span style="color: #0000ff;">return</span><span style="color: #000000;"> _session.CreateSQLQuery(strSql);</span><span style="color: #008080;">310</span> <span style="color: #000000;">        }</span><span style="color: #008080;">311</span>         <span style="color: #0000ff;">#endregion</span><span style="color: #008080;">312</span>     }</pre></div><p>&nbsp;</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MVC5项目转.Net Core 2.2学习与填坑记录（1）</title>
      <link href="/2019/06/28/cnblogs/11102764/"/>
      <url>/2019/06/28/cnblogs/11102764/</url>
      
        <content type="html"><![CDATA[<p>流程都是自己摸索，错误地方随便指正。。。</p><p>老项目过于臃肿，并且所有请求都是提交到一个api中，这样当api挂掉的时候，基本所有的项目都瘫痪掉了。</p><p>在4月底的时候，下决心将项目用微服务进行重写，刚开始的时候，希望能找到.net framework的微服务解决方案，最后发现，一个都没有。。。并且一个人开发，重写的时间很难控制，决定用.Net Core来进行基础的重写，重点代码迁移过来，这样可以节省一点时间。</p><p>新项目使用了Ocelot来做apigateway，进行api转发，IdentityServer4进行认证。</p><p>ORM老项目使用的是NHiberante，但是总感觉NHiberante过于臃肿，新项目开发的时候，找到了一个新的ORM sqlsugar，但是sqlsugar的语法和NHiberante的语法差别很大，对于项目迁移来说工程量太大，所以暂时还是用的NHiberante，等闲下来的时候再重写下sqlsugar，将语法尽量同步后再用sqlsugar替换掉。</p><p>&nbsp;1.<span style="color: #ff0000;"><a title="NHiberante从.net framework转移到.net standard(.net core 2.2)时遇到的坑及填坑" href="https://www.cnblogs.com/wangpengzong/p/11103355.html" target="_blank"><span style="color: #ff0000;">NHiberante从.net&nbsp;framework转移到.net standard时遇到的坑</span></a></span></p><p>&nbsp;2.<span style="color: #ff0000;"><a id="cb_post_title_url" class="postTitle2" title="html标签从.net framework转移到.net standard(.net core 2.2)时遇到的坑及填坑" href="https://www.cnblogs.com/wangpengzong/p/11103547.html"><span style="color: #ff0000;">html标签从.net framework转移到.net standard(.net core 2.2)时遇到的坑及填坑</span></a></span></p><p>&nbsp;3.<span style="color: #ff0000;"><a title="SignalR从.net framework转移到.net standard(.net core 2.2)" href="https://www.cnblogs.com/wangpengzong/p/11175665.html" target="_blank"><span style="color: #ff0000;">SignalR从.net framework转移到.net standard(.net core 2.2)</span></a></span></p><p><span style="color: #ff0000;"><span style="color: #ff0000;">&nbsp;<span style="color: #000000;">4.<span style="color: #ff0000;"><a href="https://github.com/dotnet/aspnetcore/issues/17003" target="_blank"><span style="color: #ff0000;">System.Text.Encoding.Default.GetBytes()从.net framework转移到.net standard遇到的转码结果不同问题</span></a></span></span></span></span></p><p>&nbsp;</p>]]></content>
      
      
      
        <tags>
            
            <tag> .Net Core 2.2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/01/20/hello-world/"/>
      <url>/2019/01/20/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>reactnative中FlatList上拉加载更多的解决办法</title>
      <link href="/2017/07/14/cnblogs/7170210/"/>
      <url>/2017/07/14/cnblogs/7170210/</url>
      
        <content type="html"><![CDATA[<p>项目app中用到了list滚动加载，把List做了下对比发现FlatList比较适合自己的项目，但是在实际运用中</p><h4 class="propTitle">onEndReached方法需要给定</h4><h4 class="propTitle">onEndReachedThreshold的高度</h4><p><img src="http://images2015.cnblogs.com/blog/789895/201707/789895-20170714143016228-154295959.png" class="lazyload placeholder" data-srcset="http://images2015.cnblogs.com/blog/789895/201707/789895-20170714143016228-154295959.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /></p><p>但是给定0和1之间的值也没有找到正确的办法 &nbsp;，会出现以下几个情况：</p><p>1.如果在onEndReached中更改data数据源，那么会出现循环调用;</p><p>2.将onEndReachedThreshold设置为0,则一直不会调用</p><p>3.将onEndReachedThreshold设置为大于0的值，则会调用多次onEndReached 方法，但是都是在页面加载完成之后，并且也不会出现"当列表被滚动到距离内容最底部不足<code>onEndReachedThreshold</code>的距离时调用"</p><p>在网上找了很久，终于找到一个解决办法</p><p>&nbsp;<img src="http://images2015.cnblogs.com/blog/789895/201707/789895-20170714143616759-1043984784.png" class="lazyload placeholder" data-srcset="http://images2015.cnblogs.com/blog/789895/201707/789895-20170714143616759-1043984784.png" srcset="https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg" alt="" /></p><p>&nbsp;</p><p>摘自https://www.questarter.com/q/flatlist-39-s-onendreached-not-fire-unless-setting-height-explicitly-in-react-native-27_43444690.html</p>]]></content>
      
      
      
        <tags>
            
            <tag> FlatList </tag>
            
            <tag> reactnative </tag>
            
            <tag> 上拉加载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初学者-微信小程序 问题解决办法记录</title>
      <link href="/2016/11/24/cnblogs/6096502/"/>
      <url>/2016/11/24/cnblogs/6096502/</url>
      
        <content type="html"><![CDATA[<p>1.tabBar不显示的问题</p><p>&nbsp; &nbsp; 1），检查大小写</p><p>&nbsp; &nbsp; 2），pagePath路径书写，和pages路径一样，不能多或者少一个&ldquo;/&rdquo;或者&ldquo;?&rdquo;</p><p>2.tabBar和navigationBarTitleText中文乱码问题（VS编写）</p><p>&nbsp; &nbsp;现在没有找到原因，有可能是编码问题。暂时解决办法：在开发者工具里面编辑之后工具自动同步到编辑器（VS）里面</p><p>&nbsp; &nbsp;如果在VS编写，工具自动刷新就有可能出现中文乱码</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>初学者-ASCII码 数字转字母</title>
      <link href="/2015/12/29/cnblogs/5085021/"/>
      <url>/2015/12/29/cnblogs/5085021/</url>
      
        <content type="html"><![CDATA[<p>var index=1;</p><p>var byt = new byte[1] {(byte) (index + 64)};<br />        var grade = Encoding.ASCII.GetString(byt);</p><p>1转换为a;</p><p>在百度上面查询时很多知识纯粹的ASCII对应的码值转换，初学者如果少加了64就一直会得不到正确的数据</p>]]></content>
      
      
      
        <tags>
            
            <tag> ASCII </tag>
            
            <tag> 数字转换字母 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
